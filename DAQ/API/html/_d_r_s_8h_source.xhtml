<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<title>/data/Software/DAQ/PDAQ/Core/Include/DRS.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="splash_API.png"/></td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_d_r_s_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">DRS.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_d_r_s_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/********************************************************************</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">  DRS.h, S.Ritt, M. Schneebeli - PSI</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">  $Id: DRS.h 21309 2014-04-11 14:51:29Z ritt $</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">********************************************************************/</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#ifndef DRS_H</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#define DRS_H</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;string.h&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="averager_8h.xhtml">averager.h</a>&quot;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#ifdef HAVE_LIBUSB</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#   ifndef HAVE_USB</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#      define HAVE_USB</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#   endif</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#ifdef HAVE_USB</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#   include &lt;<a class="code" href="musbstd_8h.xhtml">musbstd.h</a>&gt;</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#endif                          // HAVE_USB</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#ifdef HAVE_VME</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#   include &lt;mvmestd.h&gt;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#endif                          // HAVE_VME</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">/* disable &quot;deprecated&quot; warning */</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#ifdef _MSC_VER</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#pragma warning(disable: 4996)</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#ifndef NULL</span></div><div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a070d2ce7b6bb7e5c05602aa8c308d0c4">   33</a></span>&#160;<span class="preprocessor">#define NULL 0</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keywordtype">int</span> <a class="code" href="_d_r_s_8h.xhtml#acbf2a58cb5683b4598d48cf293852929">drs_kbhit</a>();</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="_d_r_s_8h.xhtml#a0521e6f7f9747c49fea173b1d1732584">millitime</a>();</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">/* transport mode */</span></div><div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a153539222b272f29b76f0be83482e5f3">   40</a></span>&#160;<span class="preprocessor">#define TR_VME   1</span></div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a5573b59a860132b80d56c2aca1aa9f05">   41</a></span>&#160;<span class="preprocessor">#define TR_USB   2</span></div><div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#acad7a96a536d68e70eda5055faa7b7e2">   42</a></span>&#160;<span class="preprocessor">#define TR_USB2  3</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">/* address types */</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#ifndef T_CTRL</span></div><div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a41be2aff9e11e28c453f8b9d9d51b096">   46</a></span>&#160;<span class="preprocessor">#define T_CTRL   1</span></div><div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#afb118c0cc0e4647aa943685fde2da13b">   47</a></span>&#160;<span class="preprocessor">#define T_STATUS 2</span></div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a466bd3b2be29eb5f885126704a1de384">   48</a></span>&#160;<span class="preprocessor">#define T_RAM    3</span></div><div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#afced54d5f83904625dc3e45eca7a4a7e">   49</a></span>&#160;<span class="preprocessor">#define T_FIFO   4</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">/*---- Register addresses ------------------------------------------*/</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a21c5cad225a4b89abd78fa0dd11124ed">   54</a></span>&#160;<span class="preprocessor">#define REG_CTRL                     0x00000    </span><span class="comment">/* 32 bit control reg */</span><span class="preprocessor"></span></div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a369165a30537e2ec8234a2cc165378b1">   55</a></span>&#160;<span class="preprocessor">#define REG_DAC_OFS                  0x00004</span></div><div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a85b18e3b5a5c02a07662c1fddadb96fa">   56</a></span>&#160;<span class="preprocessor">#define REG_DAC0                     0x00004</span></div><div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a5205a82a5b1a5347dfd62b5098721b87">   57</a></span>&#160;<span class="preprocessor">#define REG_DAC1                     0x00006</span></div><div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#aa225dec18566b7b50643aeb6359582e1">   58</a></span>&#160;<span class="preprocessor">#define REG_DAC2                     0x00008</span></div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a7aa4891ae7ed50ef6865455c40aadb04">   59</a></span>&#160;<span class="preprocessor">#define REG_DAC3                     0x0000A</span></div><div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#aafe41396eb26eea22a6199fc366aa71a">   60</a></span>&#160;<span class="preprocessor">#define REG_DAC4                     0x0000C</span></div><div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a0183715250ce4a67238c5124c4c523b3">   61</a></span>&#160;<span class="preprocessor">#define REG_DAC5                     0x0000E</span></div><div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a20dc6cb4a1d8ce60b4da23433c88d7cc">   62</a></span>&#160;<span class="preprocessor">#define REG_DAC6                     0x00010</span></div><div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a83dafceff9f43b5515ba41f6bd892bf6">   63</a></span>&#160;<span class="preprocessor">#define REG_DAC7                     0x00012</span></div><div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#afda510a9cfaf5a34f7af1a4685f81696">   64</a></span>&#160;<span class="preprocessor">#define REG_CHANNEL_CONFIG           0x00014    // low byte</span></div><div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a679325263fb326462f7410d3292171be">   65</a></span>&#160;<span class="preprocessor">#define REG_CONFIG                   0x00014    // high byte</span></div><div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#ace5402bfabb97cde0b5008de922b1918">   66</a></span>&#160;<span class="preprocessor">#define REG_CHANNEL_MODE             0x00016</span></div><div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a233380f0f2f2838fc7528c201827000e">   67</a></span>&#160;<span class="preprocessor">#define REG_ADCCLK_PHASE             0x00016</span></div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a24f5cad7d041a6f2c89742ddee3618f4">   68</a></span>&#160;<span class="preprocessor">#define REG_FREQ_SET_HI              0x00018    // DRS2</span></div><div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a3c565c105006030c56c3b9f2dfc065a5">   69</a></span>&#160;<span class="preprocessor">#define REG_FREQ_SET_LO              0x0001A    // DRS2</span></div><div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#abeb52079f63788fa6451051580ebc5cc">   70</a></span>&#160;<span class="preprocessor">#define REG_TRG_DELAY                0x00018    // DRS4</span></div><div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#ad9615c71a1e28fdd136ebbacebcd8575">   71</a></span>&#160;<span class="preprocessor">#define REG_FREQ_SET                 0x0001A    // DRS4</span></div><div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a9d666e9231cefe388b2867e0863453e0">   72</a></span>&#160;<span class="preprocessor">#define REG_TRIG_DELAY               0x0001C</span></div><div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a89903d3566962650a2e9b062a223abb0">   73</a></span>&#160;<span class="preprocessor">#define REG_LMK_MSB                  0x0001C    // DRS4 Mezz</span></div><div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a4f879b38758714cc4b5b3eb7358f05c9">   74</a></span>&#160;<span class="preprocessor">#define REG_CALIB_TIMING             0x0001E    // DRS2</span></div><div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a6c6a68e121dc31e2ef928b4f12656c87">   75</a></span>&#160;<span class="preprocessor">#define REG_EEPROM_PAGE_EVAL         0x0001E    // DRS4 Eval</span></div><div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a266174636d058d25714f6c1830330b5f">   76</a></span>&#160;<span class="preprocessor">#define REG_EEPROM_PAGE_MEZZ         0x0001A    // DRS4 Mezz</span></div><div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a1d5938193afd9fbd7e4577b097d3bcae">   77</a></span>&#160;<span class="preprocessor">#define REG_TRG_CONFIG               0x0001C    // DRS4 Eval4</span></div><div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a47842dc9254c6c43a24ef593d0919922">   78</a></span>&#160;<span class="preprocessor">#define REG_LMK_LSB                  0x0001E    // DRS4 Mezz</span></div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#ac99cb181251497fc0cb503c13032dc73">   79</a></span>&#160;<span class="preprocessor">#define REG_WARMUP                   0x00020    // DRS4 Mezz</span></div><div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#ad31f0464148cd16974ceb55575248501">   80</a></span>&#160;<span class="preprocessor">#define REG_COOLDOWN                 0x00022    // DRS4 Mezz</span></div><div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a7e969b4c772fb2469e0bdab93ddbaa95">   81</a></span>&#160;<span class="preprocessor">#define REG_READ_POINTER             0x00026    // DRS4 Mezz</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#ab6a7f74fb5e1c638c0f77fad6cc80896">   83</a></span>&#160;<span class="preprocessor">#define REG_MAGIC                    0x00000</span></div><div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#af38e236162be449947ee52015222ebdd">   84</a></span>&#160;<span class="preprocessor">#define REG_BOARD_TYPE               0x00002</span></div><div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a2306dddc82e5e58f23bd44c1086a5b6f">   85</a></span>&#160;<span class="preprocessor">#define REG_STATUS                   0x00004</span></div><div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a4ae5ce8bdae33987bf66eec96acae8b3">   86</a></span>&#160;<span class="preprocessor">#define REG_RDAC_OFS                 0x0000E</span></div><div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a07205382d9ea78fc8cf3c5851e5f3036">   87</a></span>&#160;<span class="preprocessor">#define REG_RDAC0                    0x00008</span></div><div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#ab0336b1bcdf2bbc1160e11dee51ea313">   88</a></span>&#160;<span class="preprocessor">#define REG_STOP_CELL0               0x00008</span></div><div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a2e7a9680108c439a7c1d2c3572dcf813">   89</a></span>&#160;<span class="preprocessor">#define REG_RDAC1                    0x0000A</span></div><div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a2d69a070614a328d5ff82f22aa246375">   90</a></span>&#160;<span class="preprocessor">#define REG_STOP_CELL1               0x0000A</span></div><div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#ad48046a9b1a47038225e7eca9a8ed45d">   91</a></span>&#160;<span class="preprocessor">#define REG_RDAC2                    0x0000C</span></div><div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a5415e79e774ef033ac2df32f9239798f">   92</a></span>&#160;<span class="preprocessor">#define REG_STOP_CELL2               0x0000C</span></div><div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a5c068e2a3a0a765383ab5c01d3c52800">   93</a></span>&#160;<span class="preprocessor">#define REG_RDAC3                    0x0000E</span></div><div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a7b4b44b6bf11c2bf5aec62b8f3eeefec">   94</a></span>&#160;<span class="preprocessor">#define REG_STOP_CELL3               0x0000E</span></div><div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#ab7e0e9a47780100039a4011c166afafd">   95</a></span>&#160;<span class="preprocessor">#define REG_RDAC4                    0x00000</span></div><div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a08f569d5d00e4612cf6ef9b4e3da585c">   96</a></span>&#160;<span class="preprocessor">#define REG_RDAC5                    0x00002</span></div><div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a4ef121f1f51529624fdf47511c27b274">   97</a></span>&#160;<span class="preprocessor">#define REG_STOP_WSR0                0x00010</span></div><div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#ae1e05dacc3beb5fd4c68871b6aa80247">   98</a></span>&#160;<span class="preprocessor">#define REG_STOP_WSR1                0x00011</span></div><div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a1d45939a9fff4eac45f5ebcbd11e69e5">   99</a></span>&#160;<span class="preprocessor">#define REG_STOP_WSR2                0x00012</span></div><div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#ac1b5d3cbf3b2ed1373db92b3b948162b">  100</a></span>&#160;<span class="preprocessor">#define REG_STOP_WSR3                0x00013</span></div><div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a0ade8dc4080f0496682464dbb697ee8c">  101</a></span>&#160;<span class="preprocessor">#define REG_RDAC6                    0x00014</span></div><div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#aa8780df3e0c0ae28f7109bd611fd0c2f">  102</a></span>&#160;<span class="preprocessor">#define REG_RDAC7                    0x00016</span></div><div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a8aa6ff7ea18a78b67b9cc8d737f0f2a0">  103</a></span>&#160;<span class="preprocessor">#define REG_EVENTS_IN_FIFO           0x00018</span></div><div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a4ca14932c6d5fee04bd5a487a90d25cc">  104</a></span>&#160;<span class="preprocessor">#define REG_EVENT_COUNT              0x0001A</span></div><div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#aa3a0d4be2aadc7679883ef5fa6dd89a0">  105</a></span>&#160;<span class="preprocessor">#define REG_FREQ1                    0x0001C</span></div><div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a210043a09e60d08dc2fced63a68e442a">  106</a></span>&#160;<span class="preprocessor">#define REG_FREQ2                    0x0001E</span></div><div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#aed70f297d0d5355db5d196f73b636d20">  107</a></span>&#160;<span class="preprocessor">#define REG_WRITE_POINTER            0x0001E</span></div><div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a9814a9d9688d062990aa6633e8cb3d8e">  108</a></span>&#160;<span class="preprocessor">#define REG_TEMPERATURE              0x00020</span></div><div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a675ff0f8902fcc392b6d61f02271da07">  109</a></span>&#160;<span class="preprocessor">#define REG_TRIGGER_BUS              0x00022</span></div><div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#aa69b7e6780043e4a7e29e3c9810708c2">  110</a></span>&#160;<span class="preprocessor">#define REG_SERIAL_BOARD             0x00024</span></div><div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#ace070cbb6ec88318ce9919ba6904f1e5">  111</a></span>&#160;<span class="preprocessor">#define REG_VERSION_FW               0x00026</span></div><div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#ac6cc0512a2d15a6e05e32fb42593a07b">  112</a></span>&#160;<span class="preprocessor">#define REG_SCALER0                  0x00028</span></div><div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#ac84763be3aa9fab9695aab7f358560db">  113</a></span>&#160;<span class="preprocessor">#define REG_SCALER1                  0x0002C</span></div><div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#aea77b878bb095dd98d255023b5145cdf">  114</a></span>&#160;<span class="preprocessor">#define REG_SCALER2                  0x00030</span></div><div class="line"><a name="l00115"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a2cbbdbc2ea1a1b131fb268866f04ac3b">  115</a></span>&#160;<span class="preprocessor">#define REG_SCALER3                  0x00034</span></div><div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a482b37ff8eb96947949203c6e93c95d0">  116</a></span>&#160;<span class="preprocessor">#define REG_SCALER4                  0x00038</span></div><div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#ad3eedb9786cca2cfb958382e94050e75">  117</a></span>&#160;<span class="preprocessor">#define REG_SCALER5                  0x0003C</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">/*---- Control register bit definitions ----------------------------*/</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#abc0afd5dfbc4731959aedb4923eb02df">  121</a></span>&#160;<span class="preprocessor">#define BIT_START_TRIG        (1&lt;&lt;0)    // write a &quot;1&quot; to start domino wave</span></div><div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a80146d67ae60b11352e5f6a15131a17c">  122</a></span>&#160;<span class="preprocessor">#define BIT_REINIT_TRIG       (1&lt;&lt;1)    // write a &quot;1&quot; to stop &amp; reset DRS</span></div><div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a12ed13deb33a17f0541b5ee4ca49fa22">  123</a></span>&#160;<span class="preprocessor">#define BIT_SOFT_TRIG         (1&lt;&lt;2)    // write a &quot;1&quot; to stop and read data to RAM</span></div><div class="line"><a name="l00124"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#ac2982ee68bcde88127842736d68a2545">  124</a></span>&#160;<span class="preprocessor">#define BIT_EEPROM_WRITE_TRIG (1&lt;&lt;3)    // write a &quot;1&quot; to write into serial EEPROM</span></div><div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#ab90bc38e43b5fbda61e27306601e2330">  125</a></span>&#160;<span class="preprocessor">#define BIT_EEPROM_READ_TRIG  (1&lt;&lt;4)    // write a &quot;1&quot; to read from serial EEPROM</span></div><div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#aa34c8168048458b1d8c9af1b3b965e2a">  126</a></span>&#160;<span class="preprocessor">#define BIT_MULTI_BUFFER     (1&lt;&lt;16)    // Use multi buffering when &quot;1&quot;</span></div><div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a156047b51e1a59b318b827add518572c">  127</a></span>&#160;<span class="preprocessor">#define BIT_DMODE            (1&lt;&lt;17)    // (*DRS2*) 0: single shot, 1: circular</span></div><div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#aa47553e1ef4bd3e8337a3667e403cced">  128</a></span>&#160;<span class="preprocessor">#define BIT_ADC_ACTIVE       (1&lt;&lt;17)    // (*DRS4*) 0: stop ADC when running, 1: ADC always clocked</span></div><div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a5c194b6717f4b6d636ad285ae2f88bb4">  129</a></span>&#160;<span class="preprocessor">#define BIT_LED              (1&lt;&lt;18)    // 1=on, 0=blink during readout</span></div><div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a05ad47708a27ba203180950229f55dc2">  130</a></span>&#160;<span class="preprocessor">#define BIT_TCAL_EN          (1&lt;&lt;19)    // switch on (1) / off (0) for 33 MHz calib signal</span></div><div class="line"><a name="l00131"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a7e0e57eb26090175ccbe853fda40daf1">  131</a></span>&#160;<span class="preprocessor">#define BIT_TCAL_SOURCE      (1&lt;&lt;20)</span></div><div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#ae4df35b251676c4295b3eb86d7485bd3">  132</a></span>&#160;<span class="preprocessor">#define BIT_REFCLK_SOURCE    (1&lt;&lt;20)</span></div><div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#ac0b0a821eeffd490a8f7edf6ba22962d">  133</a></span>&#160;<span class="preprocessor">#define BIT_FREQ_AUTO_ADJ    (1&lt;&lt;21)    // DRS2/3</span></div><div class="line"><a name="l00134"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a5837a4235fd47a2c22bdd2f6da687566">  134</a></span>&#160;<span class="preprocessor">#define BIT_TRANSP_MODE      (1&lt;&lt;21)    // DRS4</span></div><div class="line"><a name="l00135"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#ac6c288384554bef2d1de785eb3ae0906">  135</a></span>&#160;<span class="preprocessor">#define BIT_ENABLE_TRIGGER1  (1&lt;&lt;22)    // External LEMO/FP/TRBUS trigger</span></div><div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a14a7ecb0010a24df75ab11f0dfd59997">  136</a></span>&#160;<span class="preprocessor">#define BIT_LONG_START_PULSE (1&lt;&lt;23)    // (*DRS2*) 0:short start pulse (&gt;0.8GHz), 1:long start pulse (&lt;0.8GHz)</span></div><div class="line"><a name="l00137"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#ac28f0217eb330f9aa4bd6c35f50612e4">  137</a></span>&#160;<span class="preprocessor">#define BIT_READOUT_MODE     (1&lt;&lt;23)    // (*DRS3*,*DRS4*) 0:start from first bin, 1:start from domino stop</span></div><div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a63e87b63492c68dd8cbb9520d03766ba">  138</a></span>&#160;<span class="preprocessor">#define BIT_DELAYED_START    (1&lt;&lt;24)    // DRS2: start domino wave 400ns after soft trigger, used for waveform</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                                        <span class="comment">// generator startup</span></div><div class="line"><a name="l00140"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#ac7f74c3802896008fb154041b6115d66">  140</a></span>&#160;<span class="preprocessor">#define BIT_NEG_TRIGGER      (1&lt;&lt;24)    // DRS4: use high-to-low trigger if set</span></div><div class="line"><a name="l00141"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a034a633733019b81392e1db83b95606a">  141</a></span>&#160;<span class="preprocessor">#define BIT_ACAL_EN          (1&lt;&lt;25)    // connect DRS to inputs (0) or to DAC6 (1)</span></div><div class="line"><a name="l00142"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a21b19411ce01973a559e0fa89d287c97">  142</a></span>&#160;<span class="preprocessor">#define BIT_TRIGGER_DELAYED  (1&lt;&lt;26)    // select delayed trigger from trigger bus</span></div><div class="line"><a name="l00143"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#ab9d728358f64f2a0e156909c45971109">  143</a></span>&#160;<span class="preprocessor">#define BIT_ADCCLK_INVERT    (1&lt;&lt;26)    // invert ADC clock</span></div><div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a144662fc582aec2f69e555ae57f31d35">  144</a></span>&#160;<span class="preprocessor">#define BIT_REFCLK_EXT       (1&lt;&lt;26)    // use external MMCX CLKIN refclk</span></div><div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#ab2f7ed5a59da4c8d60d64231c307538b">  145</a></span>&#160;<span class="preprocessor">#define BIT_DACTIVE          (1&lt;&lt;27)    // keep domino wave running during readout</span></div><div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a524bd0d8d4b58f6e5fb6e6b61b2f5948">  146</a></span>&#160;<span class="preprocessor">#define BIT_STANDBY_MODE     (1&lt;&lt;28)    // put chip in standby mode</span></div><div class="line"><a name="l00147"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a507489c6405ecee5bee5d7a4a7ff57c8">  147</a></span>&#160;<span class="preprocessor">#define BIT_TR_SOURCE1       (1&lt;&lt;29)    // trigger source selection bits</span></div><div class="line"><a name="l00148"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a34967c7346757a00c5ed3726fc61f2d2">  148</a></span>&#160;<span class="preprocessor">#define BIT_DECIMATION       (1&lt;&lt;29)    // drop all odd samples (DRS4 mezz.)</span></div><div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a3c2c31485ffaa02fbf9136ac3a5bc634">  149</a></span>&#160;<span class="preprocessor">#define BIT_TR_SOURCE2       (1&lt;&lt;30)    // trigger source selection bits</span></div><div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#abbf80beec1a03f229935146b164b43ef">  150</a></span>&#160;<span class="preprocessor">#define BIT_ENABLE_TRIGGER2  (1&lt;&lt;31)    // analog threshold (internal) trigger</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">/* DRS4 configuration register bit definitions */</span></div><div class="line"><a name="l00153"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#adbd5c653fbde39dfc744906a35009042">  153</a></span>&#160;<span class="preprocessor">#define BIT_CONFIG_DMODE      (1&lt;&lt;8)    // 0: single shot, 1: circular</span></div><div class="line"><a name="l00154"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a5198c22581677e77385f82f2a585bfba">  154</a></span>&#160;<span class="preprocessor">#define BIT_CONFIG_PLLEN      (1&lt;&lt;9)    // write a &quot;1&quot; to enable the internal PLL</span></div><div class="line"><a name="l00155"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#ae8f9433df1188d71730dd31dae0a15ca">  155</a></span>&#160;<span class="preprocessor">#define BIT_CONFIG_WSRLOOP   (1&lt;&lt;10)    // write a &quot;1&quot; to connect WSROUT to WSRIN internally</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment">/*---- Status register bit definitions -----------------------------*/</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a2bc079c28800276fc8e5e7b363440196">  159</a></span>&#160;<span class="preprocessor">#define BIT_RUNNING           (1&lt;&lt;0)    // one if domino wave running or readout in progress</span></div><div class="line"><a name="l00160"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a5918ac1e9c30bb602a51fa3863a95e64">  160</a></span>&#160;<span class="preprocessor">#define BIT_NEW_FREQ1         (1&lt;&lt;1)    // one if new frequency measurement available</span></div><div class="line"><a name="l00161"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a77f76a08dd15f2292017fffb4cfd77ff">  161</a></span>&#160;<span class="preprocessor">#define BIT_NEW_FREQ2         (1&lt;&lt;2)</span></div><div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#ac4797f1eafd8871448f3b0cc225f306e">  162</a></span>&#160;<span class="preprocessor">#define BIT_PLL_LOCKED0       (1&lt;&lt;1)    // 1 if PLL has locked (DRS4 evaluation board only)</span></div><div class="line"><a name="l00163"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a0197434018ace71c7124b757be3c0048">  163</a></span>&#160;<span class="preprocessor">#define BIT_PLL_LOCKED1       (1&lt;&lt;2)    // 1 if PLL DRS4 B has locked (DRS4 mezzanine board only)</span></div><div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a806226d891aa616cf5c907e0422f097d">  164</a></span>&#160;<span class="preprocessor">#define BIT_PLL_LOCKED2       (1&lt;&lt;3)    // 1 if PLL DRS4 C has locked (DRS4 mezzanine board only)</span></div><div class="line"><a name="l00165"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#afe684dbe1cfc55987e91fa8d7397a84c">  165</a></span>&#160;<span class="preprocessor">#define BIT_PLL_LOCKED3       (1&lt;&lt;4)    // 1 if PLL DRS4 D has locked (DRS4 mezzanine board only)</span></div><div class="line"><a name="l00166"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a7f0d03838e9033e06614c292bdf08c28">  166</a></span>&#160;<span class="preprocessor">#define BIT_SERIAL_BUSY       (1&lt;&lt;5)    // 1 if EEPROM operation in progress</span></div><div class="line"><a name="l00167"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a648254ed4babeeb3f0b5d70ec64b4772">  167</a></span>&#160;<span class="preprocessor">#define BIT_LMK_LOCKED        (1&lt;&lt;6)    // 1 if PLL of LMK chip has locked (DRS4 mezzanine board only)</span></div><div class="line"><a name="l00168"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a36c630c7ed209b0e40289527a716e935">  168</a></span>&#160;<span class="preprocessor">#define BIT_2048_MODE         (1&lt;&lt;7)    // 1 if 2048-bin mode has been soldered</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769">  170</a></span>&#160;<span class="keyword">enum</span> <a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769">DRSBoardConstants</a> {</div><div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a512db8a7a36c74c34c3282af213bac24">  171</a></span>&#160;   <a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a512db8a7a36c74c34c3282af213bac24">kNumberOfChannelsMax</a>         =   10,</div><div class="line"><a name="l00172"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a38c04ee9cee7cd75405c297dc96437c7">  172</a></span>&#160;   <a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a38c04ee9cee7cd75405c297dc96437c7">kNumberOfCalibChannelsV3</a>     =   10,</div><div class="line"><a name="l00173"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769ab65e5bf61f0666846ffc2622537bfef1">  173</a></span>&#160;   <a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769ab65e5bf61f0666846ffc2622537bfef1">kNumberOfCalibChannelsV4</a>     =    8,</div><div class="line"><a name="l00174"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a20b4a8f5cdfc2a3ce90c3f32af999fa0">  174</a></span>&#160;   <a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a20b4a8f5cdfc2a3ce90c3f32af999fa0">kNumberOfBins</a>                = 1024,</div><div class="line"><a name="l00175"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769af3c9ba00b7ed6f0b7291c9723d9fabb2">  175</a></span>&#160;   <a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769af3c9ba00b7ed6f0b7291c9723d9fabb2">kNumberOfChipsMax</a>            =    4,</div><div class="line"><a name="l00176"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a466a91ab36a4a9c29f6f546fc603e9e7">  176</a></span>&#160;   <a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a466a91ab36a4a9c29f6f546fc603e9e7">kFrequencyCacheSize</a>          =   10,</div><div class="line"><a name="l00177"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a2af6283887f7d7cc5416d296a7b8ea38">  177</a></span>&#160;   <a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a2af6283887f7d7cc5416d296a7b8ea38">kBSplineOrder</a>                =    4,</div><div class="line"><a name="l00178"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a700bed1ad61d9981bb01ded0858c960a">  178</a></span>&#160;   <a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a700bed1ad61d9981bb01ded0858c960a">kPreCaliculatedBSplines</a>      = 1000,</div><div class="line"><a name="l00179"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a958e04d79e2efa0f9c86814aaa2a4967">  179</a></span>&#160;   <a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a958e04d79e2efa0f9c86814aaa2a4967">kPreCaliculatedBSplineGroups</a> =    5,</div><div class="line"><a name="l00180"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a8c257ca44001dafddacded37e1e312d2">  180</a></span>&#160;   <a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a8c257ca44001dafddacded37e1e312d2">kNumberOfADCBins</a>             = 4096,</div><div class="line"><a name="l00181"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a88502ce12cd19c05490e1dbe882860f2">  181</a></span>&#160;   <a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a88502ce12cd19c05490e1dbe882860f2">kBSplineXMinOffset</a>           =   20,</div><div class="line"><a name="l00182"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a130e6d9cc9437042a1323958eddc98e1">  182</a></span>&#160;   <a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a130e6d9cc9437042a1323958eddc98e1">kMaxNumberOfClockCycles</a>      =  100,</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;};</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#ab7dcc7278f8e703da53de2ee769ce2f6">  185</a></span>&#160;<span class="keyword">enum</span> <a class="code" href="_d_r_s_8h.xhtml#ab7dcc7278f8e703da53de2ee769ce2f6">DRSErrorCodes</a> {</div><div class="line"><a name="l00186"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#ab7dcc7278f8e703da53de2ee769ce2f6af0536797208144380691e2b376ffc1d1">  186</a></span>&#160;   <a class="code" href="_d_r_s_8h.xhtml#ab7dcc7278f8e703da53de2ee769ce2f6af0536797208144380691e2b376ffc1d1">kSuccess</a>                     =  0,</div><div class="line"><a name="l00187"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#ab7dcc7278f8e703da53de2ee769ce2f6ac8b12b6cbec0edae80530c9b87f10c3c">  187</a></span>&#160;   <a class="code" href="_d_r_s_8h.xhtml#ab7dcc7278f8e703da53de2ee769ce2f6ac8b12b6cbec0edae80530c9b87f10c3c">kInvalidTriggerSignal</a>        = -1,</div><div class="line"><a name="l00188"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#ab7dcc7278f8e703da53de2ee769ce2f6a939c49bc077470033c6ed00508128f6c">  188</a></span>&#160;   <a class="code" href="_d_r_s_8h.xhtml#ab7dcc7278f8e703da53de2ee769ce2f6a939c49bc077470033c6ed00508128f6c">kWrongChannelOrChip</a>          = -2,</div><div class="line"><a name="l00189"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#ab7dcc7278f8e703da53de2ee769ce2f6a0bafed6cc38e331cd36c0fb27e99bca4">  189</a></span>&#160;   <a class="code" href="_d_r_s_8h.xhtml#ab7dcc7278f8e703da53de2ee769ce2f6a0bafed6cc38e331cd36c0fb27e99bca4">kInvalidTransport</a>            = -3,</div><div class="line"><a name="l00190"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#ab7dcc7278f8e703da53de2ee769ce2f6a1025b7f454dbc127c2a52b796550eaba">  190</a></span>&#160;   <a class="code" href="_d_r_s_8h.xhtml#ab7dcc7278f8e703da53de2ee769ce2f6a1025b7f454dbc127c2a52b796550eaba">kZeroSuppression</a>             = -4,</div><div class="line"><a name="l00191"></a><span class="lineno"><a class="line" href="_d_r_s_8h.xhtml#ab7dcc7278f8e703da53de2ee769ce2f6a99e337e5fc0ce0b637934203bb383eb8">  191</a></span>&#160;   <a class="code" href="_d_r_s_8h.xhtml#ab7dcc7278f8e703da53de2ee769ce2f6a99e337e5fc0ce0b637934203bb383eb8">kWaveNotAvailable</a>            = -5</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;};</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment">/*---- callback class ----*/</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno"><a class="line" href="class_d_r_s_callback.xhtml">  196</a></span>&#160;<span class="keyword">class </span><a class="code" href="class_d_r_s_callback.xhtml">DRSCallback</a></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;{</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="class_d_r_s_callback.xhtml#a088e15ac8657d148d61c8fb80b2e23ac">Progress</a>(<span class="keywordtype">int</span> value) = 0;</div><div class="line"><a name="l00200"></a><span class="lineno"><a class="line" href="class_d_r_s_callback.xhtml#a43f8e0196e6a98316dca5b64ae799735">  200</a></span>&#160;   <span class="keyword">virtual</span> <a class="code" href="class_d_r_s_callback.xhtml#a43f8e0196e6a98316dca5b64ae799735">~DRSCallback</a>() {};</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;};</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment">/*------------------------*/</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="keyword">class </span><a class="code" href="class_d_r_s_board.xhtml">DRSBoard</a>;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml">  207</a></span>&#160;<span class="keyword">class </span><a class="code" href="class_response_calibration.xhtml">ResponseCalibration</a> {</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno"><a class="line" href="class_response_calibration_1_1_calibration_data.xhtml">  210</a></span>&#160;   <span class="keyword">class </span><a class="code" href="class_response_calibration_1_1_calibration_data.xhtml">CalibrationData</a> {</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;   <span class="keyword">public</span>:</div><div class="line"><a name="l00212"></a><span class="lineno"><a class="line" href="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel.xhtml">  212</a></span>&#160;      <span class="keyword">class </span><a class="code" href="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel.xhtml">CalibrationDataChannel</a> {</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;      <span class="keyword">public</span>:</div><div class="line"><a name="l00214"></a><span class="lineno"><a class="line" href="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel.xhtml#a4eabe89f4666b142da2f957877507f02">  214</a></span>&#160;         <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>   fLimitGroup[<a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a20b4a8f5cdfc2a3ce90c3f32af999fa0">kNumberOfBins</a>];           </div><div class="line"><a name="l00215"></a><span class="lineno"><a class="line" href="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel.xhtml#ac3ab596f5c7485be05351baa65592bb0">  215</a></span>&#160;         <span class="keywordtype">float</span>           fMin[<a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a20b4a8f5cdfc2a3ce90c3f32af999fa0">kNumberOfBins</a>];                  </div><div class="line"><a name="l00216"></a><span class="lineno"><a class="line" href="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel.xhtml#a6fa07c265cc3a4fba8644f856a278c03">  216</a></span>&#160;         <span class="keywordtype">float</span>           fRange[<a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a20b4a8f5cdfc2a3ce90c3f32af999fa0">kNumberOfBins</a>];                </div><div class="line"><a name="l00217"></a><span class="lineno"><a class="line" href="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel.xhtml#afcd111aa85b11491a42a78b05afb0929">  217</a></span>&#160;         <span class="keywordtype">short</span>           fOffset[<a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a20b4a8f5cdfc2a3ce90c3f32af999fa0">kNumberOfBins</a>];               </div><div class="line"><a name="l00218"></a><span class="lineno"><a class="line" href="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel.xhtml#a00a2a300ab882187c05abe61c01a1d9c">  218</a></span>&#160;         <span class="keywordtype">short</span>           fGain[<a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a20b4a8f5cdfc2a3ce90c3f32af999fa0">kNumberOfBins</a>];                 </div><div class="line"><a name="l00219"></a><span class="lineno"><a class="line" href="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel.xhtml#a90c76784c0f499ac2844e6121b17dc61">  219</a></span>&#160;         <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>  fOffsetADC[<a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a20b4a8f5cdfc2a3ce90c3f32af999fa0">kNumberOfBins</a>];            </div><div class="line"><a name="l00220"></a><span class="lineno"><a class="line" href="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel.xhtml#a6a5a4ac3b74c40baab81f8b07cebe9e2">  220</a></span>&#160;         <span class="keywordtype">short</span>          *fData[<a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a20b4a8f5cdfc2a3ce90c3f32af999fa0">kNumberOfBins</a>];                 </div><div class="line"><a name="l00221"></a><span class="lineno"><a class="line" href="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel.xhtml#a27859f0bd3b21aa99866aedd0762cdd1">  221</a></span>&#160;         <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>  *fLookUp[<a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a20b4a8f5cdfc2a3ce90c3f32af999fa0">kNumberOfBins</a>];               </div><div class="line"><a name="l00222"></a><span class="lineno"><a class="line" href="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel.xhtml#afcdfd0cc1f913623e1b9b6a9cc164293">  222</a></span>&#160;         <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>  fLookUpOffset[<a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a20b4a8f5cdfc2a3ce90c3f32af999fa0">kNumberOfBins</a>];         </div><div class="line"><a name="l00223"></a><span class="lineno"><a class="line" href="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel.xhtml#a2af47c5b33c70b159f33d336d79ec1ff">  223</a></span>&#160;         <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>   fNumberOfLookUpPoints[<a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a20b4a8f5cdfc2a3ce90c3f32af999fa0">kNumberOfBins</a>]; </div><div class="line"><a name="l00224"></a><span class="lineno"><a class="line" href="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel.xhtml#a73f3dba3d32a9d2be52249fb6e12d0bc">  224</a></span>&#160;         <span class="keywordtype">float</span>          *<a class="code" href="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel.xhtml#a73f3dba3d32a9d2be52249fb6e12d0bc">fTempData</a>;                            </div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;      <span class="keyword">private</span>:</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;         <a class="code" href="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel.xhtml">CalibrationDataChannel</a>(<span class="keyword">const</span> <a class="code" href="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel.xhtml">CalibrationDataChannel</a> &amp;c);              <span class="comment">// not implemented</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;         <a class="code" href="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel.xhtml">CalibrationDataChannel</a> &amp;operator=(<span class="keyword">const</span> <a class="code" href="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel.xhtml">CalibrationDataChannel</a> &amp;rhs); <span class="comment">// not implemented</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;      <span class="keyword">public</span>:</div><div class="line"><a name="l00231"></a><span class="lineno"><a class="line" href="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel.xhtml#acb10baf3b2a6bf81e69a66c69aae3552">  231</a></span>&#160;         <a class="code" href="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel.xhtml#acb10baf3b2a6bf81e69a66c69aae3552">CalibrationDataChannel</a>(<span class="keywordtype">int</span> numberOfGridPoints)</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;         :fTempData(new float[numberOfGridPoints]) {</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            <span class="keywordtype">int</span> i;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a20b4a8f5cdfc2a3ce90c3f32af999fa0">kNumberOfBins</a>; i++) {</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;               fData[i] = <span class="keyword">new</span> <span class="keywordtype">short</span>[numberOfGridPoints];</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;            }</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            memset(fLimitGroup,           0, <span class="keyword">sizeof</span>(fLimitGroup));</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;            memset(fMin,                  0, <span class="keyword">sizeof</span>(fMin));</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            memset(fRange,                0, <span class="keyword">sizeof</span>(fRange));</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;            memset(fOffset,               0, <span class="keyword">sizeof</span>(fOffset));</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            memset(fGain,                 0, <span class="keyword">sizeof</span>(fGain));</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;            memset(fOffsetADC,            0, <span class="keyword">sizeof</span>(fOffsetADC));</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            memset(fLookUp,               0, <span class="keyword">sizeof</span>(fLookUp));</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;            memset(fLookUpOffset,         0, <span class="keyword">sizeof</span>(fLookUpOffset));</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;            memset(fNumberOfLookUpPoints, 0, <span class="keyword">sizeof</span>(fNumberOfLookUpPoints));</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;         }</div><div class="line"><a name="l00247"></a><span class="lineno"><a class="line" href="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel.xhtml#a1dcb99e39d60b1c3f0f2671d2e59babc">  247</a></span>&#160;         <a class="code" href="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel.xhtml#a1dcb99e39d60b1c3f0f2671d2e59babc">~CalibrationDataChannel</a>() {</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            <span class="keywordtype">int</span> i;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;            <span class="keyword">delete</span> fTempData;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;            <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a20b4a8f5cdfc2a3ce90c3f32af999fa0">kNumberOfBins</a>; i++) {</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;               <span class="keyword">delete</span> fData[i];</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;               <span class="keyword">delete</span> fLookUp[i];</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;            }</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;         }</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;      };</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00257"></a><span class="lineno"><a class="line" href="class_response_calibration_1_1_calibration_data.xhtml#a934b0deeda5e4cbb3b2e04e66808d37d">  257</a></span>&#160;      <span class="keywordtype">bool</span>                    <a class="code" href="class_response_calibration_1_1_calibration_data.xhtml#a934b0deeda5e4cbb3b2e04e66808d37d">fRead</a>;                                  </div><div class="line"><a name="l00258"></a><span class="lineno"><a class="line" href="class_response_calibration_1_1_calibration_data.xhtml#aa17cb550d34e0ca42bd41e68b3299d3c">  258</a></span>&#160;      <a class="code" href="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel.xhtml">CalibrationDataChannel</a> *fChannel[10];                           </div><div class="line"><a name="l00259"></a><span class="lineno"><a class="line" href="class_response_calibration_1_1_calibration_data.xhtml#a79ceef0044ec104ef7f10b99f08be354">  259</a></span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>           <a class="code" href="class_response_calibration_1_1_calibration_data.xhtml#a79ceef0044ec104ef7f10b99f08be354">fNumberOfGridPoints</a>;                    </div><div class="line"><a name="l00260"></a><span class="lineno"><a class="line" href="class_response_calibration_1_1_calibration_data.xhtml#af9e46b53470a0ebc2f9503732908256e">  260</a></span>&#160;      <span class="keywordtype">int</span>                     <a class="code" href="class_response_calibration_1_1_calibration_data.xhtml#af9e46b53470a0ebc2f9503732908256e">fHasOffsetCalibration</a>;                  </div><div class="line"><a name="l00261"></a><span class="lineno"><a class="line" href="class_response_calibration_1_1_calibration_data.xhtml#ae4ba6eb1d639ba78265d1280a7f0b65f">  261</a></span>&#160;      <span class="keywordtype">float</span>                   <a class="code" href="class_response_calibration_1_1_calibration_data.xhtml#ae4ba6eb1d639ba78265d1280a7f0b65f">fStartTemperature</a>;                      </div><div class="line"><a name="l00262"></a><span class="lineno"><a class="line" href="class_response_calibration_1_1_calibration_data.xhtml#ac71ddc274c0b36c900e2958e04f17c2a">  262</a></span>&#160;      <span class="keywordtype">float</span>                   <a class="code" href="class_response_calibration_1_1_calibration_data.xhtml#ac71ddc274c0b36c900e2958e04f17c2a">fEndTemperature</a>;                        </div><div class="line"><a name="l00263"></a><span class="lineno"><a class="line" href="class_response_calibration_1_1_calibration_data.xhtml#ac899c83858ae51ddbbba868bbf9b6ee2">  263</a></span>&#160;      <span class="keywordtype">int</span>                    *fBSplineOffsetLookUp[<a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a8c257ca44001dafddacded37e1e312d2">kNumberOfADCBins</a>]; </div><div class="line"><a name="l00264"></a><span class="lineno"><a class="line" href="class_response_calibration_1_1_calibration_data.xhtml#a0eed7d9988c7511e876b9f9c9359c2d9">  264</a></span>&#160;      <span class="keywordtype">float</span>                 **fBSplineLookUp[<a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a8c257ca44001dafddacded37e1e312d2">kNumberOfADCBins</a>];       </div><div class="line"><a name="l00265"></a><span class="lineno"><a class="line" href="class_response_calibration_1_1_calibration_data.xhtml#a4c119f1646069f26ce8d60fbeec76621">  265</a></span>&#160;      <span class="keywordtype">float</span>                   <a class="code" href="class_response_calibration_1_1_calibration_data.xhtml#a4c119f1646069f26ce8d60fbeec76621">fMin</a>;                                   </div><div class="line"><a name="l00266"></a><span class="lineno"><a class="line" href="class_response_calibration_1_1_calibration_data.xhtml#a54faca58181aedc3418d715db4982b85">  266</a></span>&#160;      <span class="keywordtype">float</span>                   <a class="code" href="class_response_calibration_1_1_calibration_data.xhtml#a54faca58181aedc3418d715db4982b85">fMax</a>;                                   </div><div class="line"><a name="l00267"></a><span class="lineno"><a class="line" href="class_response_calibration_1_1_calibration_data.xhtml#a4f4245694d698671c03d3ece60f86b72">  267</a></span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>           <a class="code" href="class_response_calibration_1_1_calibration_data.xhtml#a4f4245694d698671c03d3ece60f86b72">fNumberOfLimitGroups</a>;                   </div><div class="line"><a name="l00268"></a><span class="lineno"><a class="line" href="class_response_calibration_1_1_calibration_data.xhtml#a0469c45838b2cf0c0886420c6f20bf40">  268</a></span>&#160;      <span class="keyword">static</span> <span class="keywordtype">float</span>            fIntRevers[2 * <a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a2af6283887f7d7cc5416d296a7b8ea38">kBSplineOrder</a> - 2];</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;   <span class="keyword">private</span>:</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;      <a class="code" href="class_response_calibration_1_1_calibration_data.xhtml">CalibrationData</a>(<span class="keyword">const</span> <a class="code" href="class_response_calibration_1_1_calibration_data.xhtml">CalibrationData</a> &amp;c);              <span class="comment">// not implemented</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;      <a class="code" href="class_response_calibration_1_1_calibration_data.xhtml">CalibrationData</a> &amp;operator=(<span class="keyword">const</span> <a class="code" href="class_response_calibration_1_1_calibration_data.xhtml">CalibrationData</a> &amp;rhs); <span class="comment">// not implemented</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;   <span class="keyword">public</span>:</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;      <a class="code" href="class_response_calibration_1_1_calibration_data.xhtml">CalibrationData</a>(<span class="keywordtype">int</span> numberOfGridPoints);</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;      ~<a class="code" href="class_response_calibration_1_1_calibration_data.xhtml">CalibrationData</a>();</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;      <span class="keyword">static</span> <span class="keywordtype">int</span> CalculateBSpline(<span class="keywordtype">int</span> nGrid, <span class="keywordtype">float</span> value, <span class="keywordtype">float</span> *bsplines);</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;      <span class="keywordtype">void</span>       PreCalculateBSpline();</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;      <span class="keywordtype">void</span>       DeletePreCalculatedBSpline();</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;   };</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;   <span class="comment">// General Fields</span></div><div class="line"><a name="l00283"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#a3c87489e3099cc8e0c3fd7d09a769a65">  283</a></span>&#160;   <a class="code" href="class_d_r_s_board.xhtml">DRSBoard</a>        *<a class="code" href="class_response_calibration.xhtml#a3c87489e3099cc8e0c3fd7d09a769a65">fBoard</a>;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div><div class="line"><a name="l00285"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#a96791ce93919fe3cb43ade0ef3c1db0b">  285</a></span>&#160;   <span class="keywordtype">double</span>           <a class="code" href="class_response_calibration.xhtml#a96791ce93919fe3cb43ade0ef3c1db0b">fPrecision</a>;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;   <span class="comment">// Fields for creating the Calibration</span></div><div class="line"><a name="l00288"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#aefd794778dac80fb43214f9485f46723">  288</a></span>&#160;   <span class="keywordtype">bool</span>             <a class="code" href="class_response_calibration.xhtml#aefd794778dac80fb43214f9485f46723">fInitialized</a>;</div><div class="line"><a name="l00289"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#a5bdc5fe786f6ce883484fda149ac731f">  289</a></span>&#160;   <span class="keywordtype">bool</span>             <a class="code" href="class_response_calibration.xhtml#a5bdc5fe786f6ce883484fda149ac731f">fRecorded</a>;</div><div class="line"><a name="l00290"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#a6e353f2832065570b4d3c60355ed6b79">  290</a></span>&#160;   <span class="keywordtype">bool</span>             <a class="code" href="class_response_calibration.xhtml#a6e353f2832065570b4d3c60355ed6b79">fFitted</a>;</div><div class="line"><a name="l00291"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#a0ec123af07fad22d27c7d5f6aeb263f1">  291</a></span>&#160;   <span class="keywordtype">bool</span>             <a class="code" href="class_response_calibration.xhtml#a0ec123af07fad22d27c7d5f6aeb263f1">fOffset</a>;</div><div class="line"><a name="l00292"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#a7679947a1691ac6f8b54842d56320ed6">  292</a></span>&#160;   <span class="keywordtype">bool</span>             fCalibrationValid[2];</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div><div class="line"><a name="l00294"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#ab655354940df49ff4646c0a5be27b4de">  294</a></span>&#160;   <span class="keywordtype">int</span>              <a class="code" href="class_response_calibration.xhtml#ab655354940df49ff4646c0a5be27b4de">fNumberOfPointsLowVolt</a>;</div><div class="line"><a name="l00295"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#a0869e223f6ad9e3c725368cf708e487e">  295</a></span>&#160;   <span class="keywordtype">int</span>              <a class="code" href="class_response_calibration.xhtml#a0869e223f6ad9e3c725368cf708e487e">fNumberOfPoints</a>;</div><div class="line"><a name="l00296"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#aa25b582d3ce2ae18ccac2d93c57a3316">  296</a></span>&#160;   <span class="keywordtype">int</span>              <a class="code" href="class_response_calibration.xhtml#aa25b582d3ce2ae18ccac2d93c57a3316">fNumberOfMode2Bins</a>;</div><div class="line"><a name="l00297"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#a385841cc5731b686a0893cb4e5ecb0a8">  297</a></span>&#160;   <span class="keywordtype">int</span>              <a class="code" href="class_response_calibration.xhtml#a385841cc5731b686a0893cb4e5ecb0a8">fNumberOfSamples</a>;</div><div class="line"><a name="l00298"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#ade72bb5b1cbcd732bfb716e6c2e29944">  298</a></span>&#160;   <span class="keywordtype">int</span>              <a class="code" href="class_response_calibration.xhtml#ade72bb5b1cbcd732bfb716e6c2e29944">fNumberOfGridPoints</a>;</div><div class="line"><a name="l00299"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#a7f98a5fc6bbab00fa8756f446010e9ba">  299</a></span>&#160;   <span class="keywordtype">int</span>              <a class="code" href="class_response_calibration.xhtml#a7f98a5fc6bbab00fa8756f446010e9ba">fNumberOfXConstPoints</a>;</div><div class="line"><a name="l00300"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#afa0e31c4d1a1a671f8730bbabedfd58a">  300</a></span>&#160;   <span class="keywordtype">int</span>              <a class="code" href="class_response_calibration.xhtml#afa0e31c4d1a1a671f8730bbabedfd58a">fNumberOfXConstGridPoints</a>;</div><div class="line"><a name="l00301"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#a351da484286754dc01484d1da8a92b48">  301</a></span>&#160;   <span class="keywordtype">double</span>           <a class="code" href="class_response_calibration.xhtml#a351da484286754dc01484d1da8a92b48">fTriggerFrequency</a>;</div><div class="line"><a name="l00302"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#a6a41bb0352011f8002e11b8ac3fc3ff0">  302</a></span>&#160;   <span class="keywordtype">int</span>              <a class="code" href="class_response_calibration.xhtml#a6a41bb0352011f8002e11b8ac3fc3ff0">fShowStatistics</a>;</div><div class="line"><a name="l00303"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#a5358830a35abe0d2991a32e647589418">  303</a></span>&#160;   FILE            *<a class="code" href="class_response_calibration.xhtml#a5358830a35abe0d2991a32e647589418">fCalibFile</a>;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div><div class="line"><a name="l00305"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#a5ec61d206194d18c6a144a422ce849b7">  305</a></span>&#160;   <span class="keywordtype">int</span>              <a class="code" href="class_response_calibration.xhtml#a5ec61d206194d18c6a144a422ce849b7">fCurrentLowVoltPoint</a>;</div><div class="line"><a name="l00306"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#ab610d05acf9aa683777b0ba2686e5501">  306</a></span>&#160;   <span class="keywordtype">int</span>              <a class="code" href="class_response_calibration.xhtml#ab610d05acf9aa683777b0ba2686e5501">fCurrentPoint</a>;</div><div class="line"><a name="l00307"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#ae714e39c3289200649edc7e4265d6ce8">  307</a></span>&#160;   <span class="keywordtype">int</span>              <a class="code" href="class_response_calibration.xhtml#ae714e39c3289200649edc7e4265d6ce8">fCurrentSample</a>;</div><div class="line"><a name="l00308"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#a561931555706749d1ead37efd1c97d69">  308</a></span>&#160;   <span class="keywordtype">int</span>              <a class="code" href="class_response_calibration.xhtml#a561931555706749d1ead37efd1c97d69">fCurrentFitChannel</a>;</div><div class="line"><a name="l00309"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#a65eedce096d393bf41a2335b718b6aa6">  309</a></span>&#160;   <span class="keywordtype">int</span>              <a class="code" href="class_response_calibration.xhtml#a65eedce096d393bf41a2335b718b6aa6">fCurrentFitBin</a>;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#af533484b00d2648471f6e713526331ce">  311</a></span>&#160;   <span class="keywordtype">float</span>           *fResponseX[10][<a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a20b4a8f5cdfc2a3ce90c3f32af999fa0">kNumberOfBins</a>];</div><div class="line"><a name="l00312"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#a8bb45551b0b7a090d3e2839385b07e7c">  312</a></span>&#160;   <span class="keywordtype">float</span>           *<a class="code" href="class_response_calibration.xhtml#a8bb45551b0b7a090d3e2839385b07e7c">fResponseY</a>;</div><div class="line"><a name="l00313"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#af393accc8d28d4615f6d7f9c2e62289a">  313</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> **fWaveFormMode3[10];</div><div class="line"><a name="l00314"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#a1a66ad9d36008cedfdee0144e3dea241">  314</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> **fWaveFormMode2[10];</div><div class="line"><a name="l00315"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#a57fedd2af0d77b3d1103033b3af7c65f">  315</a></span>&#160;   <span class="keywordtype">short</span>          **fWaveFormOffset[10];</div><div class="line"><a name="l00316"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#ae71417fc3246184d18e84d0930f5d8ab">  316</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> **fWaveFormOffsetADC[10];</div><div class="line"><a name="l00317"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#a562fb7b3295c0888f2a2010792197859">  317</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>  *<a class="code" href="class_response_calibration.xhtml#a562fb7b3295c0888f2a2010792197859">fSamples</a>;</div><div class="line"><a name="l00318"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#ad353d0c312f81fe964d1cd5722be874f">  318</a></span>&#160;   <span class="keywordtype">int</span>             *<a class="code" href="class_response_calibration.xhtml#ad353d0c312f81fe964d1cd5722be874f">fSampleUsed</a>;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;</div><div class="line"><a name="l00320"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#a9fc3fa45c37ebed95d71c62a74eb94f0">  320</a></span>&#160;   <span class="keywordtype">float</span>           *fPntX[2];</div><div class="line"><a name="l00321"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#a281c87dc4c1acbb0d3bc66687c14374e">  321</a></span>&#160;   <span class="keywordtype">float</span>           *fPntY[2];</div><div class="line"><a name="l00322"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#a0fc87f59baf430c0558d1230e3804dd4">  322</a></span>&#160;   <span class="keywordtype">float</span>           *fUValues[2];</div><div class="line"><a name="l00323"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#afcd419031c2df0bbdea468f6eaa22cc4">  323</a></span>&#160;   <span class="keywordtype">float</span>           *fRes[<a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a20b4a8f5cdfc2a3ce90c3f32af999fa0">kNumberOfBins</a>];</div><div class="line"><a name="l00324"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#ab73eb5debb8691b0fbbeb43da58229eb">  324</a></span>&#160;   <span class="keywordtype">float</span>           *fResX[<a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a20b4a8f5cdfc2a3ce90c3f32af999fa0">kNumberOfBins</a>];</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div><div class="line"><a name="l00326"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#a37c0d878da2c40e42cdd35e1f5b15eaf">  326</a></span>&#160;   <span class="keywordtype">double</span>          *<a class="code" href="class_response_calibration.xhtml#a37c0d878da2c40e42cdd35e1f5b15eaf">fXXFit</a>;</div><div class="line"><a name="l00327"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#a82ef8ee252a5a96b2de17d7af4d44a5c">  327</a></span>&#160;   <span class="keywordtype">double</span>          *<a class="code" href="class_response_calibration.xhtml#a82ef8ee252a5a96b2de17d7af4d44a5c">fYYFit</a>;</div><div class="line"><a name="l00328"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#a7ef77a1a66aa67393f057ee92e99a63d">  328</a></span>&#160;   <span class="keywordtype">double</span>          *<a class="code" href="class_response_calibration.xhtml#a7ef77a1a66aa67393f057ee92e99a63d">fWWFit</a>;</div><div class="line"><a name="l00329"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#ad12db4128a40b895fc96ee86470712c5">  329</a></span>&#160;   <span class="keywordtype">double</span>          *<a class="code" href="class_response_calibration.xhtml#ad12db4128a40b895fc96ee86470712c5">fYYFitRes</a>;</div><div class="line"><a name="l00330"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#a85c1f0173d0cef56aded6d3d464ae5c0">  330</a></span>&#160;   <span class="keywordtype">double</span>          *<a class="code" href="class_response_calibration.xhtml#a85c1f0173d0cef56aded6d3d464ae5c0">fYYSave</a>;</div><div class="line"><a name="l00331"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#a7662c45a0f2490a5e9ff853c8f750654">  331</a></span>&#160;   <span class="keywordtype">double</span>          *<a class="code" href="class_response_calibration.xhtml#a7662c45a0f2490a5e9ff853c8f750654">fXXSave</a>;</div><div class="line"><a name="l00332"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#a2a7c1cad4d9a9577ed1e9ba092082e4a">  332</a></span>&#160;   <span class="keywordtype">double</span>          <a class="code" href="class_response_calibration.xhtml#a2a7c1cad4d9a9577ed1e9ba092082e4a">fGainMin</a>;</div><div class="line"><a name="l00333"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#a45e38c04c794c9225f3a76109490904a">  333</a></span>&#160;   <span class="keywordtype">double</span>          <a class="code" href="class_response_calibration.xhtml#a45e38c04c794c9225f3a76109490904a">fGainMax</a>;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div><div class="line"><a name="l00335"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#ae4183869975797a2caf28ebc75fdf51a">  335</a></span>&#160;   <span class="keywordtype">float</span>          **<a class="code" href="class_response_calibration.xhtml#ae4183869975797a2caf28ebc75fdf51a">fStatisticsApprox</a>;</div><div class="line"><a name="l00336"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#a96ec6b92792998e41f035dff6449f2d9">  336</a></span>&#160;   <span class="keywordtype">float</span>          **<a class="code" href="class_response_calibration.xhtml#a96ec6b92792998e41f035dff6449f2d9">fStatisticsApproxExt</a>;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;   <span class="comment">// Fields for applying the Calibration</span></div><div class="line"><a name="l00339"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#aa8e02f569934f75f02106bf184fc703e">  339</a></span>&#160;   <a class="code" href="class_response_calibration_1_1_calibration_data.xhtml">CalibrationData</a> *fCalibrationData[<a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769af3c9ba00b7ed6f0b7291c9723d9fabb2">kNumberOfChipsMax</a>];</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;         <a class="code" href="class_response_calibration.xhtml">ResponseCalibration</a>(<span class="keyword">const</span> <a class="code" href="class_response_calibration.xhtml">ResponseCalibration</a> &amp;c);              <span class="comment">// not implemented</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;         <a class="code" href="class_response_calibration.xhtml">ResponseCalibration</a> &amp;operator=(<span class="keyword">const</span> <a class="code" href="class_response_calibration.xhtml">ResponseCalibration</a> &amp;rhs); <span class="comment">// not implemented</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;   <a class="code" href="class_response_calibration.xhtml">ResponseCalibration</a>(<a class="code" href="class_d_r_s_board.xhtml">DRSBoard</a>* board);</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;   ~<a class="code" href="class_response_calibration.xhtml">ResponseCalibration</a>();</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;   <span class="keywordtype">void</span>   SetCalibrationParameters(<span class="keywordtype">int</span> numberOfPointsLowVolt, <span class="keywordtype">int</span> numberOfPoints, <span class="keywordtype">int</span> numberOfMode2Bins,</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;                                   <span class="keywordtype">int</span> numberOfSamples, <span class="keywordtype">int</span> numberOfGridPoints, <span class="keywordtype">int</span> numberOfXConstPoints,</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                                   <span class="keywordtype">int</span> numberOfXConstGridPoints, <span class="keywordtype">double</span> triggerFrequency, <span class="keywordtype">int</span> showStatistics = 0);</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;   <span class="keywordtype">void</span>   ResetCalibration();</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;   <span class="keywordtype">bool</span>   RecordCalibrationPoints(<span class="keywordtype">int</span> chipNumber);</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;   <span class="keywordtype">bool</span>   RecordCalibrationPointsV3(<span class="keywordtype">int</span> chipNumber);</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;   <span class="keywordtype">bool</span>   RecordCalibrationPointsV4(<span class="keywordtype">int</span> chipNumber);</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;   <span class="keywordtype">bool</span>   FitCalibrationPoints(<span class="keywordtype">int</span> chipNumber);</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;   <span class="keywordtype">bool</span>   FitCalibrationPointsV3(<span class="keywordtype">int</span> chipNumber);</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;   <span class="keywordtype">bool</span>   FitCalibrationPointsV4(<span class="keywordtype">int</span> chipNumber);</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;   <span class="keywordtype">bool</span>   OffsetCalibration(<span class="keywordtype">int</span> chipNumber);</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;   <span class="keywordtype">bool</span>   OffsetCalibrationV3(<span class="keywordtype">int</span> chipNumber);</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;   <span class="keywordtype">bool</span>   OffsetCalibrationV4(<span class="keywordtype">int</span> chipNumber);</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;   <span class="keywordtype">double</span> GetTemperature(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> chipIndex);</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;   <span class="keywordtype">bool</span>   WriteCalibration(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> chipIndex);</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;   <span class="keywordtype">bool</span>   WriteCalibrationV3(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> chipIndex);</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;   <span class="keywordtype">bool</span>   WriteCalibrationV4(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> chipIndex);</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;   <span class="keywordtype">bool</span>   ReadCalibration(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> chipIndex);</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;   <span class="keywordtype">bool</span>   ReadCalibrationV3(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> chipIndex);</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;   <span class="keywordtype">bool</span>   ReadCalibrationV4(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> chipIndex);</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;   <span class="keywordtype">bool</span>   Calibrate(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> chipIndex, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> channel, <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> *adcWaveform, <span class="keywordtype">short</span> *uWaveform,</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;                    <span class="keywordtype">int</span> triggerCell, <span class="keywordtype">float</span> threshold, <span class="keywordtype">bool</span> offsetCalib);</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;   <span class="keywordtype">bool</span>   SubtractADCOffset(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> chipIndex, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> channel, <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> *adcWaveform,</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                            <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> *adcCalibratedWaveform, <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> newBaseLevel);</div><div class="line"><a name="l00374"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#a65643fc4329b658f7777bf25a022bb50">  374</a></span>&#160;   <span class="keywordtype">bool</span>   <a class="code" href="class_response_calibration.xhtml#a65643fc4329b658f7777bf25a022bb50">IsRead</a>(<span class="keywordtype">int</span> chipIndex)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> fCalibrationValid[chipIndex]; }</div><div class="line"><a name="l00375"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#aaa4863d4d3f16f40e343c76e1346b25c">  375</a></span>&#160;   <span class="keywordtype">double</span> <a class="code" href="class_response_calibration.xhtml#aaa4863d4d3f16f40e343c76e1346b25c">GetPrecision</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> fPrecision; };</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;</div><div class="line"><a name="l00377"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#ae68aa6c91d8ffae61d1a0fd739a78039">  377</a></span>&#160;   <span class="keywordtype">double</span> <a class="code" href="class_response_calibration.xhtml#ae68aa6c91d8ffae61d1a0fd739a78039">GetOffsetAt</a>(<span class="keywordtype">int</span> chip,<span class="keywordtype">int</span> chn,<span class="keywordtype">int</span> bin)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> fCalibrationData[chip]-&gt;<a class="code" href="class_response_calibration_1_1_calibration_data.xhtml#aa17cb550d34e0ca42bd41e68b3299d3c">fChannel</a>[chn]-&gt;<a class="code" href="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel.xhtml#afcd111aa85b11491a42a78b05afb0929">fOffset</a>[bin]; };</div><div class="line"><a name="l00378"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#a6206cae7b8d4105c777a38309ebd98c2">  378</a></span>&#160;   <span class="keywordtype">double</span> <a class="code" href="class_response_calibration.xhtml#a6206cae7b8d4105c777a38309ebd98c2">GetGainAt</a>(<span class="keywordtype">int</span> chip,<span class="keywordtype">int</span> chn,<span class="keywordtype">int</span> bin)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> fCalibrationData[chip]-&gt;<a class="code" href="class_response_calibration_1_1_calibration_data.xhtml#aa17cb550d34e0ca42bd41e68b3299d3c">fChannel</a>[chn]-&gt;<a class="code" href="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel.xhtml#a00a2a300ab882187c05abe61c01a1d9c">fGain</a>[bin]; };</div><div class="line"><a name="l00379"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#a38373f79698b8292d110936b01b91380">  379</a></span>&#160;   <span class="keywordtype">double</span> <a class="code" href="class_response_calibration.xhtml#a38373f79698b8292d110936b01b91380">GetMeasPointXAt</a>(<span class="keywordtype">int</span> ip)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> fXXSave[ip]; };</div><div class="line"><a name="l00380"></a><span class="lineno"><a class="line" href="class_response_calibration.xhtml#ac69cbc50485d95de2a1dccbd8c8e96dc">  380</a></span>&#160;   <span class="keywordtype">double</span> <a class="code" href="class_response_calibration.xhtml#ac69cbc50485d95de2a1dccbd8c8e96dc">GetMeasPointYAt</a>(<span class="keywordtype">int</span> ip)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> fYYSave[ip]; };</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;   <span class="keywordtype">void</span>   InitFields(<span class="keywordtype">int</span> numberOfPointsLowVolt, <span class="keywordtype">int</span> numberOfPoints, <span class="keywordtype">int</span> numberOfMode2Bins, <span class="keywordtype">int</span> numberOfSamples,</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;                     <span class="keywordtype">int</span> numberOfGridPoints, <span class="keywordtype">int</span> numberOfXConstPoints, <span class="keywordtype">int</span> numberOfXConstGridPoints,</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;                     <span class="keywordtype">double</span> triggerFrequency, <span class="keywordtype">int</span> showStatistics);</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;   <span class="keywordtype">void</span>   DeleteFields();</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;   <span class="keywordtype">void</span>   CalibrationTrigger(<span class="keywordtype">int</span> mode, <span class="keywordtype">double</span> voltage);</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;   <span class="keywordtype">void</span>   CalibrationStart(<span class="keywordtype">double</span> voltage);</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;   <span class="keyword">static</span> <span class="keywordtype">float</span>  GetValue(<span class="keywordtype">float</span> *coefficients, <span class="keywordtype">float</span> u, <span class="keywordtype">int</span> n);</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;   <span class="keyword">static</span> <span class="keywordtype">int</span>    Approx(<span class="keywordtype">float</span> *p, <span class="keywordtype">float</span> *uu, <span class="keywordtype">int</span> np, <span class="keywordtype">int</span> nu, <span class="keywordtype">float</span> *coef);</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;   <span class="keyword">static</span> <span class="keywordtype">void</span>   LeastSquaresAccumulation(<span class="keywordtype">float</span> **matrix, <span class="keywordtype">int</span> nb, <span class="keywordtype">int</span> *ip, <span class="keywordtype">int</span> *ir, <span class="keywordtype">int</span> mt, <span class="keywordtype">int</span> jt);</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;   <span class="keyword">static</span> <span class="keywordtype">int</span>    LeastSquaresSolving(<span class="keywordtype">float</span> **matrix, <span class="keywordtype">int</span> nb, <span class="keywordtype">int</span> ip, <span class="keywordtype">int</span> ir, <span class="keywordtype">float</span> *x, <span class="keywordtype">int</span> n);</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;   <span class="keyword">static</span> <span class="keywordtype">void</span>   Housholder(<span class="keywordtype">int</span> lpivot, <span class="keywordtype">int</span> l1, <span class="keywordtype">int</span> m, <span class="keywordtype">float</span> **u, <span class="keywordtype">int</span> iU1, <span class="keywordtype">int</span> iU2, <span class="keywordtype">float</span> *up, <span class="keywordtype">float</span> **c, <span class="keywordtype">int</span> iC1,</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;                            <span class="keywordtype">int</span> iC2, <span class="keywordtype">int</span> ice, <span class="keywordtype">int</span> ncv);</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;   <span class="keyword">static</span> <span class="keywordtype">int</span>    MakeDir(<span class="keyword">const</span> <span class="keywordtype">char</span> *path);</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;   <span class="keyword">static</span> <span class="keywordtype">void</span>   Average(<span class="keywordtype">int</span> method,<span class="keywordtype">float</span> *samples,<span class="keywordtype">int</span> numberOfSamples,<span class="keywordtype">float</span> &amp;mean,<span class="keywordtype">float</span> &amp;error,<span class="keywordtype">float</span> sigmaBoundary);</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;};</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div><div class="line"><a name="l00402"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml">  402</a></span>&#160;<span class="keyword">class </span><a class="code" href="class_d_r_s_board.xhtml">DRSBoard</a> {</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00404"></a><span class="lineno"><a class="line" href="class_d_r_s_board_1_1_time_data.xhtml">  404</a></span>&#160;   <span class="keyword">class </span><a class="code" href="class_d_r_s_board_1_1_time_data.xhtml">TimeData</a> {</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;   <span class="keyword">public</span>:</div><div class="line"><a name="l00406"></a><span class="lineno"><a class="line" href="class_d_r_s_board_1_1_time_data_1_1_frequency_data.xhtml">  406</a></span>&#160;      <span class="keyword">class </span><a class="code" href="class_d_r_s_board_1_1_time_data_1_1_frequency_data.xhtml">FrequencyData</a> {</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;      <span class="keyword">public</span>:</div><div class="line"><a name="l00408"></a><span class="lineno"><a class="line" href="class_d_r_s_board_1_1_time_data_1_1_frequency_data.xhtml#a9f10745341b26c7817c5fe99ec19e567">  408</a></span>&#160;         <span class="keywordtype">int</span>    <a class="code" href="class_d_r_s_board_1_1_time_data_1_1_frequency_data.xhtml#a9f10745341b26c7817c5fe99ec19e567">fFrequency</a>;</div><div class="line"><a name="l00409"></a><span class="lineno"><a class="line" href="class_d_r_s_board_1_1_time_data_1_1_frequency_data.xhtml#ae834e2ee6053f349c3f4fc1b19cf9a7a">  409</a></span>&#160;         <span class="keywordtype">double</span> fBin[<a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a20b4a8f5cdfc2a3ce90c3f32af999fa0">kNumberOfBins</a>];</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;      };</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;      <span class="keyword">enum</span> {</div><div class="line"><a name="l00413"></a><span class="lineno"><a class="line" href="class_d_r_s_board_1_1_time_data.xhtml#a3f2a7d940916eb89063dac7b20ed484ca0f0efb747e3021880059c4c091edb7be">  413</a></span>&#160;         kMaxNumberOfFrequencies = 4000</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;      };</div><div class="line"><a name="l00415"></a><span class="lineno"><a class="line" href="class_d_r_s_board_1_1_time_data.xhtml#adcfd973f1d37b6ebf3bd4fdc24ee5398">  415</a></span>&#160;      <span class="keywordtype">int</span>            <a class="code" href="class_d_r_s_board_1_1_time_data.xhtml#adcfd973f1d37b6ebf3bd4fdc24ee5398">fChip</a>;</div><div class="line"><a name="l00416"></a><span class="lineno"><a class="line" href="class_d_r_s_board_1_1_time_data.xhtml#aa8f065d3bb4fc581465ca5f25303dd17">  416</a></span>&#160;      <span class="keywordtype">int</span>            <a class="code" href="class_d_r_s_board_1_1_time_data.xhtml#aa8f065d3bb4fc581465ca5f25303dd17">fNumberOfFrequencies</a>;</div><div class="line"><a name="l00417"></a><span class="lineno"><a class="line" href="class_d_r_s_board_1_1_time_data.xhtml#a1da5ba776e0206c6d47bf53e1e766f5f">  417</a></span>&#160;      <a class="code" href="class_d_r_s_board_1_1_time_data_1_1_frequency_data.xhtml">FrequencyData</a> *fFrequency[kMaxNumberOfFrequencies];</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;   <span class="keyword">private</span>:</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;      <a class="code" href="class_d_r_s_board_1_1_time_data.xhtml">TimeData</a>(<span class="keyword">const</span> <a class="code" href="class_d_r_s_board_1_1_time_data.xhtml">TimeData</a> &amp;c);              <span class="comment">// not implemented</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;      <a class="code" href="class_d_r_s_board_1_1_time_data.xhtml">TimeData</a> &amp;operator=(<span class="keyword">const</span> <a class="code" href="class_d_r_s_board_1_1_time_data.xhtml">TimeData</a> &amp;rhs); <span class="comment">// not implemented</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;   <span class="keyword">public</span>:</div><div class="line"><a name="l00424"></a><span class="lineno"><a class="line" href="class_d_r_s_board_1_1_time_data.xhtml#a3377f911684400cee12a54ed65bbe911">  424</a></span>&#160;      <a class="code" href="class_d_r_s_board_1_1_time_data.xhtml#a3377f911684400cee12a54ed65bbe911">TimeData</a>()</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;      :fChip(0)</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;      ,fNumberOfFrequencies(0) {</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;      }</div><div class="line"><a name="l00428"></a><span class="lineno"><a class="line" href="class_d_r_s_board_1_1_time_data.xhtml#a6bf58419d977077e12ed416b8a6209f7">  428</a></span>&#160;      <a class="code" href="class_d_r_s_board_1_1_time_data.xhtml#a6bf58419d977077e12ed416b8a6209f7">~TimeData</a>() {</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;         <span class="keywordtype">int</span> i;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;         <span class="keywordflow">for</span> (i = 0; i &lt; fNumberOfFrequencies; i++) {</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;            <span class="keyword">delete</span> fFrequency[i];</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;         }</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;      }</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;   };</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;   <span class="comment">// DAC channels (CMC Version 1 : DAC_COFSA,DAC_COFSB,DAC_DRA,DAC_DSA,DAC_TLEVEL,DAC_ACALIB,DAC_DSB,DAC_DRB)</span></div><div class="line"><a name="l00438"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a810cd9b3047f5feaa0c4cb293635010e">  438</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>         <a class="code" href="class_d_r_s_board.xhtml#a810cd9b3047f5feaa0c4cb293635010e">fDAC_COFSA</a>;</div><div class="line"><a name="l00439"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a17dde05536ab2190bf2e602646b33fa1">  439</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>         <a class="code" href="class_d_r_s_board.xhtml#a17dde05536ab2190bf2e602646b33fa1">fDAC_COFSB</a>;</div><div class="line"><a name="l00440"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a642cf0ea03513073b19dadf9eace780c">  440</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>         <a class="code" href="class_d_r_s_board.xhtml#a642cf0ea03513073b19dadf9eace780c">fDAC_DRA</a>;</div><div class="line"><a name="l00441"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#ac6c1701467bf3e5c8d9876776eab9af9">  441</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>         <a class="code" href="class_d_r_s_board.xhtml#ac6c1701467bf3e5c8d9876776eab9af9">fDAC_DSA</a>;</div><div class="line"><a name="l00442"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a4822d5373d7bfd088bd08050a8ac137e">  442</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>         <a class="code" href="class_d_r_s_board.xhtml#a4822d5373d7bfd088bd08050a8ac137e">fDAC_TLEVEL</a>;</div><div class="line"><a name="l00443"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a6a8238466c80de8092ad8c72dfdc0a88">  443</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>         <a class="code" href="class_d_r_s_board.xhtml#a6a8238466c80de8092ad8c72dfdc0a88">fDAC_ACALIB</a>;</div><div class="line"><a name="l00444"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a9e3f4c1f639856f5d5d04a22f9b00d2b">  444</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>         <a class="code" href="class_d_r_s_board.xhtml#a9e3f4c1f639856f5d5d04a22f9b00d2b">fDAC_DSB</a>;</div><div class="line"><a name="l00445"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a1e425a3d189aab1de17b5d5b6728727c">  445</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>         <a class="code" href="class_d_r_s_board.xhtml#a1e425a3d189aab1de17b5d5b6728727c">fDAC_DRB</a>;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;   <span class="comment">// DAC channels (CMC Version 2+3 : DAC_COFS,DAC_DSA,DAC_DSB,DAC_TLEVEL,DAC_ADCOFS,DAC_CLKOFS,DAC_ACALIB)</span></div><div class="line"><a name="l00447"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a672a9fb83fc7940954f765b148985d1d">  447</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>         <a class="code" href="class_d_r_s_board.xhtml#a672a9fb83fc7940954f765b148985d1d">fDAC_COFS</a>;</div><div class="line"><a name="l00448"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#aa42c53ecce58e5e2db7af8c2ca1211cd">  448</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>         <a class="code" href="class_d_r_s_board.xhtml#aa42c53ecce58e5e2db7af8c2ca1211cd">fDAC_ADCOFS</a>;</div><div class="line"><a name="l00449"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a802366ba58fa7d263d8781b6e5a00b20">  449</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>         <a class="code" href="class_d_r_s_board.xhtml#a802366ba58fa7d263d8781b6e5a00b20">fDAC_CLKOFS</a>;</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;   <span class="comment">// DAC channels (CMC Version 4 : DAC_ROFS_1,DAC_DSA,DAC_DSB,DAC_ROFS_2,DAC_ADCOFS,DAC_ACALIB,DAC_INOFS,DAC_BIAS)</span></div><div class="line"><a name="l00451"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a76f2743bb11d7f19bbcf4a6c9c5db9fc">  451</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>         <a class="code" href="class_d_r_s_board.xhtml#a76f2743bb11d7f19bbcf4a6c9c5db9fc">fDAC_ROFS_1</a>;</div><div class="line"><a name="l00452"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#ab0e98f50f17ca613d1bc3843d8afc925">  452</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>         <a class="code" href="class_d_r_s_board.xhtml#ab0e98f50f17ca613d1bc3843d8afc925">fDAC_ROFS_2</a>;</div><div class="line"><a name="l00453"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#ad68eb500251ead2586cf79b1faa1005c">  453</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>         <a class="code" href="class_d_r_s_board.xhtml#ad68eb500251ead2586cf79b1faa1005c">fDAC_INOFS</a>;</div><div class="line"><a name="l00454"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a7dbb7d671c8e436b993a5e87b31065b4">  454</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>         <a class="code" href="class_d_r_s_board.xhtml#a7dbb7d671c8e436b993a5e87b31065b4">fDAC_BIAS</a>;</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;   <span class="comment">// DAC channels (USB EVAL1 (fBoardType 5) : DAC_ROFS_1,DAC_CMOFS,DAC_CALN,DAC_CALP,DAC_BIAS,DAC_TLEVEL,DAC_ONOFS)</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;   <span class="comment">// DAC channels (USB EVAL3 (fBoardType 7) : DAC_ROFS_1,DAC_CMOFS,DAC_CALN,DAC_CALP,DAC_BIAS,DAC_TLEVEL,DAC_ONOFS)</span></div><div class="line"><a name="l00457"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a746f54d7f3680ef55917122dba942e18">  457</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>         <a class="code" href="class_d_r_s_board.xhtml#a746f54d7f3680ef55917122dba942e18">fDAC_CMOFS</a>;</div><div class="line"><a name="l00458"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a92cdb6cb9f66979ddd42dae136597bc9">  458</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>         <a class="code" href="class_d_r_s_board.xhtml#a92cdb6cb9f66979ddd42dae136597bc9">fDAC_CALN</a>;</div><div class="line"><a name="l00459"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a34be9c35e267d512aa6bdb70429ac723">  459</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>         <a class="code" href="class_d_r_s_board.xhtml#a34be9c35e267d512aa6bdb70429ac723">fDAC_CALP</a>;</div><div class="line"><a name="l00460"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a0379970c7c7f1f7b770883c83289237f">  460</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>         <a class="code" href="class_d_r_s_board.xhtml#a0379970c7c7f1f7b770883c83289237f">fDAC_ONOFS</a>;</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;   <span class="comment">// DAC channels (DRS4 MEZZ1 (fBoardType 6) : DAC_ONOFS,DAC_CMOFSP,DAC_CALN,DAC_CALP,DAC_BIAS,DAC_CMOFSN,DAC_ROFS_1)</span></div><div class="line"><a name="l00462"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a61377868b567dbc24597274e1717dc61">  462</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>         <a class="code" href="class_d_r_s_board.xhtml#a61377868b567dbc24597274e1717dc61">fDAC_CMOFSP</a>;</div><div class="line"><a name="l00463"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a7e323137cb16961b1269cc2ecd5d76ec">  463</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>         <a class="code" href="class_d_r_s_board.xhtml#a7e323137cb16961b1269cc2ecd5d76ec">fDAC_CMOFSN</a>;</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;   <span class="comment">// DAC channels (DRS4 EVAL4 (fBoardType 8) : DAC_ONOFS,DAC_TLEVEL4,DAC_CALN,DAC_CALP,DAC_BIAS,DAC_TLEVEL1,DAC_TLEVEL2,DAC_TLEVEL3)</span></div><div class="line"><a name="l00465"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a36e5f5e782fd3588f51931e5d61e4ed0">  465</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>         <a class="code" href="class_d_r_s_board.xhtml#a36e5f5e782fd3588f51931e5d61e4ed0">fDAC_TLEVEL1</a>;</div><div class="line"><a name="l00466"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a1e50e3a633433423a00c454ff5fa15c3">  466</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>         <a class="code" href="class_d_r_s_board.xhtml#a1e50e3a633433423a00c454ff5fa15c3">fDAC_TLEVEL2</a>;</div><div class="line"><a name="l00467"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a5cc79c92a602d7b2c6d6470ed1bbce35">  467</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>         <a class="code" href="class_d_r_s_board.xhtml#a5cc79c92a602d7b2c6d6470ed1bbce35">fDAC_TLEVEL3</a>;</div><div class="line"><a name="l00468"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#ab0d840fe705b93df03627b484d681ef7">  468</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>         <a class="code" href="class_d_r_s_board.xhtml#ab0d840fe705b93df03627b484d681ef7">fDAC_TLEVEL4</a>;</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;   <span class="comment">// Fields for DRS</span></div><div class="line"><a name="l00472"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a47a2c4034d6186fe92b3267775e8b8bb">  472</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#a47a2c4034d6186fe92b3267775e8b8bb">fDRSType</a>;</div><div class="line"><a name="l00473"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#add51eb86b8c38ebdc36d8110dd0a7f0a">  473</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#add51eb86b8c38ebdc36d8110dd0a7f0a">fBoardType</a>;</div><div class="line"><a name="l00474"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a82422e8f9b8c1207f754fe4636050404">  474</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#a82422e8f9b8c1207f754fe4636050404">fNumberOfChips</a>;</div><div class="line"><a name="l00475"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#af9b6462ed39f6b642ab3b6d7b75aca9c">  475</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#af9b6462ed39f6b642ab3b6d7b75aca9c">fNumberOfChannels</a>;</div><div class="line"><a name="l00476"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a96ac73605d19fcd39cf544b22a675974">  476</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#a96ac73605d19fcd39cf544b22a675974">fRequiredFirmwareVersion</a>;</div><div class="line"><a name="l00477"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a2af540028e10ce4c07039e9be349df03">  477</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#a2af540028e10ce4c07039e9be349df03">fFirmwareVersion</a>;</div><div class="line"><a name="l00478"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#ae8d2235dddb1843be39b30d039d28728">  478</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#ae8d2235dddb1843be39b30d039d28728">fBoardSerialNumber</a>;</div><div class="line"><a name="l00479"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a86a870a039e9259eb38f0557ed5efb83">  479</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#a86a870a039e9259eb38f0557ed5efb83">fHasMultiBuffer</a>;</div><div class="line"><a name="l00480"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a4afdedfdae9526ce10fee00b25ee5387">  480</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>         <a class="code" href="class_d_r_s_board.xhtml#a4afdedfdae9526ce10fee00b25ee5387">fTransport</a>;</div><div class="line"><a name="l00481"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#ab96e9d59776c2019f16c4b6cc047c163">  481</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>         <a class="code" href="class_d_r_s_board.xhtml#ab96e9d59776c2019f16c4b6cc047c163">fCtrlBits</a>;</div><div class="line"><a name="l00482"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a67afcef97930d8a09383e137bb6c9636">  482</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#a67afcef97930d8a09383e137bb6c9636">fNumberOfReadoutChannels</a>;</div><div class="line"><a name="l00483"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a929b5a176d43dff3a7ae958f18ef9944">  483</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#a929b5a176d43dff3a7ae958f18ef9944">fReadoutChannelConfig</a>;</div><div class="line"><a name="l00484"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a15f20433802748c6c8729e7aa7e71ef3">  484</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#a15f20433802748c6c8729e7aa7e71ef3">fADCClkPhase</a>;</div><div class="line"><a name="l00485"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a0d097b5422d12110bb89aef21271b85b">  485</a></span>&#160;   <span class="keywordtype">bool</span>                 <a class="code" href="class_d_r_s_board.xhtml#a0d097b5422d12110bb89aef21271b85b">fADCClkInvert</a>;</div><div class="line"><a name="l00486"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a28cf9658a2727dbca1412cc4eeccc677">  486</a></span>&#160;   <span class="keywordtype">double</span>               <a class="code" href="class_d_r_s_board.xhtml#a28cf9658a2727dbca1412cc4eeccc677">fExternalClockFrequency</a>;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;<span class="preprocessor">#ifdef HAVE_USB</span></div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;   MUSB_INTERFACE      *fUsbInterface;</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;<span class="preprocessor">#ifdef HAVE_VME</span></div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;   MVME_INTERFACE      *fVmeInterface;</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;   mvme_addr_t          fBaseAddress;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00494"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a8353e70ecd25d9b46e21dcf759ca97d4">  494</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#a8353e70ecd25d9b46e21dcf759ca97d4">fSlotNumber</a>;</div><div class="line"><a name="l00495"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a5b45d40f1cd10698070f6542654c07e1">  495</a></span>&#160;   <span class="keywordtype">double</span>               <a class="code" href="class_d_r_s_board.xhtml#a5b45d40f1cd10698070f6542654c07e1">fNominalFrequency</a>;</div><div class="line"><a name="l00496"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a7fbe976ae5b04fa7e8ff1edcc394d11b">  496</a></span>&#160;   <span class="keywordtype">double</span>               <a class="code" href="class_d_r_s_board.xhtml#a7fbe976ae5b04fa7e8ff1edcc394d11b">fTrueFrequency</a>;</div><div class="line"><a name="l00497"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a826bbce983a542223b5c38234453165b">  497</a></span>&#160;   <span class="keywordtype">double</span>               <a class="code" href="class_d_r_s_board.xhtml#a826bbce983a542223b5c38234453165b">fTCALFrequency</a>;</div><div class="line"><a name="l00498"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a79456271c8419f5a0692efbf5ce05b8a">  498</a></span>&#160;   <span class="keywordtype">double</span>               <a class="code" href="class_d_r_s_board.xhtml#a79456271c8419f5a0692efbf5ce05b8a">fRefClock</a>;</div><div class="line"><a name="l00499"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#aa68affe664959b763d0b60221eea32d0">  499</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#aa68affe664959b763d0b60221eea32d0">fMultiBuffer</a>;</div><div class="line"><a name="l00500"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a7362064ea5a39327c54b309f158a6422">  500</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#a7362064ea5a39327c54b309f158a6422">fDominoMode</a>;</div><div class="line"><a name="l00501"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a2bbccf99580553c64ae5dc8cf932cd17">  501</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#a2bbccf99580553c64ae5dc8cf932cd17">fDominoActive</a>;</div><div class="line"><a name="l00502"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#acc3955004ff083d6c6fbe506ba690e3b">  502</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#acc3955004ff083d6c6fbe506ba690e3b">fADCActive</a>;</div><div class="line"><a name="l00503"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a45ec2b8c8964e6ea10327336f3f3bd2a">  503</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#a45ec2b8c8964e6ea10327336f3f3bd2a">fChannelConfig</a>;</div><div class="line"><a name="l00504"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a3cee01f7db1a87530da03ca11cdd249f">  504</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#a3cee01f7db1a87530da03ca11cdd249f">fChannelCascading</a>;</div><div class="line"><a name="l00505"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#aacfb8b5b8cbd78ea8ef98530f3ab908c">  505</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#aacfb8b5b8cbd78ea8ef98530f3ab908c">fChannelDepth</a>;</div><div class="line"><a name="l00506"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#afc111bc700c0fcc926f64cd03008d6e8">  506</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#afc111bc700c0fcc926f64cd03008d6e8">fWSRLoop</a>;</div><div class="line"><a name="l00507"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a07b35fafca718cc745c2a1d52fb62969">  507</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#a07b35fafca718cc745c2a1d52fb62969">fReadoutMode</a>;</div><div class="line"><a name="l00508"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#affb2f4e9114ad70ae039d66b029325f0">  508</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>       <a class="code" href="class_d_r_s_board.xhtml#affb2f4e9114ad70ae039d66b029325f0">fReadPointer</a>;</div><div class="line"><a name="l00509"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a52e36526a2f5410f0f36eaa37d58f003">  509</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#a52e36526a2f5410f0f36eaa37d58f003">fNMultiBuffer</a>;</div><div class="line"><a name="l00510"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a25724fdfd8d824b90ecdadcf6fe91223">  510</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#a25724fdfd8d824b90ecdadcf6fe91223">fTriggerEnable1</a>;</div><div class="line"><a name="l00511"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a37192b04baaf141b4474d6e9ec33a3f3">  511</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#a37192b04baaf141b4474d6e9ec33a3f3">fTriggerEnable2</a>;</div><div class="line"><a name="l00512"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#aed18832b69cf58c4e400ae42922ae93f">  512</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#aed18832b69cf58c4e400ae42922ae93f">fTriggerSource</a>;</div><div class="line"><a name="l00513"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#aaaedfcbc5cda28201f52e968edbb8bab">  513</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#aaaedfcbc5cda28201f52e968edbb8bab">fTriggerDelay</a>;</div><div class="line"><a name="l00514"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#ab645921fa0052a27584853e0d205243a">  514</a></span>&#160;   <span class="keywordtype">double</span>               <a class="code" href="class_d_r_s_board.xhtml#ab645921fa0052a27584853e0d205243a">fTriggerDelayNs</a>;</div><div class="line"><a name="l00515"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a4962380d60965d1a20c19b2d4ab03023">  515</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#a4962380d60965d1a20c19b2d4ab03023">fSyncDelay</a>;</div><div class="line"><a name="l00516"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a9139032b746b14b2c3a9575b4555a8c7">  516</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#a9139032b746b14b2c3a9575b4555a8c7">fDelayedStart</a>;</div><div class="line"><a name="l00517"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#aaf56429896ac6bba7c089ff875b47986">  517</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#aaf56429896ac6bba7c089ff875b47986">fTranspMode</a>;</div><div class="line"><a name="l00518"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a6808aff2dca2efac07c6e1ab53dbfa4a">  518</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#a6808aff2dca2efac07c6e1ab53dbfa4a">fDecimation</a>;</div><div class="line"><a name="l00519"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a1b9565d401a07de2532f03be8a88b2de">  519</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>       fStopCell[4];</div><div class="line"><a name="l00520"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#ae9a0a98920ea3b20981b150d67e440ba">  520</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>        fStopWSR[4];</div><div class="line"><a name="l00521"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a1592db8f03a4e15a348b71300536b189">  521</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>       <a class="code" href="class_d_r_s_board.xhtml#a1592db8f03a4e15a348b71300536b189">fTriggerBus</a>;</div><div class="line"><a name="l00522"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a8b537a61ef681215dc5a34c0f42bf50a">  522</a></span>&#160;   <span class="keywordtype">double</span>               <a class="code" href="class_d_r_s_board.xhtml#a8b537a61ef681215dc5a34c0f42bf50a">fROFS</a>;</div><div class="line"><a name="l00523"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#aa66d043d583bef438953d1cf315e3464">  523</a></span>&#160;   <span class="keywordtype">double</span>               <a class="code" href="class_d_r_s_board.xhtml#aa66d043d583bef438953d1cf315e3464">fRange</a>;</div><div class="line"><a name="l00524"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#af01ab409e585e975d147179b0c280a7d">  524</a></span>&#160;   <span class="keywordtype">double</span>               <a class="code" href="class_d_r_s_board.xhtml#af01ab409e585e975d147179b0c280a7d">fCommonMode</a>;</div><div class="line"><a name="l00525"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#add3d53d21e7403e4fd8a6f057221d130">  525</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#add3d53d21e7403e4fd8a6f057221d130">fAcalMode</a>;</div><div class="line"><a name="l00526"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a22b452bbb32b4c3c4e40c132254be6e9">  526</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#a22b452bbb32b4c3c4e40c132254be6e9">fbkAcalMode</a>;</div><div class="line"><a name="l00527"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a15214c8a9683e1655da038d8c1a979d7">  527</a></span>&#160;   <span class="keywordtype">double</span>               <a class="code" href="class_d_r_s_board.xhtml#a15214c8a9683e1655da038d8c1a979d7">fAcalVolt</a>;</div><div class="line"><a name="l00528"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a785e9cb5765be629656f7e46e25df81a">  528</a></span>&#160;   <span class="keywordtype">double</span>               <a class="code" href="class_d_r_s_board.xhtml#a785e9cb5765be629656f7e46e25df81a">fbkAcalVolt</a>;</div><div class="line"><a name="l00529"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a3028c351d3cea3f66f28226f7a0ffa93">  529</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#a3028c351d3cea3f66f28226f7a0ffa93">fTcalFreq</a>;</div><div class="line"><a name="l00530"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a8d1f4dff412623da2cdb7ec3ead2cbf3">  530</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#a8d1f4dff412623da2cdb7ec3ead2cbf3">fbkTcalFreq</a>;</div><div class="line"><a name="l00531"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a00ff050c1f5acebefd7b931e35129d48">  531</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#a00ff050c1f5acebefd7b931e35129d48">fTcalLevel</a>;</div><div class="line"><a name="l00532"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#afdf012f8afe38c55a1ff1235175fe9c8">  532</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#afdf012f8afe38c55a1ff1235175fe9c8">fbkTcalLevel</a>;</div><div class="line"><a name="l00533"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a15a41bb318acb4cd3617a95831e16cb9">  533</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#a15a41bb318acb4cd3617a95831e16cb9">fTcalPhase</a>;</div><div class="line"><a name="l00534"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#ae12fab15aef9bde10395f83a45e6d6d0">  534</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#ae12fab15aef9bde10395f83a45e6d6d0">fTcalSource</a>;</div><div class="line"><a name="l00535"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a2e9338ef786bf6103252c89450f4b0db">  535</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#a2e9338ef786bf6103252c89450f4b0db">fRefclk</a>;</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;</div><div class="line"><a name="l00537"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a7dcf60d03151c59aa71f8b424e6788a3">  537</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>        fWaveforms[<a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769af3c9ba00b7ed6f0b7291c9723d9fabb2">kNumberOfChipsMax</a> * <a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a512db8a7a36c74c34c3282af213bac24">kNumberOfChannelsMax</a> * 2 * <a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a20b4a8f5cdfc2a3ce90c3f32af999fa0">kNumberOfBins</a>];</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;   <span class="comment">// Fields for Calibration</span></div><div class="line"><a name="l00540"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#aa28fc4718ce9b8c1148978005b5901fe">  540</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#aa28fc4718ce9b8c1148978005b5901fe">fMaxChips</a>;</div><div class="line"><a name="l00541"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a22b8ff06b6ca5bd0cafb960435c9495b">  541</a></span>&#160;   <span class="keywordtype">char</span>                 fCalibDirectory[1000];</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;   <span class="comment">// Fields for Response Calibration old method</span></div><div class="line"><a name="l00544"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#ad8f5d21e64d5dd07cf9243403dc9f134">  544</a></span>&#160;   <a class="code" href="class_response_calibration.xhtml">ResponseCalibration</a> *<a class="code" href="class_d_r_s_board.xhtml#ad8f5d21e64d5dd07cf9243403dc9f134">fResponseCalibration</a>;</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;   <span class="comment">// Fields for Calibration new method</span></div><div class="line"><a name="l00547"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a10814673b1930dba9725a9d6e77d0b3b">  547</a></span>&#160;   <span class="keywordtype">bool</span>                 <a class="code" href="class_d_r_s_board.xhtml#a10814673b1930dba9725a9d6e77d0b3b">fVoltageCalibrationValid</a>;</div><div class="line"><a name="l00548"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#aaa44d4f889f5a58eecc4b2adade7bb16">  548</a></span>&#160;   <span class="keywordtype">double</span>               <a class="code" href="class_d_r_s_board.xhtml#aaa44d4f889f5a58eecc4b2adade7bb16">fCellCalibratedRange</a>;</div><div class="line"><a name="l00549"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#adc13519956f2a389cad6f0745a516855">  549</a></span>&#160;   <span class="keywordtype">double</span>               <a class="code" href="class_d_r_s_board.xhtml#adc13519956f2a389cad6f0745a516855">fCellCalibratedTemperature</a>;</div><div class="line"><a name="l00550"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#acf3e3aa9009e9386e9290aadc911f7f7">  550</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>       fCellOffset[<a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769af3c9ba00b7ed6f0b7291c9723d9fabb2">kNumberOfChipsMax</a> * <a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a512db8a7a36c74c34c3282af213bac24">kNumberOfChannelsMax</a>][<a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a20b4a8f5cdfc2a3ce90c3f32af999fa0">kNumberOfBins</a>];</div><div class="line"><a name="l00551"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a58fa7a42fd9432f00432d96da6493154">  551</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>       fCellOffset2[<a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769af3c9ba00b7ed6f0b7291c9723d9fabb2">kNumberOfChipsMax</a> * <a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a512db8a7a36c74c34c3282af213bac24">kNumberOfChannelsMax</a>][<a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a20b4a8f5cdfc2a3ce90c3f32af999fa0">kNumberOfBins</a>];</div><div class="line"><a name="l00552"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a4837e06277ed0e99f6475b1213a31fc1">  552</a></span>&#160;   <span class="keywordtype">double</span>               fCellGain[<a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769af3c9ba00b7ed6f0b7291c9723d9fabb2">kNumberOfChipsMax</a> * <a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a512db8a7a36c74c34c3282af213bac24">kNumberOfChannelsMax</a>][<a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a20b4a8f5cdfc2a3ce90c3f32af999fa0">kNumberOfBins</a>];</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;</div><div class="line"><a name="l00554"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a949682f03b082f11a1d56a8514e0ca84">  554</a></span>&#160;   <span class="keywordtype">double</span>               <a class="code" href="class_d_r_s_board.xhtml#a949682f03b082f11a1d56a8514e0ca84">fTimingCalibratedFrequency</a>;</div><div class="line"><a name="l00555"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#ae962f57513847478024adc183c3ee8c0">  555</a></span>&#160;   <span class="keywordtype">double</span>               fCellDT[<a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769af3c9ba00b7ed6f0b7291c9723d9fabb2">kNumberOfChipsMax</a>][<a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a512db8a7a36c74c34c3282af213bac24">kNumberOfChannelsMax</a>][<a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a20b4a8f5cdfc2a3ce90c3f32af999fa0">kNumberOfBins</a>];</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;   <span class="comment">// Fields for Time Calibration</span></div><div class="line"><a name="l00558"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a253ccc162302cd31960988dcff9514e3">  558</a></span>&#160;   <a class="code" href="class_d_r_s_board_1_1_time_data.xhtml">TimeData</a>           **<a class="code" href="class_d_r_s_board.xhtml#a253ccc162302cd31960988dcff9514e3">fTimeData</a>;</div><div class="line"><a name="l00559"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a852b7c9b40ae20f882e7ac0fe008cb2e">  559</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#a852b7c9b40ae20f882e7ac0fe008cb2e">fNumberOfTimeData</a>;</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;   <span class="comment">// General debugging flag</span></div><div class="line"><a name="l00562"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a5a5f44f02e234b2856ffa1b09cbda1fe">  562</a></span>&#160;   <span class="keywordtype">int</span> <a class="code" href="class_d_r_s_board.xhtml#a5a5f44f02e234b2856ffa1b09cbda1fe">fDebug</a>;</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;   <span class="comment">// Fields for wave transfer</span></div><div class="line"><a name="l00565"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#ab57c0721f3316e5faf112f71174fbd52">  565</a></span>&#160;   <span class="keywordtype">bool</span>                 fWaveTransferred[<a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769af3c9ba00b7ed6f0b7291c9723d9fabb2">kNumberOfChipsMax</a> * <a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a512db8a7a36c74c34c3282af213bac24">kNumberOfChannelsMax</a>];</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;   <span class="comment">// Waveform Rotation</span></div><div class="line"><a name="l00568"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a00960bd49af86d59d86421f4b3192c04">  568</a></span>&#160;   <span class="keywordtype">int</span>                  <a class="code" href="class_d_r_s_board.xhtml#a00960bd49af86d59d86421f4b3192c04">fTriggerStartBin</a>; <span class="comment">// Start Bin of the trigger</span></div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;   <a class="code" href="class_d_r_s_board.xhtml">DRSBoard</a>(<span class="keyword">const</span> <a class="code" href="class_d_r_s_board.xhtml">DRSBoard</a> &amp;c);              <span class="comment">// not implemented</span></div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;   <a class="code" href="class_d_r_s_board.xhtml">DRSBoard</a> &amp;operator=(<span class="keyword">const</span> <a class="code" href="class_d_r_s_board.xhtml">DRSBoard</a> &amp;rhs); <span class="comment">// not implemented</span></div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;   <span class="comment">// Public Methods</span></div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;<span class="preprocessor">#ifdef HAVE_USB</span></div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;   <a class="code" href="class_d_r_s_board.xhtml">DRSBoard</a>(MUSB_INTERFACE * musb_interface, <span class="keywordtype">int</span> usb_slot);</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;<span class="preprocessor">#ifdef HAVE_VME</span></div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;   <a class="code" href="class_d_r_s_board.xhtml">DRSBoard</a>(MVME_INTERFACE * mvme_interface, mvme_addr_t base_address, <span class="keywordtype">int</span> slot_number);</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;   MVME_INTERFACE *GetVMEInterface()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> fVmeInterface; };</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;   ~<a class="code" href="class_d_r_s_board.xhtml">DRSBoard</a>();</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;   <span class="keywordtype">int</span>          SetBoardSerialNumber(<span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> serialNumber);</div><div class="line"><a name="l00587"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a6a358b6f6b0c284287ab5004330ae206">  587</a></span>&#160;   <span class="keywordtype">int</span>          <a class="code" href="class_d_r_s_board.xhtml#a6a358b6f6b0c284287ab5004330ae206">GetBoardSerialNumber</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> fBoardSerialNumber; }</div><div class="line"><a name="l00588"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a1642426a4847e47fe09e55327b796543">  588</a></span>&#160;   <span class="keywordtype">int</span>          <a class="code" href="class_d_r_s_board.xhtml#a1642426a4847e47fe09e55327b796543">HasMultiBuffer</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> fHasMultiBuffer; }</div><div class="line"><a name="l00589"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a9d17f829582742178f2a3eefe894c4a4">  589</a></span>&#160;   <span class="keywordtype">int</span>          <a class="code" href="class_d_r_s_board.xhtml#a9d17f829582742178f2a3eefe894c4a4">GetFirmwareVersion</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> fFirmwareVersion; }</div><div class="line"><a name="l00590"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#afbfcdb21ef8d15ccfeaef20ce922d1b1">  590</a></span>&#160;   <span class="keywordtype">int</span>          <a class="code" href="class_d_r_s_board.xhtml#afbfcdb21ef8d15ccfeaef20ce922d1b1">GetRequiredFirmwareVersion</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> fRequiredFirmwareVersion; }</div><div class="line"><a name="l00591"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a249af1f87c0f77a1950a7701cf9781a2">  591</a></span>&#160;   <span class="keywordtype">int</span>          <a class="code" href="class_d_r_s_board.xhtml#a249af1f87c0f77a1950a7701cf9781a2">GetDRSType</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> fDRSType; }</div><div class="line"><a name="l00592"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a650cf228e0fd1b42e1063bce9426e8d9">  592</a></span>&#160;   <span class="keywordtype">int</span>          <a class="code" href="class_d_r_s_board.xhtml#a650cf228e0fd1b42e1063bce9426e8d9">GetBoardType</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> fBoardType; }</div><div class="line"><a name="l00593"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a68268c6afaa8621541c4991665587b41">  593</a></span>&#160;   <span class="keywordtype">int</span>          <a class="code" href="class_d_r_s_board.xhtml#a68268c6afaa8621541c4991665587b41">GetNumberOfChips</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> fNumberOfChips; }</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;   <span class="comment">// channel         : Flash ADC index</span></div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;   <span class="comment">// readout channel : VME readout index</span></div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;   <span class="comment">// input           : Input on board</span></div><div class="line"><a name="l00597"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#ae63fec81ac5db0f4125178382a895447">  597</a></span>&#160;   <span class="keywordtype">int</span>          <a class="code" href="class_d_r_s_board.xhtml#ae63fec81ac5db0f4125178382a895447">GetNumberOfChannels</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> fNumberOfChannels; }</div><div class="line"><a name="l00598"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#af09e1f404f8a773d747d67971ef86465">  598</a></span>&#160;   <span class="keywordtype">int</span>          <a class="code" href="class_d_r_s_board.xhtml#af09e1f404f8a773d747d67971ef86465">GetChannelDepth</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> fChannelDepth; }</div><div class="line"><a name="l00599"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a1a57282bafdb8a3c46856ebf7928ed69">  599</a></span>&#160;   <span class="keywordtype">int</span>          <a class="code" href="class_d_r_s_board.xhtml#a1a57282bafdb8a3c46856ebf7928ed69">GetChannelCascading</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> fChannelCascading; }</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;   <span class="keyword">inline</span> <span class="keywordtype">int</span>   GetNumberOfReadoutChannels() <span class="keyword">const</span>;</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;   <span class="keyword">inline</span> <span class="keywordtype">int</span>   GetWaveformBufferSize() <span class="keyword">const</span>;</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;   <span class="keyword">inline</span> <span class="keywordtype">int</span>   GetNumberOfInputs() <span class="keyword">const</span>;</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;   <span class="keyword">inline</span> <span class="keywordtype">int</span>   GetNumberOfCalibInputs() <span class="keyword">const</span>;</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;   <span class="keyword">inline</span> <span class="keywordtype">int</span>   GetClockChannel() <span class="keyword">const</span>;</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;   <span class="keyword">inline</span> <span class="keywordtype">int</span>   GetTriggerChannel() <span class="keyword">const</span>;</div><div class="line"><a name="l00606"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a72cc72bd11618a45aac25d084d04a989">  606</a></span>&#160;   <span class="keyword">inline</span> <span class="keywordtype">int</span>   <a class="code" href="class_d_r_s_board.xhtml#a72cc72bd11618a45aac25d084d04a989">GetClockInput</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> Channel2Input(GetClockChannel()); }</div><div class="line"><a name="l00607"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a2402e2248e75f56d76da54d87a276ce8">  607</a></span>&#160;   <span class="keyword">inline</span> <span class="keywordtype">int</span>   <a class="code" href="class_d_r_s_board.xhtml#a2402e2248e75f56d76da54d87a276ce8">GetTriggerInput</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> fDRSType &lt; 4 ? Channel2Input(GetTriggerChannel()) : -1; }</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;   <span class="keyword">inline</span> <span class="keywordtype">int</span>   Channel2Input(<span class="keywordtype">int</span> channel) <span class="keyword">const</span>;</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;   <span class="keyword">inline</span> <span class="keywordtype">int</span>   Channel2ReadoutChannel(<span class="keywordtype">int</span> channel) <span class="keyword">const</span>;</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;   <span class="keyword">inline</span> <span class="keywordtype">int</span>   Input2Channel(<span class="keywordtype">int</span> input, <span class="keywordtype">int</span> ind = 0) <span class="keyword">const</span>;</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;   <span class="keyword">inline</span> <span class="keywordtype">int</span>   Input2ReadoutChannel(<span class="keywordtype">int</span> input, <span class="keywordtype">int</span> ind = 0) <span class="keyword">const</span>;</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;   <span class="keyword">inline</span> <span class="keywordtype">int</span>   ReadoutChannel2Channel(<span class="keywordtype">int</span> readout) <span class="keyword">const</span>;</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;   <span class="keyword">inline</span> <span class="keywordtype">int</span>   ReadoutChannel2Input(<span class="keywordtype">int</span> readout) <span class="keyword">const</span>;</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;   <span class="keyword">inline</span> <span class="keywordtype">bool</span>  IsCalibChannel(<span class="keywordtype">int</span> ch) <span class="keyword">const</span>;</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;   <span class="keyword">inline</span> <span class="keywordtype">bool</span>  IsCalibInput(<span class="keywordtype">int</span> input) <span class="keyword">const</span>;</div><div class="line"><a name="l00617"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#ae2259efe7549f141d3030de671ff19cc">  617</a></span>&#160;   <span class="keywordtype">int</span>          <a class="code" href="class_d_r_s_board.xhtml#ae2259efe7549f141d3030de671ff19cc">GetSlotNumber</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> fSlotNumber; }</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;   <span class="keywordtype">int</span>          InitFPGA(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;   <span class="keywordtype">int</span>          Write(<span class="keywordtype">int</span> type, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> addr, <span class="keywordtype">void</span> *data, <span class="keywordtype">int</span> size);</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;   <span class="keywordtype">int</span>          Read(<span class="keywordtype">int</span> type, <span class="keywordtype">void</span> *data, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> addr, <span class="keywordtype">int</span> size);</div><div class="line"><a name="l00621"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#aeaaffc3fa8f700ec7be0be2c5aa44117">  621</a></span>&#160;   <span class="keywordtype">int</span>          <a class="code" href="class_d_r_s_board.xhtml#aeaaffc3fa8f700ec7be0be2c5aa44117">GetTransport</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> fTransport; }</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;   <span class="keywordtype">void</span>         RegisterTest(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;   <span class="keywordtype">int</span>          RAMTest(<span class="keywordtype">int</span> flag);</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;   <span class="keywordtype">int</span>          ChipTest();</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> GetCtrlReg(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> GetConfigReg(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> GetStatusReg(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;   <span class="keywordtype">void</span>         SetLED(<span class="keywordtype">int</span> state);</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;   <span class="keywordtype">int</span>          SetChannelConfig(<span class="keywordtype">int</span> firstChannel, <span class="keywordtype">int</span> lastChannel, <span class="keywordtype">int</span> nConfigChannels);</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;   <span class="keywordtype">void</span>         SetADCClkPhase(<span class="keywordtype">int</span> phase, <span class="keywordtype">bool</span> invert);</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;   <span class="keywordtype">void</span>         SetWarmup(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> ticks);</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;   <span class="keywordtype">void</span>         SetCooldown(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> ticks);</div><div class="line"><a name="l00633"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#aa37fb0aa69965eabcb258f620a51c3e4">  633</a></span>&#160;   <span class="keywordtype">int</span>          <a class="code" href="class_d_r_s_board.xhtml#aa37fb0aa69965eabcb258f620a51c3e4">GetReadoutChannelConfig</a>() { <span class="keywordflow">return</span> fReadoutChannelConfig; }</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;   <span class="keywordtype">void</span>         SetNumberOfChannels(<span class="keywordtype">int</span> nChannels);</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;   <span class="keywordtype">int</span>          EnableTrigger(<span class="keywordtype">int</span> flag1, <span class="keywordtype">int</span> flag2);</div><div class="line"><a name="l00636"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#ac624adb24e52f6c145a3e41f629b8213">  636</a></span>&#160;   <span class="keywordtype">int</span>          <a class="code" href="class_d_r_s_board.xhtml#ac624adb24e52f6c145a3e41f629b8213">GetTriggerEnable</a>(<span class="keywordtype">int</span> i) { <span class="keywordflow">return</span> i?fTriggerEnable2:fTriggerEnable1; }</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;   <span class="keywordtype">int</span>          SetDelayedTrigger(<span class="keywordtype">int</span> flag);</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;   <span class="keywordtype">int</span>          SetTriggerDelayPercent(<span class="keywordtype">int</span> delay);</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;   <span class="keywordtype">int</span>          SetTriggerDelayNs(<span class="keywordtype">int</span> delay);</div><div class="line"><a name="l00640"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a1650683bb20bc48407f978660298a750">  640</a></span>&#160;   <span class="keywordtype">int</span>          <a class="code" href="class_d_r_s_board.xhtml#a1650683bb20bc48407f978660298a750">GetTriggerDelay</a>() { <span class="keywordflow">return</span> fTriggerDelay; }</div><div class="line"><a name="l00641"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#ad54d8816fa94c56763731db6a5a2f906">  641</a></span>&#160;   <span class="keywordtype">double</span>       <a class="code" href="class_d_r_s_board.xhtml#ad54d8816fa94c56763731db6a5a2f906">GetTriggerDelayNs</a>() { <span class="keywordflow">return</span> fTriggerDelayNs; }</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;   <span class="keywordtype">int</span>          SetSyncDelay(<span class="keywordtype">int</span> ticks);</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;   <span class="keywordtype">int</span>          SetTriggerLevel(<span class="keywordtype">double</span> value);</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;   <span class="keywordtype">int</span>          SetIndividualTriggerLevel(<span class="keywordtype">int</span> channel, <span class="keywordtype">double</span> voltage);</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;   <span class="keywordtype">int</span>          SetTriggerPolarity(<span class="keywordtype">bool</span> negative);</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;   <span class="keywordtype">int</span>          SetTriggerSource(<span class="keywordtype">int</span> source);</div><div class="line"><a name="l00647"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a9acef812d437447d6179d7defe51b455">  647</a></span>&#160;   <span class="keywordtype">int</span>          <a class="code" href="class_d_r_s_board.xhtml#a9acef812d437447d6179d7defe51b455">GetTriggerSource</a>() { <span class="keywordflow">return</span> fTriggerSource; }</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;   <span class="keywordtype">int</span>          SetDelayedStart(<span class="keywordtype">int</span> flag);</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;   <span class="keywordtype">int</span>          SetTranspMode(<span class="keywordtype">int</span> flag);</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;   <span class="keywordtype">int</span>          SetStandbyMode(<span class="keywordtype">int</span> flag);</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;   <span class="keywordtype">int</span>          SetDecimation(<span class="keywordtype">int</span> flag);</div><div class="line"><a name="l00652"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#ab08bc4be4645c5ea682e13cccb293748">  652</a></span>&#160;   <span class="keywordtype">int</span>          <a class="code" href="class_d_r_s_board.xhtml#ab08bc4be4645c5ea682e13cccb293748">GetDecimation</a>() { <span class="keywordflow">return</span> fDecimation; }</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;   <span class="keywordtype">int</span>          IsBusy(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;   <span class="keywordtype">int</span>          IsEventAvailable(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;   <span class="keywordtype">int</span>          IsPLLLocked(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;   <span class="keywordtype">int</span>          IsLMKLocked(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;   <span class="keywordtype">int</span>          IsNewFreq(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> chipIndex);</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;   <span class="keywordtype">int</span>          SetDAC(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> channel, <span class="keywordtype">double</span> value);</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;   <span class="keywordtype">int</span>          ReadDAC(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> channel, <span class="keywordtype">double</span> *value);</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;   <span class="keywordtype">int</span>          GetRegulationDAC(<span class="keywordtype">double</span> *value);</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;   <span class="keywordtype">int</span>          StartDomino();</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;   <span class="keywordtype">int</span>          StartClearCycle();</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;   <span class="keywordtype">int</span>          FinishClearCycle();</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;   <span class="keywordtype">int</span>          Reinit();</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;   <span class="keywordtype">int</span>          Init();</div><div class="line"><a name="l00666"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a7b6ab7bffc13510b5707b1cdf06d7c01">  666</a></span>&#160;   <span class="keywordtype">void</span>         <a class="code" href="class_d_r_s_board.xhtml#a7b6ab7bffc13510b5707b1cdf06d7c01">SetDebug</a>(<span class="keywordtype">int</span> debug) { fDebug = debug; }</div><div class="line"><a name="l00667"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a476bcdf1ad85be42f67858d3dbb57361">  667</a></span>&#160;   <span class="keywordtype">int</span>          <a class="code" href="class_d_r_s_board.xhtml#a476bcdf1ad85be42f67858d3dbb57361">Debug</a>() { <span class="keywordflow">return</span> fDebug; }</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;   <span class="keywordtype">int</span>          SetDominoMode(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> mode);</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;   <span class="keywordtype">int</span>          SetDominoActive(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> mode);</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;   <span class="keywordtype">int</span>          SetReadoutMode(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> mode);</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;   <span class="keywordtype">int</span>          SoftTrigger(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;   <span class="keywordtype">int</span>          ReadFrequency(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> chipIndex, <span class="keywordtype">double</span> *f);</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;   <span class="keywordtype">int</span>          SetFrequency(<span class="keywordtype">double</span> freq, <span class="keywordtype">bool</span> wait);</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;   <span class="keywordtype">double</span>       VoltToFreq(<span class="keywordtype">double</span> volt);</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;   <span class="keywordtype">double</span>       FreqToVolt(<span class="keywordtype">double</span> freq);</div><div class="line"><a name="l00676"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a3d2ca1fcaaf96e270dd51df9cfd6d560">  676</a></span>&#160;   <span class="keywordtype">double</span>       <a class="code" href="class_d_r_s_board.xhtml#a3d2ca1fcaaf96e270dd51df9cfd6d560">GetNominalFrequency</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> fNominalFrequency; }</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;   <span class="keywordtype">double</span>       GetTrueFrequency();</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;   <span class="keywordtype">int</span>          RegulateFrequency(<span class="keywordtype">double</span> freq);</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;   <span class="keywordtype">int</span>          SetExternalClockFrequency(<span class="keywordtype">double</span> frequencyMHz);</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;   <span class="keywordtype">double</span>       GetExternalClockFrequency();</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;   <span class="keywordtype">int</span>          SetMultiBuffer(<span class="keywordtype">int</span> flag);</div><div class="line"><a name="l00682"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a444ffee223cd62b53d8609808b608b75">  682</a></span>&#160;   <span class="keywordtype">int</span>          <a class="code" href="class_d_r_s_board.xhtml#a444ffee223cd62b53d8609808b608b75">IsMultiBuffer</a>() { <span class="keywordflow">return</span> fMultiBuffer; }</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;   <span class="keywordtype">void</span>         ResetMultiBuffer(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;   <span class="keywordtype">int</span>          GetMultiBufferRP(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;   <span class="keywordtype">int</span>          SetMultiBufferRP(<span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> rp);</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;   <span class="keywordtype">int</span>          GetMultiBufferWP(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;   <span class="keywordtype">void</span>         IncrementMultiBufferRP(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;   <span class="keywordtype">void</span>         SetVoltageOffset(<span class="keywordtype">double</span> offset1, <span class="keywordtype">double</span> offset2);</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;   <span class="keywordtype">int</span>          SetInputRange(<span class="keywordtype">double</span> <a class="code" href="_d_r_s_8cpp.xhtml#ac89156dccaa40ed794e95612780a0e36">center</a>);</div><div class="line"><a name="l00690"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#acb8a86add3f5dc15f7663d9eb3046934">  690</a></span>&#160;   <span class="keywordtype">double</span>       <a class="code" href="class_d_r_s_board.xhtml#acb8a86add3f5dc15f7663d9eb3046934">GetInputRange</a>(<span class="keywordtype">void</span>) { <span class="keywordflow">return</span> fRange; }</div><div class="line"><a name="l00691"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#aefd6b290475799dd2a050e53ca8c0451">  691</a></span>&#160;   <span class="keywordtype">double</span>       <a class="code" href="class_d_r_s_board.xhtml#aefd6b290475799dd2a050e53ca8c0451">GetCalibratedInputRange</a>(<span class="keywordtype">void</span>) { <span class="keywordflow">return</span> fCellCalibratedRange; }</div><div class="line"><a name="l00692"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#af77733565be44e04e84eb0c1cf3b72c0">  692</a></span>&#160;   <span class="keywordtype">double</span>       <a class="code" href="class_d_r_s_board.xhtml#af77733565be44e04e84eb0c1cf3b72c0">GetCalibratedTemperature</a>(<span class="keywordtype">void</span>) { <span class="keywordflow">return</span> fCellCalibratedTemperature; }</div><div class="line"><a name="l00693"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a4acfbf5d02adf30cabc59b97f1453066">  693</a></span>&#160;   <span class="keywordtype">double</span>       <a class="code" href="class_d_r_s_board.xhtml#a4acfbf5d02adf30cabc59b97f1453066">GetCalibratedFrequency</a>(<span class="keywordtype">void</span>) { <span class="keywordflow">return</span> fTimingCalibratedFrequency; }</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;   <span class="keywordtype">int</span>          TransferWaves(<span class="keywordtype">int</span> numberOfChannels = <a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769af3c9ba00b7ed6f0b7291c9723d9fabb2">kNumberOfChipsMax</a> * <a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a512db8a7a36c74c34c3282af213bac24">kNumberOfChannelsMax</a>);</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;   <span class="keywordtype">int</span>          TransferWaves(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *p, <span class="keywordtype">int</span> numberOfChannels = <a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769af3c9ba00b7ed6f0b7291c9723d9fabb2">kNumberOfChipsMax</a> * kNumberOfChannelsMax);</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;   <span class="keywordtype">int</span>          TransferWaves(<span class="keywordtype">int</span> firstChannel, <span class="keywordtype">int</span> lastChannel);</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;   <span class="keywordtype">int</span>          TransferWaves(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *p, <span class="keywordtype">int</span> firstChannel, <span class="keywordtype">int</span> lastChannel);</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;   <span class="keywordtype">int</span>          DecodeWave(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *waveforms, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> chipIndex, <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> channel,</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;                           <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> *waveform);</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;   <span class="keywordtype">int</span>          DecodeWave(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> chipIndex, <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> channel, <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> *waveform);</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;   <span class="keywordtype">int</span>          GetWave(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *waveforms, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> chipIndex, <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> channel, <span class="keywordtype">short</span> *waveform,</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;                        <span class="keywordtype">bool</span> responseCalib = <span class="keyword">false</span>, <span class="keywordtype">int</span> triggerCell = -1, <span class="keywordtype">int</span> wsr = -1, <span class="keywordtype">bool</span> adjustToClock = <span class="keyword">false</span>,</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;                        <span class="keywordtype">float</span> threshold = 0, <span class="keywordtype">bool</span> offsetCalib = <span class="keyword">true</span>);</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;   <span class="keywordtype">int</span>          GetWave(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *waveforms, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> chipIndex, <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> channel, <span class="keywordtype">float</span> *waveform,</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;                        <span class="keywordtype">bool</span> responseCalib = <span class="keyword">false</span>, <span class="keywordtype">int</span> triggerCell = -1, <span class="keywordtype">int</span> wsr = -1, <span class="keywordtype">bool</span> adjustToClock = <span class="keyword">false</span>,</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;                        <span class="keywordtype">float</span> threshold = 0, <span class="keywordtype">bool</span> offsetCalib = <span class="keyword">true</span>);</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;   <span class="keywordtype">int</span>          GetWave(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> chipIndex, <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> channel, <span class="keywordtype">short</span> *waveform, <span class="keywordtype">bool</span> responseCalib = <span class="keyword">false</span>,</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;                        <span class="keywordtype">int</span> triggerCell = -1, <span class="keywordtype">int</span> wsr = -1, <span class="keywordtype">bool</span> adjustToClock = <span class="keyword">false</span>, <span class="keywordtype">float</span> threshold = 0, <span class="keywordtype">bool</span> offsetCalib = <span class="keyword">true</span>);</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;   <span class="keywordtype">int</span>          GetWave(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> chipIndex, <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> channel, <span class="keywordtype">float</span> *waveform, <span class="keywordtype">bool</span> responseCalib,</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;                        <span class="keywordtype">int</span> triggerCell = -1, <span class="keywordtype">int</span> wsr = -1, <span class="keywordtype">bool</span> adjustToClock = <span class="keyword">false</span>, <span class="keywordtype">float</span> threshold = 0, <span class="keywordtype">bool</span> offsetCalib = <span class="keyword">true</span>);</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;   <span class="keywordtype">int</span>          GetWave(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> chipIndex, <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> channel, <span class="keywordtype">float</span> *waveform);</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;   <span class="keywordtype">int</span>          GetRawWave(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> chipIndex, <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> channel, <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> *waveform, <span class="keywordtype">bool</span> adjustToClock = <span class="keyword">false</span>);</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;   <span class="keywordtype">int</span>          GetRawWave(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *waveforms,<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> chipIndex, <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> channel,</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;                           <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> *waveform, <span class="keywordtype">bool</span> adjustToClock = <span class="keyword">false</span>);</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;   <span class="keywordtype">bool</span>         IsTimingCalibrationValid(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00716"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#ab477480a16fc1958a17e41e2ec246a87">  716</a></span>&#160;   <span class="keywordtype">bool</span>         <a class="code" href="class_d_r_s_board.xhtml#ab477480a16fc1958a17e41e2ec246a87">IsVoltageCalibrationValid</a>(<span class="keywordtype">void</span>) { <span class="keywordflow">return</span> fVoltageCalibrationValid; }</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;   <span class="keywordtype">int</span>          GetTime(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> chipIndex, <span class="keywordtype">int</span> channelIndex, <span class="keywordtype">double</span> freq, <span class="keywordtype">int</span> tc, <span class="keywordtype">float</span> *time, <span class="keywordtype">bool</span> tcalibrated=<span class="keyword">true</span>, <span class="keywordtype">bool</span> rotated=<span class="keyword">true</span>);</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;   <span class="keywordtype">int</span>          GetTime(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> chipIndex, <span class="keywordtype">int</span> channelIndex, <span class="keywordtype">int</span> tc, <span class="keywordtype">float</span> *time, <span class="keywordtype">bool</span> tcalibrated=<span class="keyword">true</span>, <span class="keywordtype">bool</span> rotated=<span class="keyword">true</span>);</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;   <span class="keywordtype">int</span>          GetTimeCalibration(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> chipIndex, <span class="keywordtype">int</span> channelIndex, <span class="keywordtype">int</span> mode, <span class="keywordtype">float</span> *time, <span class="keywordtype">bool</span> force=<span class="keyword">false</span>);</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;   <span class="keywordtype">int</span>          GetTriggerCell(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> chipIndex);</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;   <span class="keywordtype">int</span>          GetStopCell(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> chipIndex);</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> GetStopWSR(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> chipIndex);</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;   <span class="keywordtype">int</span>          GetTriggerCell(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *waveforms,<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> chipIndex);</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;   <span class="keywordtype">void</span>         TestDAC(<span class="keywordtype">int</span> channel);</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;   <span class="keywordtype">void</span>         MeasureSpeed();</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;   <span class="keywordtype">void</span>         InteractSpeed();</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;   <span class="keywordtype">void</span>         MonitorFrequency();</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;   <span class="keywordtype">int</span>          TestShift(<span class="keywordtype">int</span> n);</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;   <span class="keywordtype">int</span>          EnableAcal(<span class="keywordtype">int</span> mode, <span class="keywordtype">double</span> voltage);</div><div class="line"><a name="l00730"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a6ff7923593598555d54616f7fcb27105">  730</a></span>&#160;   <span class="keywordtype">int</span>          <a class="code" href="class_d_r_s_board.xhtml#a6ff7923593598555d54616f7fcb27105">GetAcalMode</a>() { <span class="keywordflow">return</span> fAcalMode; }</div><div class="line"><a name="l00731"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a5640e39ecc7ea6482d612dd3edc0114e">  731</a></span>&#160;   <span class="keywordtype">double</span>       <a class="code" href="class_d_r_s_board.xhtml#a5640e39ecc7ea6482d612dd3edc0114e">GetAcalVolt</a>() { <span class="keywordflow">return</span> fAcalVolt; }</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;   <span class="keywordtype">int</span>          EnableTcal(<span class="keywordtype">int</span> freq, <span class="keywordtype">int</span> level=0, <span class="keywordtype">int</span> phase=0);</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;   <span class="keywordtype">int</span>          SelectClockSource(<span class="keywordtype">int</span> source);</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;   <span class="keywordtype">int</span>          SetRefclk(<span class="keywordtype">int</span> source);</div><div class="line"><a name="l00735"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a847ca955e64f34853643bf21a3ec44e7">  735</a></span>&#160;   <span class="keywordtype">int</span>          <a class="code" href="class_d_r_s_board.xhtml#a847ca955e64f34853643bf21a3ec44e7">GetRefclk</a>() { <span class="keywordflow">return</span> fRefclk; }</div><div class="line"><a name="l00736"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#ac7d6c8f9f48791d6211fae728820610f">  736</a></span>&#160;   <span class="keywordtype">int</span>          <a class="code" href="class_d_r_s_board.xhtml#ac7d6c8f9f48791d6211fae728820610f">GetTcalFreq</a>() { <span class="keywordflow">return</span> fTcalFreq; }</div><div class="line"><a name="l00737"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a30c091d337c8f3d431714420ed5d17c4">  737</a></span>&#160;   <span class="keywordtype">int</span>          <a class="code" href="class_d_r_s_board.xhtml#a30c091d337c8f3d431714420ed5d17c4">GetTcalLevel</a>() { <span class="keywordflow">return</span> fTcalLevel; }</div><div class="line"><a name="l00738"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a8140aaac867a27d42007a93313d39b22">  738</a></span>&#160;   <span class="keywordtype">int</span>          <a class="code" href="class_d_r_s_board.xhtml#a8140aaac867a27d42007a93313d39b22">GetTcalPhase</a>() { <span class="keywordflow">return</span> fTcalPhase; }</div><div class="line"><a name="l00739"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a407188e8b3c2a0906d187844b80e4d25">  739</a></span>&#160;   <span class="keywordtype">int</span>          <a class="code" href="class_d_r_s_board.xhtml#a407188e8b3c2a0906d187844b80e4d25">GetTcalSource</a>() { <span class="keywordflow">return</span> fTcalSource; }</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;   <span class="keywordtype">int</span>          SetCalibVoltage(<span class="keywordtype">double</span> value);</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;   <span class="keywordtype">int</span>          SetCalibTiming(<span class="keywordtype">int</span> t1, <span class="keywordtype">int</span> t2);</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;   <span class="keywordtype">double</span>       GetTemperature();</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;   <span class="keywordtype">int</span>          Is2048ModeCapable();</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;   <span class="keywordtype">int</span>          GetTriggerBus();</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> GetScaler(<span class="keywordtype">int</span> channel);</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;   <span class="keywordtype">int</span>          ReadEEPROM(<span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> page, <span class="keywordtype">void</span> *buffer, <span class="keywordtype">int</span> size);</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;   <span class="keywordtype">int</span>          WriteEEPROM(<span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> page, <span class="keywordtype">void</span> *buffer, <span class="keywordtype">int</span> size);</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;   <span class="keywordtype">bool</span>         HasCorrectFirmware();</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;   <span class="keywordtype">int</span>          ConfigureLMK(<span class="keywordtype">double</span> sampFreq, <span class="keywordtype">bool</span> freqChange, <span class="keywordtype">int</span> calFreq, <span class="keywordtype">int</span> calPhase);</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;   <span class="keywordtype">bool</span>         InitTimeCalibration(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> chipIndex);</div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;   <span class="keywordtype">void</span>         SetCalibrationDirectory(<span class="keyword">const</span> <span class="keywordtype">char</span> *calibrationDirectoryPath);</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;   <span class="keywordtype">void</span>         GetCalibrationDirectory(<span class="keywordtype">char</span> *calibrationDirectoryPath);</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;</div><div class="line"><a name="l00755"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a15a433dc560267e1c2d22ccfe9fbde3d">  755</a></span>&#160;   <a class="code" href="class_response_calibration.xhtml">ResponseCalibration</a> *<a class="code" href="class_d_r_s_board.xhtml#a15a433dc560267e1c2d22ccfe9fbde3d">GetResponseCalibration</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> fResponseCalibration; }</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;</div><div class="line"><a name="l00757"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#aa6c8e34401073f34e69d8fcdff007435">  757</a></span>&#160;   <span class="keywordtype">double</span>       <a class="code" href="class_d_r_s_board.xhtml#aa6c8e34401073f34e69d8fcdff007435">GetPrecision</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> fResponseCalibration ? fResponseCalibration-&gt;<a class="code" href="class_response_calibration.xhtml#aaa4863d4d3f16f40e343c76e1346b25c">GetPrecision</a>() : 0.1; }</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;   <span class="keywordtype">int</span>          CalibrateWaveform(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> chipIndex, <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> channel, <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> *adcWaveform,</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;                                  <span class="keywordtype">short</span> *waveform, <span class="keywordtype">bool</span> responseCalib, <span class="keywordtype">int</span> triggerCell, <span class="keywordtype">bool</span> adjustToClock,</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;                                  <span class="keywordtype">float</span> threshold, <span class="keywordtype">bool</span> offsetCalib);</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;   <span class="keyword">static</span> <span class="keywordtype">void</span>  LinearRegression(<span class="keywordtype">double</span> *x, <span class="keywordtype">double</span> *y, <span class="keywordtype">int</span> n, <span class="keywordtype">double</span> *a, <span class="keywordtype">double</span> *b);</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;   </div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;   <span class="keywordtype">void</span>         ReadSingleWaveform(<span class="keywordtype">int</span> nChips, <span class="keywordtype">int</span> nChan, </div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;                                  <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> wfu[<a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769af3c9ba00b7ed6f0b7291c9723d9fabb2">kNumberOfChipsMax</a>][kNumberOfChannelsMax][<a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a20b4a8f5cdfc2a3ce90c3f32af999fa0">kNumberOfBins</a>], <span class="keywordtype">bool</span> rotated);</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;   <span class="keywordtype">int</span>          AverageWaveforms(<a class="code" href="class_d_r_s_callback.xhtml">DRSCallback</a> *pcb, <span class="keywordtype">int</span> chipIndex, <span class="keywordtype">int</span> nChan, <span class="keywordtype">int</span> prog1, <span class="keywordtype">int</span> prog2, <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> *awf, <span class="keywordtype">int</span> n, <span class="keywordtype">bool</span> rotated);</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;   <span class="keywordtype">int</span>          RobustAverageWaveforms(<a class="code" href="class_d_r_s_callback.xhtml">DRSCallback</a> *pcb, <span class="keywordtype">int</span> chipIndex, <span class="keywordtype">int</span> nChan, <span class="keywordtype">int</span> prog1, <span class="keywordtype">int</span> prog2, <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> *awf, <span class="keywordtype">int</span> n, <span class="keywordtype">bool</span> rotated);</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;   <span class="keywordtype">int</span>          CalibrateVolt(<a class="code" href="class_d_r_s_callback.xhtml">DRSCallback</a> *pcb);</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;   <span class="keywordtype">int</span>          AnalyzePeriod(<a class="code" href="class_averager.xhtml">Averager</a> *ave, <span class="keywordtype">int</span> iIter, <span class="keywordtype">int</span> nIter, <span class="keywordtype">int</span> channel, <span class="keywordtype">float</span> wf[kNumberOfBins], <span class="keywordtype">int</span> tCell, <span class="keywordtype">double</span> cellDV[kNumberOfBins], <span class="keywordtype">double</span> cellDT[kNumberOfBins]);</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;   <span class="keywordtype">int</span>          AnalyzeSlope(<a class="code" href="class_averager.xhtml">Averager</a> *ave, <span class="keywordtype">int</span> iIter, <span class="keywordtype">int</span> nIter, <span class="keywordtype">int</span> channel, <span class="keywordtype">float</span> wf[kNumberOfBins], <span class="keywordtype">int</span> tCell, <span class="keywordtype">double</span> cellDV[kNumberOfBins], <span class="keywordtype">double</span> cellDT[kNumberOfBins]);</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;   <span class="keywordtype">int</span>          CalibrateTiming(<a class="code" href="class_d_r_s_callback.xhtml">DRSCallback</a> *pcb);</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;   <span class="keyword">static</span> <span class="keywordtype">void</span>  RemoveSymmetricSpikes(<span class="keywordtype">short</span> **wf, <span class="keywordtype">int</span> nwf,</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;                                      <span class="keywordtype">short</span> diffThreshold, <span class="keywordtype">int</span> spikeWidth,</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;                                      <span class="keywordtype">short</span> maxPeakToPeak, <span class="keywordtype">short</span> spikeVoltage,</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;                                      <span class="keywordtype">int</span> nTimeRegionThreshold);</div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;   <span class="comment">// Protected Methods</span></div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;   <span class="keywordtype">void</span>         ConstructBoard();</div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;   <span class="keywordtype">void</span>         ReadSerialNumber();</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;   <span class="keywordtype">void</span>         ReadCalibration(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;   <a class="code" href="class_d_r_s_board_1_1_time_data.xhtml">TimeData</a>    *GetTimeCalibration(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> chipIndex, <span class="keywordtype">bool</span> reinit = <span class="keyword">false</span>);</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;</div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;   <span class="keywordtype">int</span>          GetStretchedTime(<span class="keywordtype">float</span> *time, <span class="keywordtype">float</span> *measurement, <span class="keywordtype">int</span> numberOfMeasurements, <span class="keywordtype">float</span> period);</div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;};</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;</div><div class="line"><a name="l00787"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#ae13bc9dbe70bd4299b5049cf3c6a56a1">  787</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="class_d_r_s_board.xhtml#ae13bc9dbe70bd4299b5049cf3c6a56a1">DRSBoard::GetNumberOfReadoutChannels</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;   <span class="keywordflow">return</span> (fDRSType == 4 &amp;&amp; fReadoutChannelConfig == 4) ? 5 : fNumberOfChannels;</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;}</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;</div><div class="line"><a name="l00792"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a4b3137730f93e6faf716db3bc48d3e1f">  792</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="class_d_r_s_board.xhtml#a4b3137730f93e6faf716db3bc48d3e1f">DRSBoard::GetWaveformBufferSize</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;   <span class="keywordtype">int</span> nbin=0;</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;   <span class="keywordflow">if</span> (fDRSType &lt; 4) {</div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;      nbin = fNumberOfChips * fNumberOfChannels * <a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a20b4a8f5cdfc2a3ce90c3f32af999fa0">kNumberOfBins</a>;</div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;   } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;      <span class="keywordflow">if</span> (fBoardType == 6) {</div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;         <span class="keywordflow">if</span> (fDecimation) {</div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;            nbin = fNumberOfChips * (4 * <a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a20b4a8f5cdfc2a3ce90c3f32af999fa0">kNumberOfBins</a> + <a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a20b4a8f5cdfc2a3ce90c3f32af999fa0">kNumberOfBins</a> / 2);</div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;         } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;            nbin = fNumberOfChips * 5 * <a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a20b4a8f5cdfc2a3ce90c3f32af999fa0">kNumberOfBins</a>;</div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;         }</div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;      } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (fBoardType == 7 || fBoardType == 8 || fBoardType == 9)</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;         nbin = fNumberOfChips * fNumberOfChannels * <a class="code" href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a20b4a8f5cdfc2a3ce90c3f32af999fa0">kNumberOfBins</a>;</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;   }</div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;   <span class="keywordflow">return</span> nbin * <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(<span class="keyword">sizeof</span>(<span class="keywordtype">short</span> int));</div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;}</div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;</div><div class="line"><a name="l00810"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a339839836e4a46bd02b613e30fbfd88b">  810</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="class_d_r_s_board.xhtml#a339839836e4a46bd02b613e30fbfd88b">DRSBoard::GetNumberOfInputs</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;   <span class="comment">// return number of input channels excluding clock and trigger channels.</span></div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;   <span class="keywordflow">if</span> (fDRSType &lt; 4) {</div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;      <span class="keywordflow">return</span> fNumberOfChannels - 2;</div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;   } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;      <span class="keywordflow">return</span> fNumberOfChannels / 2;</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;   }</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;}</div><div class="line"><a name="l00819"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#ad898cad486157c9d9bcecb268300022b">  819</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="class_d_r_s_board.xhtml#ad898cad486157c9d9bcecb268300022b">DRSBoard::GetNumberOfCalibInputs</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;   <span class="keywordflow">return</span> (fDRSType &lt; 4) ? 2 : 1;</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;}</div><div class="line"><a name="l00823"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#acda82cdf8e8afdd388a2da239ea2e9ef">  823</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="class_d_r_s_board.xhtml#acda82cdf8e8afdd388a2da239ea2e9ef">DRSBoard::GetClockChannel</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;   <span class="keywordflow">return</span> fDRSType &lt; 4 ? 9 : 8;</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;}</div><div class="line"><a name="l00827"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#aa43ece39c3563eba4e5b39329f6ce61b">  827</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="class_d_r_s_board.xhtml#aa43ece39c3563eba4e5b39329f6ce61b">DRSBoard::GetTriggerChannel</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;   <span class="keywordflow">return</span> fDRSType &lt; 4 ? 8 : -1;</div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;}</div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;</div><div class="line"><a name="l00832"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a1fbc7e5a26995c1aec862942f99c5c00">  832</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="class_d_r_s_board.xhtml#a1fbc7e5a26995c1aec862942f99c5c00">DRSBoard::Channel2Input</a>(<span class="keywordtype">int</span> channel)<span class="keyword"> const</span></div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;   <span class="keywordflow">return</span> (fDRSType &lt; 4) ? channel : channel / 2;</div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;}</div><div class="line"><a name="l00836"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a8fb5174ed9cf5c63381ef6a6c80e9167">  836</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="class_d_r_s_board.xhtml#a8fb5174ed9cf5c63381ef6a6c80e9167">DRSBoard::Channel2ReadoutChannel</a>(<span class="keywordtype">int</span> channel)<span class="keyword"> const</span></div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;   <span class="keywordflow">if</span> (fDRSType &lt; 4) {</div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;      <span class="keywordflow">return</span> channel;</div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;   } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;      <span class="keywordflow">if</span> (fReadoutChannelConfig == 4) {</div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;         <span class="keywordflow">return</span> channel / 2;</div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;      } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;         <span class="keywordflow">return</span> channel;</div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;      }</div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;   }</div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;}</div><div class="line"><a name="l00848"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a1ccc3a4a4378e6bee4ae3f8ee8e38563">  848</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="class_d_r_s_board.xhtml#a1ccc3a4a4378e6bee4ae3f8ee8e38563">DRSBoard::Input2Channel</a>(<span class="keywordtype">int</span> input, <span class="keywordtype">int</span> ind)<span class="keyword"> const</span></div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;   <span class="keywordflow">if</span> (fChannelCascading == 1) {</div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;      <span class="keywordflow">return</span> (fDRSType &lt; 4) ? input : (input * 2 + ind);</div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;   } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;      <span class="keywordflow">if</span> (input == 4) { <span class="comment">// clock</span></div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;         <span class="keywordflow">return</span> 8;</div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;      } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;         <span class="keywordflow">return</span> input;</div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;      }</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;   }</div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;}</div><div class="line"><a name="l00860"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a5ad2612e2361d2c909a810c2c4127e9a">  860</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="class_d_r_s_board.xhtml#a5ad2612e2361d2c909a810c2c4127e9a">DRSBoard::Input2ReadoutChannel</a>(<span class="keywordtype">int</span> input, <span class="keywordtype">int</span> ind)<span class="keyword"> const</span></div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;   <span class="keywordflow">if</span> (fDRSType &lt; 4) {</div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;      <span class="keywordflow">return</span> input;</div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;   } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;      <span class="keywordflow">if</span> (fReadoutChannelConfig == 4) {</div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;         <span class="keywordflow">return</span> input;</div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;      } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;         <span class="keywordflow">return</span> (input * 2 + ind);</div><div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;      }</div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;   }</div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;}</div><div class="line"><a name="l00872"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a84fd012876e3c1434ae964f9e4673795">  872</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="class_d_r_s_board.xhtml#a84fd012876e3c1434ae964f9e4673795">DRSBoard::ReadoutChannel2Channel</a>(<span class="keywordtype">int</span> readout)<span class="keyword"> const</span></div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;   <span class="keywordflow">if</span> (fDRSType &lt; 4) {</div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;      <span class="keywordflow">return</span> readout;</div><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;   } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;      <span class="keywordflow">if</span> (fReadoutChannelConfig == 4) {</div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;         <span class="keywordflow">return</span> readout * 2;</div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;      } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;         <span class="keywordflow">return</span> readout;</div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;      }</div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;   }</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;}</div><div class="line"><a name="l00884"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#ab86c27feb85fe21e91e611c91bf2a552">  884</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="class_d_r_s_board.xhtml#ab86c27feb85fe21e91e611c91bf2a552">DRSBoard::ReadoutChannel2Input</a>(<span class="keywordtype">int</span> readout)<span class="keyword"> const</span></div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;   <span class="keywordflow">if</span> (fDRSType &lt; 4) {</div><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;      <span class="keywordflow">return</span> readout;</div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;   } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;      <span class="keywordflow">if</span> (fReadoutChannelConfig == 4) {</div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;         <span class="keywordflow">return</span> readout;</div><div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;      } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;         <span class="keywordflow">return</span> readout / 2;</div><div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;      }</div><div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;   }</div><div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;}</div><div class="line"><a name="l00896"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#a0d1d86f0101babca2774cdf43f8334b5">  896</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="class_d_r_s_board.xhtml#a0d1d86f0101babca2774cdf43f8334b5">DRSBoard::IsCalibChannel</a>(<span class="keywordtype">int</span> ch)<span class="keyword"> const</span></div><div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;   <span class="comment">// return if it is clock or trigger channel</span></div><div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;   <span class="keywordflow">if</span> (fDRSType &lt; 4)</div><div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;      <span class="keywordflow">return</span> ch == GetClockChannel() || ch == GetTriggerChannel();</div><div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;   <span class="keywordflow">else</span></div><div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;      <span class="keywordflow">return</span> ch == GetClockChannel();</div><div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;}</div><div class="line"><a name="l00904"></a><span class="lineno"><a class="line" href="class_d_r_s_board.xhtml#af43aa2c5158fab98185cea722e09cd9c">  904</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="class_d_r_s_board.xhtml#af43aa2c5158fab98185cea722e09cd9c">DRSBoard::IsCalibInput</a>(<span class="keywordtype">int</span> input)<span class="keyword"> const</span></div><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;   <span class="comment">// return if it is clock or trigger channel</span></div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;   <span class="keywordtype">int</span> ch = Input2Channel(input);</div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;   <span class="keywordflow">if</span> (fDRSType &lt; 4)</div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;      <span class="keywordflow">return</span> ch == GetClockChannel() || ch == GetTriggerChannel();</div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;   <span class="keywordflow">else</span></div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;      <span class="keywordflow">return</span> ch == GetClockChannel();</div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;}</div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;</div><div class="line"><a name="l00914"></a><span class="lineno"><a class="line" href="class_d_r_s.xhtml">  914</a></span>&#160;<span class="keyword">class </span><a class="code" href="class_d_r_s.xhtml">DRS</a> {</div><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;   <span class="comment">// constants</span></div><div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;   <span class="keyword">enum</span> {</div><div class="line"><a name="l00918"></a><span class="lineno"><a class="line" href="class_d_r_s.xhtml#ae6f18f5c178afdf0f5bbd3bafb7b79e5a3a3cd0cecfbb9c209e5f813a7152eccb">  918</a></span>&#160;      kMaxNumberOfBoards = 40</div><div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;   };</div><div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;</div><div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00922"></a><span class="lineno"><a class="line" href="class_d_r_s.xhtml#a30228c2d37ecf466011d58ca6cb8ffe1">  922</a></span>&#160;   <a class="code" href="class_d_r_s_board.xhtml">DRSBoard</a>       *fBoard[kMaxNumberOfBoards];</div><div class="line"><a name="l00923"></a><span class="lineno"><a class="line" href="class_d_r_s.xhtml#a32bafd944e2942dae26bdf29b5318d22">  923</a></span>&#160;   <span class="keywordtype">int</span>             <a class="code" href="class_d_r_s.xhtml#a32bafd944e2942dae26bdf29b5318d22">fNumberOfBoards</a>;</div><div class="line"><a name="l00924"></a><span class="lineno"><a class="line" href="class_d_r_s.xhtml#a4cd6049046b71ca3de90d8e0af6849fb">  924</a></span>&#160;   <span class="keywordtype">char</span>            fError[256];</div><div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;<span class="preprocessor">#ifdef HAVE_VME</span></div><div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;   MVME_INTERFACE *fVmeInterface;</div><div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;</div><div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;   <a class="code" href="class_d_r_s.xhtml">DRS</a>(<span class="keyword">const</span> <a class="code" href="class_d_r_s.xhtml">DRS</a> &amp;c);              <span class="comment">// not implemented</span></div><div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;   <a class="code" href="class_d_r_s.xhtml">DRS</a> &amp;operator=(<span class="keyword">const</span> <a class="code" href="class_d_r_s.xhtml">DRS</a> &amp;rhs); <span class="comment">// not implemented</span></div><div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;</div><div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;   <span class="comment">// Public Methods</span></div><div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;   <a class="code" href="class_d_r_s.xhtml">DRS</a>();</div><div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;   ~<a class="code" href="class_d_r_s.xhtml">DRS</a>();</div><div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;</div><div class="line"><a name="l00938"></a><span class="lineno"><a class="line" href="class_d_r_s.xhtml#a9b31c73ee163ae51d2e490f6dfdf839d">  938</a></span>&#160;   <a class="code" href="class_d_r_s_board.xhtml">DRSBoard</a>        *<a class="code" href="class_d_r_s.xhtml#a9b31c73ee163ae51d2e490f6dfdf839d">GetBoard</a>(<span class="keywordtype">int</span> i) { <span class="keywordflow">return</span> fBoard[i]; }</div><div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;   <span class="keywordtype">void</span>             SetBoard(<span class="keywordtype">int</span> i, <a class="code" href="class_d_r_s_board.xhtml">DRSBoard</a> *b);</div><div class="line"><a name="l00940"></a><span class="lineno"><a class="line" href="class_d_r_s.xhtml#a80dfa099b95e39e935e3f4472236676c">  940</a></span>&#160;   <a class="code" href="class_d_r_s_board.xhtml">DRSBoard</a>       **<a class="code" href="class_d_r_s.xhtml#a80dfa099b95e39e935e3f4472236676c">GetBoards</a>() { <span class="keywordflow">return</span> fBoard; }</div><div class="line"><a name="l00941"></a><span class="lineno"><a class="line" href="class_d_r_s.xhtml#ae3609194596df0942d1e67e8c518d72e">  941</a></span>&#160;   <span class="keywordtype">int</span>              <a class="code" href="class_d_r_s.xhtml#ae3609194596df0942d1e67e8c518d72e">GetNumberOfBoards</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> fNumberOfBoards; }</div><div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;   <span class="keywordtype">bool</span>             GetError(<span class="keywordtype">char</span> *str, <span class="keywordtype">int</span> size);</div><div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;   <span class="keywordtype">void</span>             SortBoards();</div><div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;</div><div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;<span class="preprocessor">#ifdef HAVE_VME</span></div><div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;   MVME_INTERFACE *GetVMEInterface()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> fVmeInterface; };</div><div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;};</div><div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;</div><div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;<span class="preprocessor">#endif                          // DRS_H</span></div><div class="ttc" id="class_d_r_s_board_xhtml_add51eb86b8c38ebdc36d8110dd0a7f0a"><div class="ttname"><a href="class_d_r_s_board.xhtml#add51eb86b8c38ebdc36d8110dd0a7f0a">DRSBoard::fBoardType</a></div><div class="ttdeci">int fBoardType</div><div class="ttdef"><b>Definition:</b> DRS.h:473</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a0d1d86f0101babca2774cdf43f8334b5"><div class="ttname"><a href="class_d_r_s_board.xhtml#a0d1d86f0101babca2774cdf43f8334b5">DRSBoard::IsCalibChannel</a></div><div class="ttdeci">bool IsCalibChannel(int ch) const </div><div class="ttdef"><b>Definition:</b> DRS.h:896</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a47a2c4034d6186fe92b3267775e8b8bb"><div class="ttname"><a href="class_d_r_s_board.xhtml#a47a2c4034d6186fe92b3267775e8b8bb">DRSBoard::fDRSType</a></div><div class="ttdeci">int fDRSType</div><div class="ttdef"><b>Definition:</b> DRS.h:472</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a1e50e3a633433423a00c454ff5fa15c3"><div class="ttname"><a href="class_d_r_s_board.xhtml#a1e50e3a633433423a00c454ff5fa15c3">DRSBoard::fDAC_TLEVEL2</a></div><div class="ttdeci">unsigned int fDAC_TLEVEL2</div><div class="ttdef"><b>Definition:</b> DRS.h:466</div></div>
<div class="ttc" id="_d_r_s_8h_xhtml_ab7dcc7278f8e703da53de2ee769ce2f6"><div class="ttname"><a href="_d_r_s_8h.xhtml#ab7dcc7278f8e703da53de2ee769ce2f6">DRSErrorCodes</a></div><div class="ttdeci">DRSErrorCodes</div><div class="ttdef"><b>Definition:</b> DRS.h:185</div></div>
<div class="ttc" id="class_response_calibration_1_1_calibration_data_xhtml_af9e46b53470a0ebc2f9503732908256e"><div class="ttname"><a href="class_response_calibration_1_1_calibration_data.xhtml#af9e46b53470a0ebc2f9503732908256e">ResponseCalibration::CalibrationData::fHasOffsetCalibration</a></div><div class="ttdeci">int fHasOffsetCalibration</div><div class="ttdef"><b>Definition:</b> DRS.h:260</div></div>
<div class="ttc" id="class_d_r_s_board_1_1_time_data_1_1_frequency_data_xhtml_a9f10745341b26c7817c5fe99ec19e567"><div class="ttname"><a href="class_d_r_s_board_1_1_time_data_1_1_frequency_data.xhtml#a9f10745341b26c7817c5fe99ec19e567">DRSBoard::TimeData::FrequencyData::fFrequency</a></div><div class="ttdeci">int fFrequency</div><div class="ttdef"><b>Definition:</b> DRS.h:408</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_afdf012f8afe38c55a1ff1235175fe9c8"><div class="ttname"><a href="class_d_r_s_board.xhtml#afdf012f8afe38c55a1ff1235175fe9c8">DRSBoard::fbkTcalLevel</a></div><div class="ttdeci">int fbkTcalLevel</div><div class="ttdef"><b>Definition:</b> DRS.h:532</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a802366ba58fa7d263d8781b6e5a00b20"><div class="ttname"><a href="class_d_r_s_board.xhtml#a802366ba58fa7d263d8781b6e5a00b20">DRSBoard::fDAC_CLKOFS</a></div><div class="ttdeci">unsigned int fDAC_CLKOFS</div><div class="ttdef"><b>Definition:</b> DRS.h:449</div></div>
<div class="ttc" id="class_d_r_s_xhtml_a32bafd944e2942dae26bdf29b5318d22"><div class="ttname"><a href="class_d_r_s.xhtml#a32bafd944e2942dae26bdf29b5318d22">DRS::fNumberOfBoards</a></div><div class="ttdeci">int fNumberOfBoards</div><div class="ttdef"><b>Definition:</b> DRS.h:923</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_aa37fb0aa69965eabcb258f620a51c3e4"><div class="ttname"><a href="class_d_r_s_board.xhtml#aa37fb0aa69965eabcb258f620a51c3e4">DRSBoard::GetReadoutChannelConfig</a></div><div class="ttdeci">int GetReadoutChannelConfig()</div><div class="ttdef"><b>Definition:</b> DRS.h:633</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_af01ab409e585e975d147179b0c280a7d"><div class="ttname"><a href="class_d_r_s_board.xhtml#af01ab409e585e975d147179b0c280a7d">DRSBoard::fCommonMode</a></div><div class="ttdeci">double fCommonMode</div><div class="ttdef"><b>Definition:</b> DRS.h:524</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a82422e8f9b8c1207f754fe4636050404"><div class="ttname"><a href="class_d_r_s_board.xhtml#a82422e8f9b8c1207f754fe4636050404">DRSBoard::fNumberOfChips</a></div><div class="ttdeci">int fNumberOfChips</div><div class="ttdef"><b>Definition:</b> DRS.h:474</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a1ccc3a4a4378e6bee4ae3f8ee8e38563"><div class="ttname"><a href="class_d_r_s_board.xhtml#a1ccc3a4a4378e6bee4ae3f8ee8e38563">DRSBoard::Input2Channel</a></div><div class="ttdeci">int Input2Channel(int input, int ind=0) const </div><div class="ttdef"><b>Definition:</b> DRS.h:848</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_ab0e98f50f17ca613d1bc3843d8afc925"><div class="ttname"><a href="class_d_r_s_board.xhtml#ab0e98f50f17ca613d1bc3843d8afc925">DRSBoard::fDAC_ROFS_2</a></div><div class="ttdeci">unsigned int fDAC_ROFS_2</div><div class="ttdef"><b>Definition:</b> DRS.h:452</div></div>
<div class="ttc" id="averager_8h_xhtml"><div class="ttname"><a href="averager_8h.xhtml">averager.h</a></div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_aa28fc4718ce9b8c1148978005b5901fe"><div class="ttname"><a href="class_d_r_s_board.xhtml#aa28fc4718ce9b8c1148978005b5901fe">DRSBoard::fMaxChips</a></div><div class="ttdeci">int fMaxChips</div><div class="ttdef"><b>Definition:</b> DRS.h:540</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_afc111bc700c0fcc926f64cd03008d6e8"><div class="ttname"><a href="class_d_r_s_board.xhtml#afc111bc700c0fcc926f64cd03008d6e8">DRSBoard::fWSRLoop</a></div><div class="ttdeci">int fWSRLoop</div><div class="ttdef"><b>Definition:</b> DRS.h:506</div></div>
<div class="ttc" id="class_response_calibration_xhtml_a85c1f0173d0cef56aded6d3d464ae5c0"><div class="ttname"><a href="class_response_calibration.xhtml#a85c1f0173d0cef56aded6d3d464ae5c0">ResponseCalibration::fYYSave</a></div><div class="ttdeci">double * fYYSave</div><div class="ttdef"><b>Definition:</b> DRS.h:330</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a00ff050c1f5acebefd7b931e35129d48"><div class="ttname"><a href="class_d_r_s_board.xhtml#a00ff050c1f5acebefd7b931e35129d48">DRSBoard::fTcalLevel</a></div><div class="ttdeci">int fTcalLevel</div><div class="ttdef"><b>Definition:</b> DRS.h:531</div></div>
<div class="ttc" id="class_d_r_s_xhtml_a80dfa099b95e39e935e3f4472236676c"><div class="ttname"><a href="class_d_r_s.xhtml#a80dfa099b95e39e935e3f4472236676c">DRS::GetBoards</a></div><div class="ttdeci">DRSBoard ** GetBoards()</div><div class="ttdef"><b>Definition:</b> DRS.h:940</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_af77733565be44e04e84eb0c1cf3b72c0"><div class="ttname"><a href="class_d_r_s_board.xhtml#af77733565be44e04e84eb0c1cf3b72c0">DRSBoard::GetCalibratedTemperature</a></div><div class="ttdeci">double GetCalibratedTemperature(void)</div><div class="ttdef"><b>Definition:</b> DRS.h:692</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a7fbe976ae5b04fa7e8ff1edcc394d11b"><div class="ttname"><a href="class_d_r_s_board.xhtml#a7fbe976ae5b04fa7e8ff1edcc394d11b">DRSBoard::fTrueFrequency</a></div><div class="ttdeci">double fTrueFrequency</div><div class="ttdef"><b>Definition:</b> DRS.h:496</div></div>
<div class="ttc" id="_d_r_s_8h_xhtml_a3b714eaad5c2b209326b5055e0cfb769a88502ce12cd19c05490e1dbe882860f2"><div class="ttname"><a href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a88502ce12cd19c05490e1dbe882860f2">kBSplineXMinOffset</a></div><div class="ttdef"><b>Definition:</b> DRS.h:181</div></div>
<div class="ttc" id="_d_r_s_8h_xhtml_a3b714eaad5c2b209326b5055e0cfb769a2af6283887f7d7cc5416d296a7b8ea38"><div class="ttname"><a href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a2af6283887f7d7cc5416d296a7b8ea38">kBSplineOrder</a></div><div class="ttdef"><b>Definition:</b> DRS.h:177</div></div>
<div class="ttc" id="_d_r_s_8h_xhtml_a3b714eaad5c2b209326b5055e0cfb769a130e6d9cc9437042a1323958eddc98e1"><div class="ttname"><a href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a130e6d9cc9437042a1323958eddc98e1">kMaxNumberOfClockCycles</a></div><div class="ttdef"><b>Definition:</b> DRS.h:182</div></div>
<div class="ttc" id="class_response_calibration_xhtml_a562fb7b3295c0888f2a2010792197859"><div class="ttname"><a href="class_response_calibration.xhtml#a562fb7b3295c0888f2a2010792197859">ResponseCalibration::fSamples</a></div><div class="ttdeci">unsigned short * fSamples</div><div class="ttdef"><b>Definition:</b> DRS.h:317</div></div>
<div class="ttc" id="_d_r_s_8h_xhtml_a3b714eaad5c2b209326b5055e0cfb769a512db8a7a36c74c34c3282af213bac24"><div class="ttname"><a href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a512db8a7a36c74c34c3282af213bac24">kNumberOfChannelsMax</a></div><div class="ttdef"><b>Definition:</b> DRS.h:171</div></div>
<div class="ttc" id="class_response_calibration_xhtml_a5358830a35abe0d2991a32e647589418"><div class="ttname"><a href="class_response_calibration.xhtml#a5358830a35abe0d2991a32e647589418">ResponseCalibration::fCalibFile</a></div><div class="ttdeci">FILE * fCalibFile</div><div class="ttdef"><b>Definition:</b> DRS.h:303</div></div>
<div class="ttc" id="_d_r_s_8h_xhtml_a3b714eaad5c2b209326b5055e0cfb769a958e04d79e2efa0f9c86814aaa2a4967"><div class="ttname"><a href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a958e04d79e2efa0f9c86814aaa2a4967">kPreCaliculatedBSplineGroups</a></div><div class="ttdef"><b>Definition:</b> DRS.h:179</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a96ac73605d19fcd39cf544b22a675974"><div class="ttname"><a href="class_d_r_s_board.xhtml#a96ac73605d19fcd39cf544b22a675974">DRSBoard::fRequiredFirmwareVersion</a></div><div class="ttdeci">int fRequiredFirmwareVersion</div><div class="ttdef"><b>Definition:</b> DRS.h:476</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_af09e1f404f8a773d747d67971ef86465"><div class="ttname"><a href="class_d_r_s_board.xhtml#af09e1f404f8a773d747d67971ef86465">DRSBoard::GetChannelDepth</a></div><div class="ttdeci">int GetChannelDepth() const </div><div class="ttdef"><b>Definition:</b> DRS.h:598</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_ab08bc4be4645c5ea682e13cccb293748"><div class="ttname"><a href="class_d_r_s_board.xhtml#ab08bc4be4645c5ea682e13cccb293748">DRSBoard::GetDecimation</a></div><div class="ttdeci">int GetDecimation()</div><div class="ttdef"><b>Definition:</b> DRS.h:652</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a34be9c35e267d512aa6bdb70429ac723"><div class="ttname"><a href="class_d_r_s_board.xhtml#a34be9c35e267d512aa6bdb70429ac723">DRSBoard::fDAC_CALP</a></div><div class="ttdeci">unsigned int fDAC_CALP</div><div class="ttdef"><b>Definition:</b> DRS.h:459</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a5640e39ecc7ea6482d612dd3edc0114e"><div class="ttname"><a href="class_d_r_s_board.xhtml#a5640e39ecc7ea6482d612dd3edc0114e">DRSBoard::GetAcalVolt</a></div><div class="ttdeci">double GetAcalVolt()</div><div class="ttdef"><b>Definition:</b> DRS.h:731</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_aefd6b290475799dd2a050e53ca8c0451"><div class="ttname"><a href="class_d_r_s_board.xhtml#aefd6b290475799dd2a050e53ca8c0451">DRSBoard::GetCalibratedInputRange</a></div><div class="ttdeci">double GetCalibratedInputRange(void)</div><div class="ttdef"><b>Definition:</b> DRS.h:691</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a746f54d7f3680ef55917122dba942e18"><div class="ttname"><a href="class_d_r_s_board.xhtml#a746f54d7f3680ef55917122dba942e18">DRSBoard::fDAC_CMOFS</a></div><div class="ttdeci">unsigned int fDAC_CMOFS</div><div class="ttdef"><b>Definition:</b> DRS.h:457</div></div>
<div class="ttc" id="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel_xhtml_a73f3dba3d32a9d2be52249fb6e12d0bc"><div class="ttname"><a href="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel.xhtml#a73f3dba3d32a9d2be52249fb6e12d0bc">ResponseCalibration::CalibrationData::CalibrationDataChannel::fTempData</a></div><div class="ttdeci">float * fTempData</div><div class="ttdef"><b>Definition:</b> DRS.h:224</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a6808aff2dca2efac07c6e1ab53dbfa4a"><div class="ttname"><a href="class_d_r_s_board.xhtml#a6808aff2dca2efac07c6e1ab53dbfa4a">DRSBoard::fDecimation</a></div><div class="ttdeci">int fDecimation</div><div class="ttdef"><b>Definition:</b> DRS.h:518</div></div>
<div class="ttc" id="class_response_calibration_1_1_calibration_data_xhtml"><div class="ttname"><a href="class_response_calibration_1_1_calibration_data.xhtml">ResponseCalibration::CalibrationData</a></div><div class="ttdef"><b>Definition:</b> DRS.h:210</div></div>
<div class="ttc" id="class_response_calibration_1_1_calibration_data_xhtml_a934b0deeda5e4cbb3b2e04e66808d37d"><div class="ttname"><a href="class_response_calibration_1_1_calibration_data.xhtml#a934b0deeda5e4cbb3b2e04e66808d37d">ResponseCalibration::CalibrationData::fRead</a></div><div class="ttdeci">bool fRead</div><div class="ttdef"><b>Definition:</b> DRS.h:257</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a8fb5174ed9cf5c63381ef6a6c80e9167"><div class="ttname"><a href="class_d_r_s_board.xhtml#a8fb5174ed9cf5c63381ef6a6c80e9167">DRSBoard::Channel2ReadoutChannel</a></div><div class="ttdeci">int Channel2ReadoutChannel(int channel) const </div><div class="ttdef"><b>Definition:</b> DRS.h:836</div></div>
<div class="ttc" id="class_averager_xhtml"><div class="ttname"><a href="class_averager.xhtml">Averager</a></div><div class="ttdef"><b>Definition:</b> averager.h:12</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a10814673b1930dba9725a9d6e77d0b3b"><div class="ttname"><a href="class_d_r_s_board.xhtml#a10814673b1930dba9725a9d6e77d0b3b">DRSBoard::fVoltageCalibrationValid</a></div><div class="ttdeci">bool fVoltageCalibrationValid</div><div class="ttdef"><b>Definition:</b> DRS.h:547</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a52e36526a2f5410f0f36eaa37d58f003"><div class="ttname"><a href="class_d_r_s_board.xhtml#a52e36526a2f5410f0f36eaa37d58f003">DRSBoard::fNMultiBuffer</a></div><div class="ttdeci">int fNMultiBuffer</div><div class="ttdef"><b>Definition:</b> DRS.h:509</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a68268c6afaa8621541c4991665587b41"><div class="ttname"><a href="class_d_r_s_board.xhtml#a68268c6afaa8621541c4991665587b41">DRSBoard::GetNumberOfChips</a></div><div class="ttdeci">int GetNumberOfChips() const </div><div class="ttdef"><b>Definition:</b> DRS.h:593</div></div>
<div class="ttc" id="_d_r_s_8h_xhtml_a3b714eaad5c2b209326b5055e0cfb769af3c9ba00b7ed6f0b7291c9723d9fabb2"><div class="ttname"><a href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769af3c9ba00b7ed6f0b7291c9723d9fabb2">kNumberOfChipsMax</a></div><div class="ttdef"><b>Definition:</b> DRS.h:175</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_aa66d043d583bef438953d1cf315e3464"><div class="ttname"><a href="class_d_r_s_board.xhtml#aa66d043d583bef438953d1cf315e3464">DRSBoard::fRange</a></div><div class="ttdeci">double fRange</div><div class="ttdef"><b>Definition:</b> DRS.h:523</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_ae12fab15aef9bde10395f83a45e6d6d0"><div class="ttname"><a href="class_d_r_s_board.xhtml#ae12fab15aef9bde10395f83a45e6d6d0">DRSBoard::fTcalSource</a></div><div class="ttdeci">int fTcalSource</div><div class="ttdef"><b>Definition:</b> DRS.h:534</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_adc13519956f2a389cad6f0745a516855"><div class="ttname"><a href="class_d_r_s_board.xhtml#adc13519956f2a389cad6f0745a516855">DRSBoard::fCellCalibratedTemperature</a></div><div class="ttdeci">double fCellCalibratedTemperature</div><div class="ttdef"><b>Definition:</b> DRS.h:549</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a407188e8b3c2a0906d187844b80e4d25"><div class="ttname"><a href="class_d_r_s_board.xhtml#a407188e8b3c2a0906d187844b80e4d25">DRSBoard::GetTcalSource</a></div><div class="ttdeci">int GetTcalSource()</div><div class="ttdef"><b>Definition:</b> DRS.h:739</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_ad898cad486157c9d9bcecb268300022b"><div class="ttname"><a href="class_d_r_s_board.xhtml#ad898cad486157c9d9bcecb268300022b">DRSBoard::GetNumberOfCalibInputs</a></div><div class="ttdeci">int GetNumberOfCalibInputs() const </div><div class="ttdef"><b>Definition:</b> DRS.h:819</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_affb2f4e9114ad70ae039d66b029325f0"><div class="ttname"><a href="class_d_r_s_board.xhtml#affb2f4e9114ad70ae039d66b029325f0">DRSBoard::fReadPointer</a></div><div class="ttdeci">unsigned short fReadPointer</div><div class="ttdef"><b>Definition:</b> DRS.h:508</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a9acef812d437447d6179d7defe51b455"><div class="ttname"><a href="class_d_r_s_board.xhtml#a9acef812d437447d6179d7defe51b455">DRSBoard::GetTriggerSource</a></div><div class="ttdeci">int GetTriggerSource()</div><div class="ttdef"><b>Definition:</b> DRS.h:647</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_af43aa2c5158fab98185cea722e09cd9c"><div class="ttname"><a href="class_d_r_s_board.xhtml#af43aa2c5158fab98185cea722e09cd9c">DRSBoard::IsCalibInput</a></div><div class="ttdeci">bool IsCalibInput(int input) const </div><div class="ttdef"><b>Definition:</b> DRS.h:904</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a61377868b567dbc24597274e1717dc61"><div class="ttname"><a href="class_d_r_s_board.xhtml#a61377868b567dbc24597274e1717dc61">DRSBoard::fDAC_CMOFSP</a></div><div class="ttdeci">unsigned int fDAC_CMOFSP</div><div class="ttdef"><b>Definition:</b> DRS.h:462</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a1650683bb20bc48407f978660298a750"><div class="ttname"><a href="class_d_r_s_board.xhtml#a1650683bb20bc48407f978660298a750">DRSBoard::GetTriggerDelay</a></div><div class="ttdeci">int GetTriggerDelay()</div><div class="ttdef"><b>Definition:</b> DRS.h:640</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a3cee01f7db1a87530da03ca11cdd249f"><div class="ttname"><a href="class_d_r_s_board.xhtml#a3cee01f7db1a87530da03ca11cdd249f">DRSBoard::fChannelCascading</a></div><div class="ttdeci">int fChannelCascading</div><div class="ttdef"><b>Definition:</b> DRS.h:504</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a5b45d40f1cd10698070f6542654c07e1"><div class="ttname"><a href="class_d_r_s_board.xhtml#a5b45d40f1cd10698070f6542654c07e1">DRSBoard::fNominalFrequency</a></div><div class="ttdeci">double fNominalFrequency</div><div class="ttdef"><b>Definition:</b> DRS.h:495</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_ae13bc9dbe70bd4299b5049cf3c6a56a1"><div class="ttname"><a href="class_d_r_s_board.xhtml#ae13bc9dbe70bd4299b5049cf3c6a56a1">DRSBoard::GetNumberOfReadoutChannels</a></div><div class="ttdeci">int GetNumberOfReadoutChannels() const </div><div class="ttdef"><b>Definition:</b> DRS.h:787</div></div>
<div class="ttc" id="_d_r_s_8h_xhtml_a3b714eaad5c2b209326b5055e0cfb769a38c04ee9cee7cd75405c297dc96437c7"><div class="ttname"><a href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a38c04ee9cee7cd75405c297dc96437c7">kNumberOfCalibChannelsV3</a></div><div class="ttdef"><b>Definition:</b> DRS.h:172</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_aeaaffc3fa8f700ec7be0be2c5aa44117"><div class="ttname"><a href="class_d_r_s_board.xhtml#aeaaffc3fa8f700ec7be0be2c5aa44117">DRSBoard::GetTransport</a></div><div class="ttdeci">int GetTransport() const </div><div class="ttdef"><b>Definition:</b> DRS.h:621</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a476bcdf1ad85be42f67858d3dbb57361"><div class="ttname"><a href="class_d_r_s_board.xhtml#a476bcdf1ad85be42f67858d3dbb57361">DRSBoard::Debug</a></div><div class="ttdeci">int Debug()</div><div class="ttdef"><b>Definition:</b> DRS.h:667</div></div>
<div class="ttc" id="class_response_calibration_xhtml_a385841cc5731b686a0893cb4e5ecb0a8"><div class="ttname"><a href="class_response_calibration.xhtml#a385841cc5731b686a0893cb4e5ecb0a8">ResponseCalibration::fNumberOfSamples</a></div><div class="ttdeci">int fNumberOfSamples</div><div class="ttdef"><b>Definition:</b> DRS.h:297</div></div>
<div class="ttc" id="class_response_calibration_xhtml_ae4183869975797a2caf28ebc75fdf51a"><div class="ttname"><a href="class_response_calibration.xhtml#ae4183869975797a2caf28ebc75fdf51a">ResponseCalibration::fStatisticsApprox</a></div><div class="ttdeci">float ** fStatisticsApprox</div><div class="ttdef"><b>Definition:</b> DRS.h:335</div></div>
<div class="ttc" id="class_d_r_s_xhtml_a9b31c73ee163ae51d2e490f6dfdf839d"><div class="ttname"><a href="class_d_r_s.xhtml#a9b31c73ee163ae51d2e490f6dfdf839d">DRS::GetBoard</a></div><div class="ttdeci">DRSBoard * GetBoard(int i)</div><div class="ttdef"><b>Definition:</b> DRS.h:938</div></div>
<div class="ttc" id="_d_r_s_8h_xhtml_a3b714eaad5c2b209326b5055e0cfb769"><div class="ttname"><a href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769">DRSBoardConstants</a></div><div class="ttdeci">DRSBoardConstants</div><div class="ttdef"><b>Definition:</b> DRS.h:170</div></div>
<div class="ttc" id="class_response_calibration_1_1_calibration_data_xhtml_a79ceef0044ec104ef7f10b99f08be354"><div class="ttname"><a href="class_response_calibration_1_1_calibration_data.xhtml#a79ceef0044ec104ef7f10b99f08be354">ResponseCalibration::CalibrationData::fNumberOfGridPoints</a></div><div class="ttdeci">unsigned char fNumberOfGridPoints</div><div class="ttdef"><b>Definition:</b> DRS.h:259</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_aa68affe664959b763d0b60221eea32d0"><div class="ttname"><a href="class_d_r_s_board.xhtml#aa68affe664959b763d0b60221eea32d0">DRSBoard::fMultiBuffer</a></div><div class="ttdeci">int fMultiBuffer</div><div class="ttdef"><b>Definition:</b> DRS.h:499</div></div>
<div class="ttc" id="class_d_r_s_callback_xhtml_a43f8e0196e6a98316dca5b64ae799735"><div class="ttname"><a href="class_d_r_s_callback.xhtml#a43f8e0196e6a98316dca5b64ae799735">DRSCallback::~DRSCallback</a></div><div class="ttdeci">virtual ~DRSCallback()</div><div class="ttdef"><b>Definition:</b> DRS.h:200</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a249af1f87c0f77a1950a7701cf9781a2"><div class="ttname"><a href="class_d_r_s_board.xhtml#a249af1f87c0f77a1950a7701cf9781a2">DRSBoard::GetDRSType</a></div><div class="ttdeci">int GetDRSType() const </div><div class="ttdef"><b>Definition:</b> DRS.h:591</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a67afcef97930d8a09383e137bb6c9636"><div class="ttname"><a href="class_d_r_s_board.xhtml#a67afcef97930d8a09383e137bb6c9636">DRSBoard::fNumberOfReadoutChannels</a></div><div class="ttdeci">int fNumberOfReadoutChannels</div><div class="ttdef"><b>Definition:</b> DRS.h:482</div></div>
<div class="ttc" id="class_response_calibration_xhtml_a0869e223f6ad9e3c725368cf708e487e"><div class="ttname"><a href="class_response_calibration.xhtml#a0869e223f6ad9e3c725368cf708e487e">ResponseCalibration::fNumberOfPoints</a></div><div class="ttdeci">int fNumberOfPoints</div><div class="ttdef"><b>Definition:</b> DRS.h:295</div></div>
<div class="ttc" id="class_response_calibration_xhtml_ad353d0c312f81fe964d1cd5722be874f"><div class="ttname"><a href="class_response_calibration.xhtml#ad353d0c312f81fe964d1cd5722be874f">ResponseCalibration::fSampleUsed</a></div><div class="ttdeci">int * fSampleUsed</div><div class="ttdef"><b>Definition:</b> DRS.h:318</div></div>
<div class="ttc" id="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel_xhtml"><div class="ttname"><a href="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel.xhtml">ResponseCalibration::CalibrationData::CalibrationDataChannel</a></div><div class="ttdef"><b>Definition:</b> DRS.h:212</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a3028c351d3cea3f66f28226f7a0ffa93"><div class="ttname"><a href="class_d_r_s_board.xhtml#a3028c351d3cea3f66f28226f7a0ffa93">DRSBoard::fTcalFreq</a></div><div class="ttdeci">int fTcalFreq</div><div class="ttdef"><b>Definition:</b> DRS.h:529</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a8140aaac867a27d42007a93313d39b22"><div class="ttname"><a href="class_d_r_s_board.xhtml#a8140aaac867a27d42007a93313d39b22">DRSBoard::GetTcalPhase</a></div><div class="ttdeci">int GetTcalPhase()</div><div class="ttdef"><b>Definition:</b> DRS.h:738</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a00960bd49af86d59d86421f4b3192c04"><div class="ttname"><a href="class_d_r_s_board.xhtml#a00960bd49af86d59d86421f4b3192c04">DRSBoard::fTriggerStartBin</a></div><div class="ttdeci">int fTriggerStartBin</div><div class="ttdef"><b>Definition:</b> DRS.h:568</div></div>
<div class="ttc" id="_d_r_s_8h_xhtml_acbf2a58cb5683b4598d48cf293852929"><div class="ttname"><a href="_d_r_s_8h.xhtml#acbf2a58cb5683b4598d48cf293852929">drs_kbhit</a></div><div class="ttdeci">int drs_kbhit()</div><div class="ttdef"><b>Definition:</b> DRS.cpp:49</div></div>
<div class="ttc" id="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel_xhtml_a00a2a300ab882187c05abe61c01a1d9c"><div class="ttname"><a href="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel.xhtml#a00a2a300ab882187c05abe61c01a1d9c">ResponseCalibration::CalibrationData::CalibrationDataChannel::fGain</a></div><div class="ttdeci">short fGain[kNumberOfBins]</div><div class="ttdef"><b>Definition:</b> DRS.h:218</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a86a870a039e9259eb38f0557ed5efb83"><div class="ttname"><a href="class_d_r_s_board.xhtml#a86a870a039e9259eb38f0557ed5efb83">DRSBoard::fHasMultiBuffer</a></div><div class="ttdeci">int fHasMultiBuffer</div><div class="ttdef"><b>Definition:</b> DRS.h:479</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_afbfcdb21ef8d15ccfeaef20ce922d1b1"><div class="ttname"><a href="class_d_r_s_board.xhtml#afbfcdb21ef8d15ccfeaef20ce922d1b1">DRSBoard::GetRequiredFirmwareVersion</a></div><div class="ttdeci">int GetRequiredFirmwareVersion() const </div><div class="ttdef"><b>Definition:</b> DRS.h:590</div></div>
<div class="ttc" id="class_response_calibration_xhtml_ab610d05acf9aa683777b0ba2686e5501"><div class="ttname"><a href="class_response_calibration.xhtml#ab610d05acf9aa683777b0ba2686e5501">ResponseCalibration::fCurrentPoint</a></div><div class="ttdeci">int fCurrentPoint</div><div class="ttdef"><b>Definition:</b> DRS.h:306</div></div>
<div class="ttc" id="class_response_calibration_xhtml_a65643fc4329b658f7777bf25a022bb50"><div class="ttname"><a href="class_response_calibration.xhtml#a65643fc4329b658f7777bf25a022bb50">ResponseCalibration::IsRead</a></div><div class="ttdeci">bool IsRead(int chipIndex) const </div><div class="ttdef"><b>Definition:</b> DRS.h:374</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_add3d53d21e7403e4fd8a6f057221d130"><div class="ttname"><a href="class_d_r_s_board.xhtml#add3d53d21e7403e4fd8a6f057221d130">DRSBoard::fAcalMode</a></div><div class="ttdeci">int fAcalMode</div><div class="ttdef"><b>Definition:</b> DRS.h:525</div></div>
<div class="ttc" id="class_response_calibration_xhtml_a561931555706749d1ead37efd1c97d69"><div class="ttname"><a href="class_response_calibration.xhtml#a561931555706749d1ead37efd1c97d69">ResponseCalibration::fCurrentFitChannel</a></div><div class="ttdeci">int fCurrentFitChannel</div><div class="ttdef"><b>Definition:</b> DRS.h:308</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a36e5f5e782fd3588f51931e5d61e4ed0"><div class="ttname"><a href="class_d_r_s_board.xhtml#a36e5f5e782fd3588f51931e5d61e4ed0">DRSBoard::fDAC_TLEVEL1</a></div><div class="ttdeci">unsigned int fDAC_TLEVEL1</div><div class="ttdef"><b>Definition:</b> DRS.h:465</div></div>
<div class="ttc" id="musbstd_8h_xhtml"><div class="ttname"><a href="musbstd_8h.xhtml">musbstd.h</a></div></div>
<div class="ttc" id="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel_xhtml_acb10baf3b2a6bf81e69a66c69aae3552"><div class="ttname"><a href="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel.xhtml#acb10baf3b2a6bf81e69a66c69aae3552">ResponseCalibration::CalibrationData::CalibrationDataChannel::CalibrationDataChannel</a></div><div class="ttdeci">CalibrationDataChannel(int numberOfGridPoints)</div><div class="ttdef"><b>Definition:</b> DRS.h:231</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a9139032b746b14b2c3a9575b4555a8c7"><div class="ttname"><a href="class_d_r_s_board.xhtml#a9139032b746b14b2c3a9575b4555a8c7">DRSBoard::fDelayedStart</a></div><div class="ttdeci">int fDelayedStart</div><div class="ttdef"><b>Definition:</b> DRS.h:516</div></div>
<div class="ttc" id="class_response_calibration_xhtml_a7ef77a1a66aa67393f057ee92e99a63d"><div class="ttname"><a href="class_response_calibration.xhtml#a7ef77a1a66aa67393f057ee92e99a63d">ResponseCalibration::fWWFit</a></div><div class="ttdeci">double * fWWFit</div><div class="ttdef"><b>Definition:</b> DRS.h:328</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_aed18832b69cf58c4e400ae42922ae93f"><div class="ttname"><a href="class_d_r_s_board.xhtml#aed18832b69cf58c4e400ae42922ae93f">DRSBoard::fTriggerSource</a></div><div class="ttdeci">int fTriggerSource</div><div class="ttdef"><b>Definition:</b> DRS.h:512</div></div>
<div class="ttc" id="class_response_calibration_xhtml_aa25b582d3ce2ae18ccac2d93c57a3316"><div class="ttname"><a href="class_response_calibration.xhtml#aa25b582d3ce2ae18ccac2d93c57a3316">ResponseCalibration::fNumberOfMode2Bins</a></div><div class="ttdeci">int fNumberOfMode2Bins</div><div class="ttdef"><b>Definition:</b> DRS.h:296</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_aa42c53ecce58e5e2db7af8c2ca1211cd"><div class="ttname"><a href="class_d_r_s_board.xhtml#aa42c53ecce58e5e2db7af8c2ca1211cd">DRSBoard::fDAC_ADCOFS</a></div><div class="ttdeci">unsigned int fDAC_ADCOFS</div><div class="ttdef"><b>Definition:</b> DRS.h:448</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a2e9338ef786bf6103252c89450f4b0db"><div class="ttname"><a href="class_d_r_s_board.xhtml#a2e9338ef786bf6103252c89450f4b0db">DRSBoard::fRefclk</a></div><div class="ttdeci">int fRefclk</div><div class="ttdef"><b>Definition:</b> DRS.h:535</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a0379970c7c7f1f7b770883c83289237f"><div class="ttname"><a href="class_d_r_s_board.xhtml#a0379970c7c7f1f7b770883c83289237f">DRSBoard::fDAC_ONOFS</a></div><div class="ttdeci">unsigned int fDAC_ONOFS</div><div class="ttdef"><b>Definition:</b> DRS.h:460</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a92cdb6cb9f66979ddd42dae136597bc9"><div class="ttname"><a href="class_d_r_s_board.xhtml#a92cdb6cb9f66979ddd42dae136597bc9">DRSBoard::fDAC_CALN</a></div><div class="ttdeci">unsigned int fDAC_CALN</div><div class="ttdef"><b>Definition:</b> DRS.h:458</div></div>
<div class="ttc" id="_d_r_s_8h_xhtml_a0521e6f7f9747c49fea173b1d1732584"><div class="ttname"><a href="_d_r_s_8h.xhtml#a0521e6f7f9747c49fea173b1d1732584">millitime</a></div><div class="ttdeci">unsigned int millitime()</div><div class="ttdef"><b>Definition:</b> DRS.cpp:6627</div></div>
<div class="ttc" id="_d_r_s_8h_xhtml_ab7dcc7278f8e703da53de2ee769ce2f6a0bafed6cc38e331cd36c0fb27e99bca4"><div class="ttname"><a href="_d_r_s_8h.xhtml#ab7dcc7278f8e703da53de2ee769ce2f6a0bafed6cc38e331cd36c0fb27e99bca4">kInvalidTransport</a></div><div class="ttdef"><b>Definition:</b> DRS.h:189</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a37192b04baaf141b4474d6e9ec33a3f3"><div class="ttname"><a href="class_d_r_s_board.xhtml#a37192b04baaf141b4474d6e9ec33a3f3">DRSBoard::fTriggerEnable2</a></div><div class="ttdeci">int fTriggerEnable2</div><div class="ttdef"><b>Definition:</b> DRS.h:511</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a07b35fafca718cc745c2a1d52fb62969"><div class="ttname"><a href="class_d_r_s_board.xhtml#a07b35fafca718cc745c2a1d52fb62969">DRSBoard::fReadoutMode</a></div><div class="ttdeci">int fReadoutMode</div><div class="ttdef"><b>Definition:</b> DRS.h:507</div></div>
<div class="ttc" id="class_response_calibration_xhtml_afa0e31c4d1a1a671f8730bbabedfd58a"><div class="ttname"><a href="class_response_calibration.xhtml#afa0e31c4d1a1a671f8730bbabedfd58a">ResponseCalibration::fNumberOfXConstGridPoints</a></div><div class="ttdeci">int fNumberOfXConstGridPoints</div><div class="ttdef"><b>Definition:</b> DRS.h:300</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a8d1f4dff412623da2cdb7ec3ead2cbf3"><div class="ttname"><a href="class_d_r_s_board.xhtml#a8d1f4dff412623da2cdb7ec3ead2cbf3">DRSBoard::fbkTcalFreq</a></div><div class="ttdeci">int fbkTcalFreq</div><div class="ttdef"><b>Definition:</b> DRS.h:530</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a826bbce983a542223b5c38234453165b"><div class="ttname"><a href="class_d_r_s_board.xhtml#a826bbce983a542223b5c38234453165b">DRSBoard::fTCALFrequency</a></div><div class="ttdeci">double fTCALFrequency</div><div class="ttdef"><b>Definition:</b> DRS.h:497</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_ae63fec81ac5db0f4125178382a895447"><div class="ttname"><a href="class_d_r_s_board.xhtml#ae63fec81ac5db0f4125178382a895447">DRSBoard::GetNumberOfChannels</a></div><div class="ttdeci">int GetNumberOfChannels() const </div><div class="ttdef"><b>Definition:</b> DRS.h:597</div></div>
<div class="ttc" id="class_response_calibration_xhtml_a6a41bb0352011f8002e11b8ac3fc3ff0"><div class="ttname"><a href="class_response_calibration.xhtml#a6a41bb0352011f8002e11b8ac3fc3ff0">ResponseCalibration::fShowStatistics</a></div><div class="ttdeci">int fShowStatistics</div><div class="ttdef"><b>Definition:</b> DRS.h:302</div></div>
<div class="ttc" id="class_response_calibration_1_1_calibration_data_xhtml_a4c119f1646069f26ce8d60fbeec76621"><div class="ttname"><a href="class_response_calibration_1_1_calibration_data.xhtml#a4c119f1646069f26ce8d60fbeec76621">ResponseCalibration::CalibrationData::fMin</a></div><div class="ttdeci">float fMin</div><div class="ttdef"><b>Definition:</b> DRS.h:265</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_ab645921fa0052a27584853e0d205243a"><div class="ttname"><a href="class_d_r_s_board.xhtml#ab645921fa0052a27584853e0d205243a">DRSBoard::fTriggerDelayNs</a></div><div class="ttdeci">double fTriggerDelayNs</div><div class="ttdef"><b>Definition:</b> DRS.h:514</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a30c091d337c8f3d431714420ed5d17c4"><div class="ttname"><a href="class_d_r_s_board.xhtml#a30c091d337c8f3d431714420ed5d17c4">DRSBoard::GetTcalLevel</a></div><div class="ttdeci">int GetTcalLevel()</div><div class="ttdef"><b>Definition:</b> DRS.h:737</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_ad68eb500251ead2586cf79b1faa1005c"><div class="ttname"><a href="class_d_r_s_board.xhtml#ad68eb500251ead2586cf79b1faa1005c">DRSBoard::fDAC_INOFS</a></div><div class="ttdeci">unsigned int fDAC_INOFS</div><div class="ttdef"><b>Definition:</b> DRS.h:453</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a339839836e4a46bd02b613e30fbfd88b"><div class="ttname"><a href="class_d_r_s_board.xhtml#a339839836e4a46bd02b613e30fbfd88b">DRSBoard::GetNumberOfInputs</a></div><div class="ttdeci">int GetNumberOfInputs() const </div><div class="ttdef"><b>Definition:</b> DRS.h:810</div></div>
<div class="ttc" id="class_d_r_s_board_1_1_time_data_xhtml"><div class="ttname"><a href="class_d_r_s_board_1_1_time_data.xhtml">DRSBoard::TimeData</a></div><div class="ttdef"><b>Definition:</b> DRS.h:404</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a25724fdfd8d824b90ecdadcf6fe91223"><div class="ttname"><a href="class_d_r_s_board.xhtml#a25724fdfd8d824b90ecdadcf6fe91223">DRSBoard::fTriggerEnable1</a></div><div class="ttdeci">int fTriggerEnable1</div><div class="ttdef"><b>Definition:</b> DRS.h:510</div></div>
<div class="ttc" id="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel_xhtml_a1dcb99e39d60b1c3f0f2671d2e59babc"><div class="ttname"><a href="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel.xhtml#a1dcb99e39d60b1c3f0f2671d2e59babc">ResponseCalibration::CalibrationData::CalibrationDataChannel::~CalibrationDataChannel</a></div><div class="ttdeci">~CalibrationDataChannel()</div><div class="ttdef"><b>Definition:</b> DRS.h:247</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a0d097b5422d12110bb89aef21271b85b"><div class="ttname"><a href="class_d_r_s_board.xhtml#a0d097b5422d12110bb89aef21271b85b">DRSBoard::fADCClkInvert</a></div><div class="ttdeci">bool fADCClkInvert</div><div class="ttdef"><b>Definition:</b> DRS.h:485</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a1e425a3d189aab1de17b5d5b6728727c"><div class="ttname"><a href="class_d_r_s_board.xhtml#a1e425a3d189aab1de17b5d5b6728727c">DRSBoard::fDAC_DRB</a></div><div class="ttdeci">unsigned int fDAC_DRB</div><div class="ttdef"><b>Definition:</b> DRS.h:445</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_aaaedfcbc5cda28201f52e968edbb8bab"><div class="ttname"><a href="class_d_r_s_board.xhtml#aaaedfcbc5cda28201f52e968edbb8bab">DRSBoard::fTriggerDelay</a></div><div class="ttdeci">int fTriggerDelay</div><div class="ttdef"><b>Definition:</b> DRS.h:513</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a9e3f4c1f639856f5d5d04a22f9b00d2b"><div class="ttname"><a href="class_d_r_s_board.xhtml#a9e3f4c1f639856f5d5d04a22f9b00d2b">DRSBoard::fDAC_DSB</a></div><div class="ttdeci">unsigned int fDAC_DSB</div><div class="ttdef"><b>Definition:</b> DRS.h:444</div></div>
<div class="ttc" id="class_response_calibration_xhtml_ae68aa6c91d8ffae61d1a0fd739a78039"><div class="ttname"><a href="class_response_calibration.xhtml#ae68aa6c91d8ffae61d1a0fd739a78039">ResponseCalibration::GetOffsetAt</a></div><div class="ttdeci">double GetOffsetAt(int chip, int chn, int bin) const </div><div class="ttdef"><b>Definition:</b> DRS.h:377</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml"><div class="ttname"><a href="class_d_r_s_board.xhtml">DRSBoard</a></div><div class="ttdef"><b>Definition:</b> DRS.h:402</div></div>
<div class="ttc" id="_d_r_s_8h_xhtml_a3b714eaad5c2b209326b5055e0cfb769a8c257ca44001dafddacded37e1e312d2"><div class="ttname"><a href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a8c257ca44001dafddacded37e1e312d2">kNumberOfADCBins</a></div><div class="ttdef"><b>Definition:</b> DRS.h:180</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a6a8238466c80de8092ad8c72dfdc0a88"><div class="ttname"><a href="class_d_r_s_board.xhtml#a6a8238466c80de8092ad8c72dfdc0a88">DRSBoard::fDAC_ACALIB</a></div><div class="ttdeci">unsigned int fDAC_ACALIB</div><div class="ttdef"><b>Definition:</b> DRS.h:443</div></div>
<div class="ttc" id="_d_r_s_8h_xhtml_ab7dcc7278f8e703da53de2ee769ce2f6a99e337e5fc0ce0b637934203bb383eb8"><div class="ttname"><a href="_d_r_s_8h.xhtml#ab7dcc7278f8e703da53de2ee769ce2f6a99e337e5fc0ce0b637934203bb383eb8">kWaveNotAvailable</a></div><div class="ttdef"><b>Definition:</b> DRS.h:191</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a15a41bb318acb4cd3617a95831e16cb9"><div class="ttname"><a href="class_d_r_s_board.xhtml#a15a41bb318acb4cd3617a95831e16cb9">DRSBoard::fTcalPhase</a></div><div class="ttdeci">int fTcalPhase</div><div class="ttdef"><b>Definition:</b> DRS.h:533</div></div>
<div class="ttc" id="class_d_r_s_callback_xhtml"><div class="ttname"><a href="class_d_r_s_callback.xhtml">DRSCallback</a></div><div class="ttdef"><b>Definition:</b> DRS.h:196</div></div>
<div class="ttc" id="class_response_calibration_xhtml_aaa4863d4d3f16f40e343c76e1346b25c"><div class="ttname"><a href="class_response_calibration.xhtml#aaa4863d4d3f16f40e343c76e1346b25c">ResponseCalibration::GetPrecision</a></div><div class="ttdeci">double GetPrecision() const </div><div class="ttdef"><b>Definition:</b> DRS.h:375</div></div>
<div class="ttc" id="class_response_calibration_1_1_calibration_data_xhtml_a4f4245694d698671c03d3ece60f86b72"><div class="ttname"><a href="class_response_calibration_1_1_calibration_data.xhtml#a4f4245694d698671c03d3ece60f86b72">ResponseCalibration::CalibrationData::fNumberOfLimitGroups</a></div><div class="ttdeci">unsigned char fNumberOfLimitGroups</div><div class="ttdef"><b>Definition:</b> DRS.h:267</div></div>
<div class="ttc" id="class_response_calibration_1_1_calibration_data_xhtml_ac71ddc274c0b36c900e2958e04f17c2a"><div class="ttname"><a href="class_response_calibration_1_1_calibration_data.xhtml#ac71ddc274c0b36c900e2958e04f17c2a">ResponseCalibration::CalibrationData::fEndTemperature</a></div><div class="ttdeci">float fEndTemperature</div><div class="ttdef"><b>Definition:</b> DRS.h:262</div></div>
<div class="ttc" id="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel_xhtml_afcd111aa85b11491a42a78b05afb0929"><div class="ttname"><a href="class_response_calibration_1_1_calibration_data_1_1_calibration_data_channel.xhtml#afcd111aa85b11491a42a78b05afb0929">ResponseCalibration::CalibrationData::CalibrationDataChannel::fOffset</a></div><div class="ttdeci">short fOffset[kNumberOfBins]</div><div class="ttdef"><b>Definition:</b> DRS.h:217</div></div>
<div class="ttc" id="class_response_calibration_xhtml_ade72bb5b1cbcd732bfb716e6c2e29944"><div class="ttname"><a href="class_response_calibration.xhtml#ade72bb5b1cbcd732bfb716e6c2e29944">ResponseCalibration::fNumberOfGridPoints</a></div><div class="ttdeci">int fNumberOfGridPoints</div><div class="ttdef"><b>Definition:</b> DRS.h:298</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a5ad2612e2361d2c909a810c2c4127e9a"><div class="ttname"><a href="class_d_r_s_board.xhtml#a5ad2612e2361d2c909a810c2c4127e9a">DRSBoard::Input2ReadoutChannel</a></div><div class="ttdeci">int Input2ReadoutChannel(int input, int ind=0) const </div><div class="ttdef"><b>Definition:</b> DRS.h:860</div></div>
<div class="ttc" id="_d_r_s_8h_xhtml_a3b714eaad5c2b209326b5055e0cfb769a700bed1ad61d9981bb01ded0858c960a"><div class="ttname"><a href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a700bed1ad61d9981bb01ded0858c960a">kPreCaliculatedBSplines</a></div><div class="ttdef"><b>Definition:</b> DRS.h:178</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_aacfb8b5b8cbd78ea8ef98530f3ab908c"><div class="ttname"><a href="class_d_r_s_board.xhtml#aacfb8b5b8cbd78ea8ef98530f3ab908c">DRSBoard::fChannelDepth</a></div><div class="ttdeci">int fChannelDepth</div><div class="ttdef"><b>Definition:</b> DRS.h:505</div></div>
<div class="ttc" id="class_d_r_s_callback_xhtml_a088e15ac8657d148d61c8fb80b2e23ac"><div class="ttname"><a href="class_d_r_s_callback.xhtml#a088e15ac8657d148d61c8fb80b2e23ac">DRSCallback::Progress</a></div><div class="ttdeci">virtual void Progress(int value)=0</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a7e323137cb16961b1269cc2ecd5d76ec"><div class="ttname"><a href="class_d_r_s_board.xhtml#a7e323137cb16961b1269cc2ecd5d76ec">DRSBoard::fDAC_CMOFSN</a></div><div class="ttdeci">unsigned int fDAC_CMOFSN</div><div class="ttdef"><b>Definition:</b> DRS.h:463</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a949682f03b082f11a1d56a8514e0ca84"><div class="ttname"><a href="class_d_r_s_board.xhtml#a949682f03b082f11a1d56a8514e0ca84">DRSBoard::fTimingCalibratedFrequency</a></div><div class="ttdeci">double fTimingCalibratedFrequency</div><div class="ttdef"><b>Definition:</b> DRS.h:554</div></div>
<div class="ttc" id="class_d_r_s_board_1_1_time_data_xhtml_adcfd973f1d37b6ebf3bd4fdc24ee5398"><div class="ttname"><a href="class_d_r_s_board_1_1_time_data.xhtml#adcfd973f1d37b6ebf3bd4fdc24ee5398">DRSBoard::TimeData::fChip</a></div><div class="ttdeci">int fChip</div><div class="ttdef"><b>Definition:</b> DRS.h:415</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a5a5f44f02e234b2856ffa1b09cbda1fe"><div class="ttname"><a href="class_d_r_s_board.xhtml#a5a5f44f02e234b2856ffa1b09cbda1fe">DRSBoard::fDebug</a></div><div class="ttdeci">int fDebug</div><div class="ttdef"><b>Definition:</b> DRS.h:562</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a7b6ab7bffc13510b5707b1cdf06d7c01"><div class="ttname"><a href="class_d_r_s_board.xhtml#a7b6ab7bffc13510b5707b1cdf06d7c01">DRSBoard::SetDebug</a></div><div class="ttdeci">void SetDebug(int debug)</div><div class="ttdef"><b>Definition:</b> DRS.h:666</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_acb8a86add3f5dc15f7663d9eb3046934"><div class="ttname"><a href="class_d_r_s_board.xhtml#acb8a86add3f5dc15f7663d9eb3046934">DRSBoard::GetInputRange</a></div><div class="ttdeci">double GetInputRange(void)</div><div class="ttdef"><b>Definition:</b> DRS.h:690</div></div>
<div class="ttc" id="class_response_calibration_xhtml_a82ef8ee252a5a96b2de17d7af4d44a5c"><div class="ttname"><a href="class_response_calibration.xhtml#a82ef8ee252a5a96b2de17d7af4d44a5c">ResponseCalibration::fYYFit</a></div><div class="ttdeci">double * fYYFit</div><div class="ttdef"><b>Definition:</b> DRS.h:327</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a852b7c9b40ae20f882e7ac0fe008cb2e"><div class="ttname"><a href="class_d_r_s_board.xhtml#a852b7c9b40ae20f882e7ac0fe008cb2e">DRSBoard::fNumberOfTimeData</a></div><div class="ttdeci">int fNumberOfTimeData</div><div class="ttdef"><b>Definition:</b> DRS.h:559</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a847ca955e64f34853643bf21a3ec44e7"><div class="ttname"><a href="class_d_r_s_board.xhtml#a847ca955e64f34853643bf21a3ec44e7">DRSBoard::GetRefclk</a></div><div class="ttdeci">int GetRefclk()</div><div class="ttdef"><b>Definition:</b> DRS.h:735</div></div>
<div class="ttc" id="class_response_calibration_xhtml_ac69cbc50485d95de2a1dccbd8c8e96dc"><div class="ttname"><a href="class_response_calibration.xhtml#ac69cbc50485d95de2a1dccbd8c8e96dc">ResponseCalibration::GetMeasPointYAt</a></div><div class="ttdeci">double GetMeasPointYAt(int ip) const </div><div class="ttdef"><b>Definition:</b> DRS.h:380</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a17dde05536ab2190bf2e602646b33fa1"><div class="ttname"><a href="class_d_r_s_board.xhtml#a17dde05536ab2190bf2e602646b33fa1">DRSBoard::fDAC_COFSB</a></div><div class="ttdeci">unsigned int fDAC_COFSB</div><div class="ttdef"><b>Definition:</b> DRS.h:439</div></div>
<div class="ttc" id="class_response_calibration_xhtml_ae714e39c3289200649edc7e4265d6ce8"><div class="ttname"><a href="class_response_calibration.xhtml#ae714e39c3289200649edc7e4265d6ce8">ResponseCalibration::fCurrentSample</a></div><div class="ttdeci">int fCurrentSample</div><div class="ttdef"><b>Definition:</b> DRS.h:307</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a84fd012876e3c1434ae964f9e4673795"><div class="ttname"><a href="class_d_r_s_board.xhtml#a84fd012876e3c1434ae964f9e4673795">DRSBoard::ReadoutChannel2Channel</a></div><div class="ttdeci">int ReadoutChannel2Channel(int readout) const </div><div class="ttdef"><b>Definition:</b> DRS.h:872</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_acc3955004ff083d6c6fbe506ba690e3b"><div class="ttname"><a href="class_d_r_s_board.xhtml#acc3955004ff083d6c6fbe506ba690e3b">DRSBoard::fADCActive</a></div><div class="ttdeci">int fADCActive</div><div class="ttdef"><b>Definition:</b> DRS.h:502</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a72cc72bd11618a45aac25d084d04a989"><div class="ttname"><a href="class_d_r_s_board.xhtml#a72cc72bd11618a45aac25d084d04a989">DRSBoard::GetClockInput</a></div><div class="ttdeci">int GetClockInput() const </div><div class="ttdef"><b>Definition:</b> DRS.h:606</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a5cc79c92a602d7b2c6d6470ed1bbce35"><div class="ttname"><a href="class_d_r_s_board.xhtml#a5cc79c92a602d7b2c6d6470ed1bbce35">DRSBoard::fDAC_TLEVEL3</a></div><div class="ttdeci">unsigned int fDAC_TLEVEL3</div><div class="ttdef"><b>Definition:</b> DRS.h:467</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_ab477480a16fc1958a17e41e2ec246a87"><div class="ttname"><a href="class_d_r_s_board.xhtml#ab477480a16fc1958a17e41e2ec246a87">DRSBoard::IsVoltageCalibrationValid</a></div><div class="ttdeci">bool IsVoltageCalibrationValid(void)</div><div class="ttdef"><b>Definition:</b> DRS.h:716</div></div>
<div class="ttc" id="class_response_calibration_xhtml_a3c87489e3099cc8e0c3fd7d09a769a65"><div class="ttname"><a href="class_response_calibration.xhtml#a3c87489e3099cc8e0c3fd7d09a769a65">ResponseCalibration::fBoard</a></div><div class="ttdeci">DRSBoard * fBoard</div><div class="ttdef"><b>Definition:</b> DRS.h:283</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_ab0d840fe705b93df03627b484d681ef7"><div class="ttname"><a href="class_d_r_s_board.xhtml#ab0d840fe705b93df03627b484d681ef7">DRSBoard::fDAC_TLEVEL4</a></div><div class="ttdeci">unsigned int fDAC_TLEVEL4</div><div class="ttdef"><b>Definition:</b> DRS.h:468</div></div>
<div class="ttc" id="class_d_r_s_board_1_1_time_data_xhtml_a6bf58419d977077e12ed416b8a6209f7"><div class="ttname"><a href="class_d_r_s_board_1_1_time_data.xhtml#a6bf58419d977077e12ed416b8a6209f7">DRSBoard::TimeData::~TimeData</a></div><div class="ttdeci">~TimeData()</div><div class="ttdef"><b>Definition:</b> DRS.h:428</div></div>
<div class="ttc" id="_d_r_s_8h_xhtml_a3b714eaad5c2b209326b5055e0cfb769a20b4a8f5cdfc2a3ce90c3f32af999fa0"><div class="ttname"><a href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a20b4a8f5cdfc2a3ce90c3f32af999fa0">kNumberOfBins</a></div><div class="ttdef"><b>Definition:</b> DRS.h:174</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a2af540028e10ce4c07039e9be349df03"><div class="ttname"><a href="class_d_r_s_board.xhtml#a2af540028e10ce4c07039e9be349df03">DRSBoard::fFirmwareVersion</a></div><div class="ttdeci">int fFirmwareVersion</div><div class="ttdef"><b>Definition:</b> DRS.h:477</div></div>
<div class="ttc" id="_d_r_s_8cpp_xhtml_ac89156dccaa40ed794e95612780a0e36"><div class="ttname"><a href="_d_r_s_8cpp.xhtml#ac89156dccaa40ed794e95612780a0e36">center</a></div><div class="ttdeci">static float center[kNumberOfChipsMax][kNumberOfChannelsMax][kNumberOfBins]</div><div class="ttdef"><b>Definition:</b> DRS.cpp:4813</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a929b5a176d43dff3a7ae958f18ef9944"><div class="ttname"><a href="class_d_r_s_board.xhtml#a929b5a176d43dff3a7ae958f18ef9944">DRSBoard::fReadoutChannelConfig</a></div><div class="ttdeci">int fReadoutChannelConfig</div><div class="ttdef"><b>Definition:</b> DRS.h:483</div></div>
<div class="ttc" id="class_response_calibration_xhtml_a8bb45551b0b7a090d3e2839385b07e7c"><div class="ttname"><a href="class_response_calibration.xhtml#a8bb45551b0b7a090d3e2839385b07e7c">ResponseCalibration::fResponseY</a></div><div class="ttdeci">float * fResponseY</div><div class="ttdef"><b>Definition:</b> DRS.h:312</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_ac7d6c8f9f48791d6211fae728820610f"><div class="ttname"><a href="class_d_r_s_board.xhtml#ac7d6c8f9f48791d6211fae728820610f">DRSBoard::GetTcalFreq</a></div><div class="ttdeci">int GetTcalFreq()</div><div class="ttdef"><b>Definition:</b> DRS.h:736</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a642cf0ea03513073b19dadf9eace780c"><div class="ttname"><a href="class_d_r_s_board.xhtml#a642cf0ea03513073b19dadf9eace780c">DRSBoard::fDAC_DRA</a></div><div class="ttdeci">unsigned int fDAC_DRA</div><div class="ttdef"><b>Definition:</b> DRS.h:440</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a6a358b6f6b0c284287ab5004330ae206"><div class="ttname"><a href="class_d_r_s_board.xhtml#a6a358b6f6b0c284287ab5004330ae206">DRSBoard::GetBoardSerialNumber</a></div><div class="ttdeci">int GetBoardSerialNumber() const </div><div class="ttdef"><b>Definition:</b> DRS.h:587</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a1592db8f03a4e15a348b71300536b189"><div class="ttname"><a href="class_d_r_s_board.xhtml#a1592db8f03a4e15a348b71300536b189">DRSBoard::fTriggerBus</a></div><div class="ttdeci">unsigned short fTriggerBus</div><div class="ttdef"><b>Definition:</b> DRS.h:521</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_ab96e9d59776c2019f16c4b6cc047c163"><div class="ttname"><a href="class_d_r_s_board.xhtml#ab96e9d59776c2019f16c4b6cc047c163">DRSBoard::fCtrlBits</a></div><div class="ttdeci">unsigned int fCtrlBits</div><div class="ttdef"><b>Definition:</b> DRS.h:481</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_aa43ece39c3563eba4e5b39329f6ce61b"><div class="ttname"><a href="class_d_r_s_board.xhtml#aa43ece39c3563eba4e5b39329f6ce61b">DRSBoard::GetTriggerChannel</a></div><div class="ttdeci">int GetTriggerChannel() const </div><div class="ttdef"><b>Definition:</b> DRS.h:827</div></div>
<div class="ttc" id="_d_r_s_8h_xhtml_ab7dcc7278f8e703da53de2ee769ce2f6a939c49bc077470033c6ed00508128f6c"><div class="ttname"><a href="_d_r_s_8h.xhtml#ab7dcc7278f8e703da53de2ee769ce2f6a939c49bc077470033c6ed00508128f6c">kWrongChannelOrChip</a></div><div class="ttdef"><b>Definition:</b> DRS.h:188</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_aaa44d4f889f5a58eecc4b2adade7bb16"><div class="ttname"><a href="class_d_r_s_board.xhtml#aaa44d4f889f5a58eecc4b2adade7bb16">DRSBoard::fCellCalibratedRange</a></div><div class="ttdeci">double fCellCalibratedRange</div><div class="ttdef"><b>Definition:</b> DRS.h:548</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a45ec2b8c8964e6ea10327336f3f3bd2a"><div class="ttname"><a href="class_d_r_s_board.xhtml#a45ec2b8c8964e6ea10327336f3f3bd2a">DRSBoard::fChannelConfig</a></div><div class="ttdeci">int fChannelConfig</div><div class="ttdef"><b>Definition:</b> DRS.h:503</div></div>
<div class="ttc" id="class_response_calibration_xhtml_a2a7c1cad4d9a9577ed1e9ba092082e4a"><div class="ttname"><a href="class_response_calibration.xhtml#a2a7c1cad4d9a9577ed1e9ba092082e4a">ResponseCalibration::fGainMin</a></div><div class="ttdeci">double fGainMin</div><div class="ttdef"><b>Definition:</b> DRS.h:332</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_af9b6462ed39f6b642ab3b6d7b75aca9c"><div class="ttname"><a href="class_d_r_s_board.xhtml#af9b6462ed39f6b642ab3b6d7b75aca9c">DRSBoard::fNumberOfChannels</a></div><div class="ttdeci">int fNumberOfChannels</div><div class="ttdef"><b>Definition:</b> DRS.h:475</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a8b537a61ef681215dc5a34c0f42bf50a"><div class="ttname"><a href="class_d_r_s_board.xhtml#a8b537a61ef681215dc5a34c0f42bf50a">DRSBoard::fROFS</a></div><div class="ttdeci">double fROFS</div><div class="ttdef"><b>Definition:</b> DRS.h:522</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a22b452bbb32b4c3c4e40c132254be6e9"><div class="ttname"><a href="class_d_r_s_board.xhtml#a22b452bbb32b4c3c4e40c132254be6e9">DRSBoard::fbkAcalMode</a></div><div class="ttdeci">int fbkAcalMode</div><div class="ttdef"><b>Definition:</b> DRS.h:526</div></div>
<div class="ttc" id="class_d_r_s_board_1_1_time_data_xhtml_aa8f065d3bb4fc581465ca5f25303dd17"><div class="ttname"><a href="class_d_r_s_board_1_1_time_data.xhtml#aa8f065d3bb4fc581465ca5f25303dd17">DRSBoard::TimeData::fNumberOfFrequencies</a></div><div class="ttdeci">int fNumberOfFrequencies</div><div class="ttdef"><b>Definition:</b> DRS.h:416</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a79456271c8419f5a0692efbf5ce05b8a"><div class="ttname"><a href="class_d_r_s_board.xhtml#a79456271c8419f5a0692efbf5ce05b8a">DRSBoard::fRefClock</a></div><div class="ttdeci">double fRefClock</div><div class="ttdef"><b>Definition:</b> DRS.h:498</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a4afdedfdae9526ce10fee00b25ee5387"><div class="ttname"><a href="class_d_r_s_board.xhtml#a4afdedfdae9526ce10fee00b25ee5387">DRSBoard::fTransport</a></div><div class="ttdeci">unsigned int fTransport</div><div class="ttdef"><b>Definition:</b> DRS.h:480</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a7362064ea5a39327c54b309f158a6422"><div class="ttname"><a href="class_d_r_s_board.xhtml#a7362064ea5a39327c54b309f158a6422">DRSBoard::fDominoMode</a></div><div class="ttdeci">int fDominoMode</div><div class="ttdef"><b>Definition:</b> DRS.h:500</div></div>
<div class="ttc" id="_d_r_s_8h_xhtml_ab7dcc7278f8e703da53de2ee769ce2f6ac8b12b6cbec0edae80530c9b87f10c3c"><div class="ttname"><a href="_d_r_s_8h.xhtml#ab7dcc7278f8e703da53de2ee769ce2f6ac8b12b6cbec0edae80530c9b87f10c3c">kInvalidTriggerSignal</a></div><div class="ttdef"><b>Definition:</b> DRS.h:187</div></div>
<div class="ttc" id="class_response_calibration_xhtml_a351da484286754dc01484d1da8a92b48"><div class="ttname"><a href="class_response_calibration.xhtml#a351da484286754dc01484d1da8a92b48">ResponseCalibration::fTriggerFrequency</a></div><div class="ttdeci">double fTriggerFrequency</div><div class="ttdef"><b>Definition:</b> DRS.h:301</div></div>
<div class="ttc" id="class_response_calibration_1_1_calibration_data_xhtml_a54faca58181aedc3418d715db4982b85"><div class="ttname"><a href="class_response_calibration_1_1_calibration_data.xhtml#a54faca58181aedc3418d715db4982b85">ResponseCalibration::CalibrationData::fMax</a></div><div class="ttdeci">float fMax</div><div class="ttdef"><b>Definition:</b> DRS.h:266</div></div>
<div class="ttc" id="class_response_calibration_xhtml_a7662c45a0f2490a5e9ff853c8f750654"><div class="ttname"><a href="class_response_calibration.xhtml#a7662c45a0f2490a5e9ff853c8f750654">ResponseCalibration::fXXSave</a></div><div class="ttdeci">double * fXXSave</div><div class="ttdef"><b>Definition:</b> DRS.h:331</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a3d2ca1fcaaf96e270dd51df9cfd6d560"><div class="ttname"><a href="class_d_r_s_board.xhtml#a3d2ca1fcaaf96e270dd51df9cfd6d560">DRSBoard::GetNominalFrequency</a></div><div class="ttdeci">double GetNominalFrequency() const </div><div class="ttdef"><b>Definition:</b> DRS.h:676</div></div>
<div class="ttc" id="class_response_calibration_xhtml_ab655354940df49ff4646c0a5be27b4de"><div class="ttname"><a href="class_response_calibration.xhtml#ab655354940df49ff4646c0a5be27b4de">ResponseCalibration::fNumberOfPointsLowVolt</a></div><div class="ttdeci">int fNumberOfPointsLowVolt</div><div class="ttdef"><b>Definition:</b> DRS.h:294</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a15a433dc560267e1c2d22ccfe9fbde3d"><div class="ttname"><a href="class_d_r_s_board.xhtml#a15a433dc560267e1c2d22ccfe9fbde3d">DRSBoard::GetResponseCalibration</a></div><div class="ttdeci">ResponseCalibration * GetResponseCalibration() const </div><div class="ttdef"><b>Definition:</b> DRS.h:755</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a2bbccf99580553c64ae5dc8cf932cd17"><div class="ttname"><a href="class_d_r_s_board.xhtml#a2bbccf99580553c64ae5dc8cf932cd17">DRSBoard::fDominoActive</a></div><div class="ttdeci">int fDominoActive</div><div class="ttdef"><b>Definition:</b> DRS.h:501</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a672a9fb83fc7940954f765b148985d1d"><div class="ttname"><a href="class_d_r_s_board.xhtml#a672a9fb83fc7940954f765b148985d1d">DRSBoard::fDAC_COFS</a></div><div class="ttdeci">unsigned int fDAC_COFS</div><div class="ttdef"><b>Definition:</b> DRS.h:447</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a2402e2248e75f56d76da54d87a276ce8"><div class="ttname"><a href="class_d_r_s_board.xhtml#a2402e2248e75f56d76da54d87a276ce8">DRSBoard::GetTriggerInput</a></div><div class="ttdeci">int GetTriggerInput() const </div><div class="ttdef"><b>Definition:</b> DRS.h:607</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a1fbc7e5a26995c1aec862942f99c5c00"><div class="ttname"><a href="class_d_r_s_board.xhtml#a1fbc7e5a26995c1aec862942f99c5c00">DRSBoard::Channel2Input</a></div><div class="ttdeci">int Channel2Input(int channel) const </div><div class="ttdef"><b>Definition:</b> DRS.h:832</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a444ffee223cd62b53d8609808b608b75"><div class="ttname"><a href="class_d_r_s_board.xhtml#a444ffee223cd62b53d8609808b608b75">DRSBoard::IsMultiBuffer</a></div><div class="ttdeci">int IsMultiBuffer()</div><div class="ttdef"><b>Definition:</b> DRS.h:682</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_aaf56429896ac6bba7c089ff875b47986"><div class="ttname"><a href="class_d_r_s_board.xhtml#aaf56429896ac6bba7c089ff875b47986">DRSBoard::fTranspMode</a></div><div class="ttdeci">int fTranspMode</div><div class="ttdef"><b>Definition:</b> DRS.h:517</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_acda82cdf8e8afdd388a2da239ea2e9ef"><div class="ttname"><a href="class_d_r_s_board.xhtml#acda82cdf8e8afdd388a2da239ea2e9ef">DRSBoard::GetClockChannel</a></div><div class="ttdeci">int GetClockChannel() const </div><div class="ttdef"><b>Definition:</b> DRS.h:823</div></div>
<div class="ttc" id="class_response_calibration_xhtml_a96ec6b92792998e41f035dff6449f2d9"><div class="ttname"><a href="class_response_calibration.xhtml#a96ec6b92792998e41f035dff6449f2d9">ResponseCalibration::fStatisticsApproxExt</a></div><div class="ttdeci">float ** fStatisticsApproxExt</div><div class="ttdef"><b>Definition:</b> DRS.h:336</div></div>
<div class="ttc" id="_d_r_s_8h_xhtml_a3b714eaad5c2b209326b5055e0cfb769ab65e5bf61f0666846ffc2622537bfef1"><div class="ttname"><a href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769ab65e5bf61f0666846ffc2622537bfef1">kNumberOfCalibChannelsV4</a></div><div class="ttdef"><b>Definition:</b> DRS.h:173</div></div>
<div class="ttc" id="class_response_calibration_1_1_calibration_data_xhtml_aa17cb550d34e0ca42bd41e68b3299d3c"><div class="ttname"><a href="class_response_calibration_1_1_calibration_data.xhtml#aa17cb550d34e0ca42bd41e68b3299d3c">ResponseCalibration::CalibrationData::fChannel</a></div><div class="ttdeci">CalibrationDataChannel * fChannel[10]</div><div class="ttdef"><b>Definition:</b> DRS.h:258</div></div>
<div class="ttc" id="class_d_r_s_xhtml_ae3609194596df0942d1e67e8c518d72e"><div class="ttname"><a href="class_d_r_s.xhtml#ae3609194596df0942d1e67e8c518d72e">DRS::GetNumberOfBoards</a></div><div class="ttdeci">int GetNumberOfBoards() const </div><div class="ttdef"><b>Definition:</b> DRS.h:941</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a6ff7923593598555d54616f7fcb27105"><div class="ttname"><a href="class_d_r_s_board.xhtml#a6ff7923593598555d54616f7fcb27105">DRSBoard::GetAcalMode</a></div><div class="ttdeci">int GetAcalMode()</div><div class="ttdef"><b>Definition:</b> DRS.h:730</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a15f20433802748c6c8729e7aa7e71ef3"><div class="ttname"><a href="class_d_r_s_board.xhtml#a15f20433802748c6c8729e7aa7e71ef3">DRSBoard::fADCClkPhase</a></div><div class="ttdeci">int fADCClkPhase</div><div class="ttdef"><b>Definition:</b> DRS.h:484</div></div>
<div class="ttc" id="class_response_calibration_xhtml_a5ec61d206194d18c6a144a422ce849b7"><div class="ttname"><a href="class_response_calibration.xhtml#a5ec61d206194d18c6a144a422ce849b7">ResponseCalibration::fCurrentLowVoltPoint</a></div><div class="ttdeci">int fCurrentLowVoltPoint</div><div class="ttdef"><b>Definition:</b> DRS.h:305</div></div>
<div class="ttc" id="class_response_calibration_xhtml_a0ec123af07fad22d27c7d5f6aeb263f1"><div class="ttname"><a href="class_response_calibration.xhtml#a0ec123af07fad22d27c7d5f6aeb263f1">ResponseCalibration::fOffset</a></div><div class="ttdeci">bool fOffset</div><div class="ttdef"><b>Definition:</b> DRS.h:291</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_ae2259efe7549f141d3030de671ff19cc"><div class="ttname"><a href="class_d_r_s_board.xhtml#ae2259efe7549f141d3030de671ff19cc">DRSBoard::GetSlotNumber</a></div><div class="ttdeci">int GetSlotNumber() const </div><div class="ttdef"><b>Definition:</b> DRS.h:617</div></div>
<div class="ttc" id="class_response_calibration_xhtml_a5bdc5fe786f6ce883484fda149ac731f"><div class="ttname"><a href="class_response_calibration.xhtml#a5bdc5fe786f6ce883484fda149ac731f">ResponseCalibration::fRecorded</a></div><div class="ttdeci">bool fRecorded</div><div class="ttdef"><b>Definition:</b> DRS.h:289</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a4962380d60965d1a20c19b2d4ab03023"><div class="ttname"><a href="class_d_r_s_board.xhtml#a4962380d60965d1a20c19b2d4ab03023">DRSBoard::fSyncDelay</a></div><div class="ttdeci">int fSyncDelay</div><div class="ttdef"><b>Definition:</b> DRS.h:515</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_ae8d2235dddb1843be39b30d039d28728"><div class="ttname"><a href="class_d_r_s_board.xhtml#ae8d2235dddb1843be39b30d039d28728">DRSBoard::fBoardSerialNumber</a></div><div class="ttdeci">int fBoardSerialNumber</div><div class="ttdef"><b>Definition:</b> DRS.h:478</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_aa6c8e34401073f34e69d8fcdff007435"><div class="ttname"><a href="class_d_r_s_board.xhtml#aa6c8e34401073f34e69d8fcdff007435">DRSBoard::GetPrecision</a></div><div class="ttdeci">double GetPrecision() const </div><div class="ttdef"><b>Definition:</b> DRS.h:757</div></div>
<div class="ttc" id="_d_r_s_8h_xhtml_ab7dcc7278f8e703da53de2ee769ce2f6af0536797208144380691e2b376ffc1d1"><div class="ttname"><a href="_d_r_s_8h.xhtml#ab7dcc7278f8e703da53de2ee769ce2f6af0536797208144380691e2b376ffc1d1">kSuccess</a></div><div class="ttdef"><b>Definition:</b> DRS.h:186</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a785e9cb5765be629656f7e46e25df81a"><div class="ttname"><a href="class_d_r_s_board.xhtml#a785e9cb5765be629656f7e46e25df81a">DRSBoard::fbkAcalVolt</a></div><div class="ttdeci">double fbkAcalVolt</div><div class="ttdef"><b>Definition:</b> DRS.h:528</div></div>
<div class="ttc" id="class_response_calibration_xhtml_a45e38c04c794c9225f3a76109490904a"><div class="ttname"><a href="class_response_calibration.xhtml#a45e38c04c794c9225f3a76109490904a">ResponseCalibration::fGainMax</a></div><div class="ttdeci">double fGainMax</div><div class="ttdef"><b>Definition:</b> DRS.h:333</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a1a57282bafdb8a3c46856ebf7928ed69"><div class="ttname"><a href="class_d_r_s_board.xhtml#a1a57282bafdb8a3c46856ebf7928ed69">DRSBoard::GetChannelCascading</a></div><div class="ttdeci">int GetChannelCascading() const </div><div class="ttdef"><b>Definition:</b> DRS.h:599</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a8353e70ecd25d9b46e21dcf759ca97d4"><div class="ttname"><a href="class_d_r_s_board.xhtml#a8353e70ecd25d9b46e21dcf759ca97d4">DRSBoard::fSlotNumber</a></div><div class="ttdeci">int fSlotNumber</div><div class="ttdef"><b>Definition:</b> DRS.h:494</div></div>
<div class="ttc" id="class_response_calibration_xhtml_a37c0d878da2c40e42cdd35e1f5b15eaf"><div class="ttname"><a href="class_response_calibration.xhtml#a37c0d878da2c40e42cdd35e1f5b15eaf">ResponseCalibration::fXXFit</a></div><div class="ttdeci">double * fXXFit</div><div class="ttdef"><b>Definition:</b> DRS.h:326</div></div>
<div class="ttc" id="class_response_calibration_xhtml_a65eedce096d393bf41a2335b718b6aa6"><div class="ttname"><a href="class_response_calibration.xhtml#a65eedce096d393bf41a2335b718b6aa6">ResponseCalibration::fCurrentFitBin</a></div><div class="ttdeci">int fCurrentFitBin</div><div class="ttdef"><b>Definition:</b> DRS.h:309</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_ac624adb24e52f6c145a3e41f629b8213"><div class="ttname"><a href="class_d_r_s_board.xhtml#ac624adb24e52f6c145a3e41f629b8213">DRSBoard::GetTriggerEnable</a></div><div class="ttdeci">int GetTriggerEnable(int i)</div><div class="ttdef"><b>Definition:</b> DRS.h:636</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_ab86c27feb85fe21e91e611c91bf2a552"><div class="ttname"><a href="class_d_r_s_board.xhtml#ab86c27feb85fe21e91e611c91bf2a552">DRSBoard::ReadoutChannel2Input</a></div><div class="ttdeci">int ReadoutChannel2Input(int readout) const </div><div class="ttdef"><b>Definition:</b> DRS.h:884</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a76f2743bb11d7f19bbcf4a6c9c5db9fc"><div class="ttname"><a href="class_d_r_s_board.xhtml#a76f2743bb11d7f19bbcf4a6c9c5db9fc">DRSBoard::fDAC_ROFS_1</a></div><div class="ttdeci">unsigned int fDAC_ROFS_1</div><div class="ttdef"><b>Definition:</b> DRS.h:451</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a650cf228e0fd1b42e1063bce9426e8d9"><div class="ttname"><a href="class_d_r_s_board.xhtml#a650cf228e0fd1b42e1063bce9426e8d9">DRSBoard::GetBoardType</a></div><div class="ttdeci">int GetBoardType() const </div><div class="ttdef"><b>Definition:</b> DRS.h:592</div></div>
<div class="ttc" id="class_response_calibration_xhtml_ad12db4128a40b895fc96ee86470712c5"><div class="ttname"><a href="class_response_calibration.xhtml#ad12db4128a40b895fc96ee86470712c5">ResponseCalibration::fYYFitRes</a></div><div class="ttdeci">double * fYYFitRes</div><div class="ttdef"><b>Definition:</b> DRS.h:329</div></div>
<div class="ttc" id="class_d_r_s_xhtml"><div class="ttname"><a href="class_d_r_s.xhtml">DRS</a></div><div class="ttdef"><b>Definition:</b> DRS.h:914</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a15214c8a9683e1655da038d8c1a979d7"><div class="ttname"><a href="class_d_r_s_board.xhtml#a15214c8a9683e1655da038d8c1a979d7">DRSBoard::fAcalVolt</a></div><div class="ttdeci">double fAcalVolt</div><div class="ttdef"><b>Definition:</b> DRS.h:527</div></div>
<div class="ttc" id="class_response_calibration_xhtml_aefd794778dac80fb43214f9485f46723"><div class="ttname"><a href="class_response_calibration.xhtml#aefd794778dac80fb43214f9485f46723">ResponseCalibration::fInitialized</a></div><div class="ttdeci">bool fInitialized</div><div class="ttdef"><b>Definition:</b> DRS.h:288</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a28cf9658a2727dbca1412cc4eeccc677"><div class="ttname"><a href="class_d_r_s_board.xhtml#a28cf9658a2727dbca1412cc4eeccc677">DRSBoard::fExternalClockFrequency</a></div><div class="ttdeci">double fExternalClockFrequency</div><div class="ttdef"><b>Definition:</b> DRS.h:486</div></div>
<div class="ttc" id="class_response_calibration_xhtml_a6206cae7b8d4105c777a38309ebd98c2"><div class="ttname"><a href="class_response_calibration.xhtml#a6206cae7b8d4105c777a38309ebd98c2">ResponseCalibration::GetGainAt</a></div><div class="ttdeci">double GetGainAt(int chip, int chn, int bin) const </div><div class="ttdef"><b>Definition:</b> DRS.h:378</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_ad54d8816fa94c56763731db6a5a2f906"><div class="ttname"><a href="class_d_r_s_board.xhtml#ad54d8816fa94c56763731db6a5a2f906">DRSBoard::GetTriggerDelayNs</a></div><div class="ttdeci">double GetTriggerDelayNs()</div><div class="ttdef"><b>Definition:</b> DRS.h:641</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a1642426a4847e47fe09e55327b796543"><div class="ttname"><a href="class_d_r_s_board.xhtml#a1642426a4847e47fe09e55327b796543">DRSBoard::HasMultiBuffer</a></div><div class="ttdeci">int HasMultiBuffer() const </div><div class="ttdef"><b>Definition:</b> DRS.h:588</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_ad8f5d21e64d5dd07cf9243403dc9f134"><div class="ttname"><a href="class_d_r_s_board.xhtml#ad8f5d21e64d5dd07cf9243403dc9f134">DRSBoard::fResponseCalibration</a></div><div class="ttdeci">ResponseCalibration * fResponseCalibration</div><div class="ttdef"><b>Definition:</b> DRS.h:544</div></div>
<div class="ttc" id="_d_r_s_8h_xhtml_a3b714eaad5c2b209326b5055e0cfb769a466a91ab36a4a9c29f6f546fc603e9e7"><div class="ttname"><a href="_d_r_s_8h.xhtml#a3b714eaad5c2b209326b5055e0cfb769a466a91ab36a4a9c29f6f546fc603e9e7">kFrequencyCacheSize</a></div><div class="ttdef"><b>Definition:</b> DRS.h:176</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a810cd9b3047f5feaa0c4cb293635010e"><div class="ttname"><a href="class_d_r_s_board.xhtml#a810cd9b3047f5feaa0c4cb293635010e">DRSBoard::fDAC_COFSA</a></div><div class="ttdeci">unsigned int fDAC_COFSA</div><div class="ttdef"><b>Definition:</b> DRS.h:438</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a4acfbf5d02adf30cabc59b97f1453066"><div class="ttname"><a href="class_d_r_s_board.xhtml#a4acfbf5d02adf30cabc59b97f1453066">DRSBoard::GetCalibratedFrequency</a></div><div class="ttdeci">double GetCalibratedFrequency(void)</div><div class="ttdef"><b>Definition:</b> DRS.h:693</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a4b3137730f93e6faf716db3bc48d3e1f"><div class="ttname"><a href="class_d_r_s_board.xhtml#a4b3137730f93e6faf716db3bc48d3e1f">DRSBoard::GetWaveformBufferSize</a></div><div class="ttdeci">int GetWaveformBufferSize() const </div><div class="ttdef"><b>Definition:</b> DRS.h:792</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a7dbb7d671c8e436b993a5e87b31065b4"><div class="ttname"><a href="class_d_r_s_board.xhtml#a7dbb7d671c8e436b993a5e87b31065b4">DRSBoard::fDAC_BIAS</a></div><div class="ttdeci">unsigned int fDAC_BIAS</div><div class="ttdef"><b>Definition:</b> DRS.h:454</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_ac6c1701467bf3e5c8d9876776eab9af9"><div class="ttname"><a href="class_d_r_s_board.xhtml#ac6c1701467bf3e5c8d9876776eab9af9">DRSBoard::fDAC_DSA</a></div><div class="ttdeci">unsigned int fDAC_DSA</div><div class="ttdef"><b>Definition:</b> DRS.h:441</div></div>
<div class="ttc" id="class_response_calibration_1_1_calibration_data_xhtml_ae4ba6eb1d639ba78265d1280a7f0b65f"><div class="ttname"><a href="class_response_calibration_1_1_calibration_data.xhtml#ae4ba6eb1d639ba78265d1280a7f0b65f">ResponseCalibration::CalibrationData::fStartTemperature</a></div><div class="ttdeci">float fStartTemperature</div><div class="ttdef"><b>Definition:</b> DRS.h:261</div></div>
<div class="ttc" id="class_d_r_s_board_1_1_time_data_1_1_frequency_data_xhtml"><div class="ttname"><a href="class_d_r_s_board_1_1_time_data_1_1_frequency_data.xhtml">DRSBoard::TimeData::FrequencyData</a></div><div class="ttdef"><b>Definition:</b> DRS.h:406</div></div>
<div class="ttc" id="_d_r_s_8h_xhtml_ab7dcc7278f8e703da53de2ee769ce2f6a1025b7f454dbc127c2a52b796550eaba"><div class="ttname"><a href="_d_r_s_8h.xhtml#ab7dcc7278f8e703da53de2ee769ce2f6a1025b7f454dbc127c2a52b796550eaba">kZeroSuppression</a></div><div class="ttdef"><b>Definition:</b> DRS.h:190</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a253ccc162302cd31960988dcff9514e3"><div class="ttname"><a href="class_d_r_s_board.xhtml#a253ccc162302cd31960988dcff9514e3">DRSBoard::fTimeData</a></div><div class="ttdeci">TimeData ** fTimeData</div><div class="ttdef"><b>Definition:</b> DRS.h:558</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a4822d5373d7bfd088bd08050a8ac137e"><div class="ttname"><a href="class_d_r_s_board.xhtml#a4822d5373d7bfd088bd08050a8ac137e">DRSBoard::fDAC_TLEVEL</a></div><div class="ttdeci">unsigned int fDAC_TLEVEL</div><div class="ttdef"><b>Definition:</b> DRS.h:442</div></div>
<div class="ttc" id="class_d_r_s_board_1_1_time_data_xhtml_a3377f911684400cee12a54ed65bbe911"><div class="ttname"><a href="class_d_r_s_board_1_1_time_data.xhtml#a3377f911684400cee12a54ed65bbe911">DRSBoard::TimeData::TimeData</a></div><div class="ttdeci">TimeData()</div><div class="ttdef"><b>Definition:</b> DRS.h:424</div></div>
<div class="ttc" id="class_response_calibration_xhtml_a6e353f2832065570b4d3c60355ed6b79"><div class="ttname"><a href="class_response_calibration.xhtml#a6e353f2832065570b4d3c60355ed6b79">ResponseCalibration::fFitted</a></div><div class="ttdeci">bool fFitted</div><div class="ttdef"><b>Definition:</b> DRS.h:290</div></div>
<div class="ttc" id="class_response_calibration_xhtml_a7f98a5fc6bbab00fa8756f446010e9ba"><div class="ttname"><a href="class_response_calibration.xhtml#a7f98a5fc6bbab00fa8756f446010e9ba">ResponseCalibration::fNumberOfXConstPoints</a></div><div class="ttdeci">int fNumberOfXConstPoints</div><div class="ttdef"><b>Definition:</b> DRS.h:299</div></div>
<div class="ttc" id="class_response_calibration_xhtml"><div class="ttname"><a href="class_response_calibration.xhtml">ResponseCalibration</a></div><div class="ttdef"><b>Definition:</b> DRS.h:207</div></div>
<div class="ttc" id="class_response_calibration_xhtml_a96791ce93919fe3cb43ade0ef3c1db0b"><div class="ttname"><a href="class_response_calibration.xhtml#a96791ce93919fe3cb43ade0ef3c1db0b">ResponseCalibration::fPrecision</a></div><div class="ttdeci">double fPrecision</div><div class="ttdef"><b>Definition:</b> DRS.h:285</div></div>
<div class="ttc" id="class_response_calibration_xhtml_a38373f79698b8292d110936b01b91380"><div class="ttname"><a href="class_response_calibration.xhtml#a38373f79698b8292d110936b01b91380">ResponseCalibration::GetMeasPointXAt</a></div><div class="ttdeci">double GetMeasPointXAt(int ip) const </div><div class="ttdef"><b>Definition:</b> DRS.h:379</div></div>
<div class="ttc" id="class_d_r_s_board_xhtml_a9d17f829582742178f2a3eefe894c4a4"><div class="ttname"><a href="class_d_r_s_board.xhtml#a9d17f829582742178f2a3eefe894c4a4">DRSBoard::GetFirmwareVersion</a></div><div class="ttdeci">int GetFirmwareVersion() const </div><div class="ttdef"><b>Definition:</b> DRS.h:589</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_472fafaf0f039b9e6b043966c1ef7dbf.xhtml">data</a></li><li class="navelem"><a class="el" href="dir_a60e370613dab7e7dc459045dd6e3050.xhtml">Software</a></li><li class="navelem"><a class="el" href="dir_b7037f21e3066119b95b62c0b145af72.xhtml">DAQ</a></li><li class="navelem"><a class="el" href="dir_f16a1199feb0526b88f97700734c6346.xhtml">PDAQ</a></li><li class="navelem"><a class="el" href="dir_ad10ffc1a59efda2451efef380d4736c.xhtml">Core</a></li><li class="navelem"><a class="el" href="dir_ef12b0b33126966955a586281bd8f91e.xhtml">Include</a></li><li class="navelem"><a class="el" href="_d_r_s_8h.xhtml">DRS.h</a></li>
    <li class="footer">Generated on Mon Jan 4 2016 11:52:45 by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.12 </li>
  </ul>
</div>
</body>
</html>
